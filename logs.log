2025-07-02 14:25:57,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:25:57,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:25:57,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:25:57,125:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:27:06,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:27:06,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:27:06,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:27:06,079:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:27:16,340:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.2-dark/gui.py:421: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:28:10,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:10,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:10,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:10,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:20,215:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.2-dark/gui.py:421: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:28:42,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:42,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:42,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:42,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:28:51,650:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.2-dark/gui.py:421: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:31:22,804:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.2-dark/gui.py:421: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:31:54,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:31:54,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:31:54,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:31:54,979:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:32:04,823:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.2-dark/gui.py:421: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:48:16,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:48:16,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:48:16,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:48:16,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:49:08,631:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.2-dark/gui.py:421: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:56:10,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:10,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:10,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:10,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:56:32,693:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 14:57:24,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:57:24,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:57:24,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:57:24,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 14:57:41,474:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 15:13:51,058:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 15:18:25,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:18:25,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:18:25,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:18:25,285:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:18:51,819:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 15:21:37,861:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 15:26:05,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:26:05,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:26:05,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:26:05,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-02 15:26:27,419:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-02 15:28:13,013:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.3-dark/gui.py:443: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 12:00:14,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 12:00:14,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 12:00:14,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 12:00:14,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:44:51,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:44:51,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:44:51,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:44:51,924:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:34,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:34,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:34,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:34,964:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:53,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:53,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:53,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:45:53,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:32,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:32,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:32,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:32,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:52,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:52,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:52,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:46:52,930:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:47:53,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:47:53,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:47:53,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:47:53,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:25,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:25,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:25,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:25,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:55,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:55,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:55,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:48:55,484:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:49:17,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:49:17,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:49:17,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:49:17,976:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:50:52,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:50:52,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:50:52,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:50:52,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:51:19,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:51:19,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:51:19,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:51:19,615:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 13:51:30,137:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 14:01:08,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:01:08,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:01:08,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:01:08,663:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:03:51,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:03:51,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:03:51,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:03:51,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:02,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:02,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:02,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:02,369:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:58,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:58,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:58,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:06:58,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:30,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:30,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:30,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:30,195:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:47,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:47,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:47,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:09:47,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:15:04,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:15:04,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:15:04,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:15:04,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:18:52,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:18:52,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:18:52,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:18:52,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:22:19,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:22:19,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:22:19,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:22:19,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:25:37,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:25:37,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:25:37,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:25:37,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:27:33,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:27:33,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:27:33,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:27:33,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:30:54,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:30:54,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:30:54,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:30:54,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:32:29,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:32:29,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:32:29,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:32:29,433:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:34:47,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:34:47,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:34:47,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:34:47,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:16,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:16,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:16,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:16,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:56,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:56,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:56,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:35:56,067:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:36:26,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:36:26,062:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:36:26,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:36:26,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:38,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:38,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:38,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:38,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:52,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:52,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:52,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:52,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:40:53,416:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:224: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=5)

2025-07-06 14:43:26,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:43:26,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:43:26,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:43:26,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:43:27,293:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:230: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=5)

2025-07-06 14:45:10,116:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:45:10,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:45:10,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:45:10,117:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:45:10,501:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:230: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=20)

2025-07-06 14:46:13,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:13,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:13,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:13,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:13,667:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:230: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=20)

2025-07-06 14:46:32,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:32,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:32,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:32,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:46:32,942:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:230: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=20)

2025-07-06 14:54:06,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:06,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:06,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:06,120:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:06,554:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:216: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=20)

2025-07-06 14:54:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:37,917:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:54:38,345:WARNING:/home/bentoaz/scenario_visualization/difference_plot.py:216: MatplotlibDeprecationWarning: Auto-removal of grids by pcolor() and pcolormesh() is deprecated since 3.5 and will be removed two minor releases later; please call grid(False) first.
  cbar = plt.colorbar(scatter, ax=ax, shrink=0.5, aspect=20)

2025-07-06 14:55:44,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:55:44,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:55:44,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 14:55:44,006:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:00:05,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:00:05,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:00:05,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:00:05,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:00:19,319:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:02:28,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:02:28,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:02:28,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:02:28,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:02:37,248:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:08:25,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:08:25,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:08:25,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:08:25,473:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:08:33,768:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:25:09,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:25:09,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:25:09,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:25:09,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:25:24,851:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:44:09,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:44:09,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:44:09,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:44:09,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:44:12,130:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:45:34,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:45:34,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:45:34,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:45:34,648:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:45:37,634:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:46:14,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:14,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:14,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:14,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:17,172:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:46:39,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:39,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:39,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:39,293:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:46:43,016:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:47:28,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:47:28,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:47:28,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:47:28,015:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:47:33,406:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:54:56,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:54:56,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:54:56,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:54:56,657:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 15:54:59,132:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 15:58:22,570:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:00:09,767:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:00:11,210:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:00:20,903:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:00:23,226:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:00:30,915:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:00:56,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:00:56,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:00:56,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:00:56,810:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:01:02,193:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:01:14,718:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:10:36,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:10:36,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:10:36,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:10:36,724:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:10:46,536:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:11:15,342:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:18:52,222:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:19:01,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:01,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:01,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:01,302:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:05,984:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:19:18,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:18,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:18,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:18,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:21,896:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:19:23,174:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:19:44,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:44,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:44,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:44,187:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:19:48,447:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:19:53,038:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:31:33,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:31:33,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:31:33,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:31:33,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:31:37,065:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:31:50,267:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:52:24,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:52:24,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:52:24,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:52:24,951:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-06 16:52:40,861:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-07-06 16:53:47,837:WARNING:/home/bentoaz/scenario_visualization/scenario-visualization-toolkit-v1.0.4-dark/gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 20:52:23,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 20:52:23,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 20:52:23,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 20:52:23,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:07:40,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:07:40,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:07:40,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:07:40,432:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:10:23,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:10:23,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:10:23,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:10:23,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:10:37,691:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 21:16:11,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:16:11,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:16:11,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:16:11,243:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:18:24,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:18:24,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:18:24,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:18:24,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:18:32,156:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 21:18:47,052:INFO:PyCaret RegressionExperiment
2025-09-05 21:18:47,052:INFO:Logging name: reg-default-name
2025-09-05 21:18:47,053:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-05 21:18:47,053:INFO:version 3.3.2
2025-09-05 21:18:47,053:INFO:Initializing setup()
2025-09-05 21:18:47,053:INFO:self.USI: 1e0c
2025-09-05 21:18:47,053:INFO:self._variable_keys: {'y', 'idx', 'X', 'X_train', 'fold_shuffle_param', 'log_plots_param', 'transform_target_param', '_ml_usecase', 'seed', 'logging_param', 'pipeline', 'USI', 'exp_name_log', 'exp_id', '_available_plots', 'gpu_param', 'gpu_n_jobs_param', 'target_param', 'X_test', 'fold_groups_param', 'y_train', 'y_test', 'html_param', 'n_jobs_param', 'fold_generator', 'memory', 'data'}
2025-09-05 21:18:47,053:INFO:Checking environment
2025-09-05 21:18:47,053:INFO:python_version: 3.11.9
2025-09-05 21:18:47,053:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-05 21:18:47,053:INFO:machine: AMD64
2025-09-05 21:18:47,065:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-05 21:18:47,065:INFO:Memory: svmem(total=16766066688, available=3657695232, percent=78.2, used=13108371456, free=3657695232)
2025-09-05 21:18:47,065:INFO:Physical Core: 16
2025-09-05 21:18:47,065:INFO:Logical Core: 22
2025-09-05 21:18:47,065:INFO:Checking libraries
2025-09-05 21:18:47,065:INFO:System:
2025-09-05 21:18:47,065:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-05 21:18:47,065:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-05 21:18:47,065:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-05 21:18:47,065:INFO:PyCaret required dependencies:
2025-09-05 21:18:47,121:INFO:                 pip: 25.2
2025-09-05 21:18:47,121:INFO:          setuptools: 65.5.0
2025-09-05 21:18:47,121:INFO:             pycaret: 3.3.2
2025-09-05 21:18:47,121:INFO:             IPython: 9.5.0
2025-09-05 21:18:47,121:INFO:          ipywidgets: 8.1.7
2025-09-05 21:18:47,121:INFO:                tqdm: 4.67.1
2025-09-05 21:18:47,121:INFO:               numpy: 1.26.4
2025-09-05 21:18:47,121:INFO:              pandas: 2.1.4
2025-09-05 21:18:47,121:INFO:              jinja2: 3.1.6
2025-09-05 21:18:47,121:INFO:               scipy: 1.11.4
2025-09-05 21:18:47,121:INFO:              joblib: 1.3.2
2025-09-05 21:18:47,121:INFO:             sklearn: 1.4.2
2025-09-05 21:18:47,121:INFO:                pyod: 2.0.5
2025-09-05 21:18:47,121:INFO:            imblearn: 0.14.0
2025-09-05 21:18:47,121:INFO:   category_encoders: 2.7.0
2025-09-05 21:18:47,121:INFO:            lightgbm: 4.6.0
2025-09-05 21:18:47,121:INFO:               numba: 0.61.2
2025-09-05 21:18:47,121:INFO:            requests: 2.32.5
2025-09-05 21:18:47,121:INFO:          matplotlib: 3.7.5
2025-09-05 21:18:47,121:INFO:          scikitplot: 0.3.7
2025-09-05 21:18:47,121:INFO:         yellowbrick: 1.5
2025-09-05 21:18:47,121:INFO:              plotly: 6.3.0
2025-09-05 21:18:47,121:INFO:    plotly-resampler: Not installed
2025-09-05 21:18:47,121:INFO:             kaleido: 1.0.0
2025-09-05 21:18:47,121:INFO:           schemdraw: 0.15
2025-09-05 21:18:47,121:INFO:         statsmodels: 0.14.5
2025-09-05 21:18:47,121:INFO:              sktime: 0.26.0
2025-09-05 21:18:47,121:INFO:               tbats: 1.1.3
2025-09-05 21:18:47,121:INFO:            pmdarima: 2.0.4
2025-09-05 21:18:47,121:INFO:              psutil: 7.0.0
2025-09-05 21:18:47,121:INFO:          markupsafe: 3.0.2
2025-09-05 21:18:47,121:INFO:             pickle5: Not installed
2025-09-05 21:18:47,121:INFO:         cloudpickle: 3.1.1
2025-09-05 21:18:47,121:INFO:         deprecation: 2.1.0
2025-09-05 21:18:47,121:INFO:              xxhash: 3.5.0
2025-09-05 21:18:47,121:INFO:           wurlitzer: Not installed
2025-09-05 21:18:47,121:INFO:PyCaret optional dependencies:
2025-09-05 21:18:47,207:INFO:                shap: 0.48.0
2025-09-05 21:18:47,207:INFO:           interpret: Not installed
2025-09-05 21:18:47,207:INFO:                umap: Not installed
2025-09-05 21:18:47,207:INFO:     ydata_profiling: Not installed
2025-09-05 21:18:47,207:INFO:  explainerdashboard: Not installed
2025-09-05 21:18:47,207:INFO:             autoviz: Not installed
2025-09-05 21:18:47,207:INFO:           fairlearn: Not installed
2025-09-05 21:18:47,207:INFO:          deepchecks: Not installed
2025-09-05 21:18:47,207:INFO:             xgboost: 3.0.5
2025-09-05 21:18:47,207:INFO:            catboost: Not installed
2025-09-05 21:18:47,207:INFO:              kmodes: Not installed
2025-09-05 21:18:47,207:INFO:             mlxtend: Not installed
2025-09-05 21:18:47,207:INFO:       statsforecast: Not installed
2025-09-05 21:18:47,207:INFO:        tune_sklearn: Not installed
2025-09-05 21:18:47,207:INFO:                 ray: Not installed
2025-09-05 21:18:47,207:INFO:            hyperopt: Not installed
2025-09-05 21:18:47,207:INFO:              optuna: Not installed
2025-09-05 21:18:47,207:INFO:               skopt: Not installed
2025-09-05 21:18:47,207:INFO:              mlflow: Not installed
2025-09-05 21:18:47,207:INFO:              gradio: Not installed
2025-09-05 21:18:47,207:INFO:             fastapi: Not installed
2025-09-05 21:18:47,207:INFO:             uvicorn: Not installed
2025-09-05 21:18:47,207:INFO:              m2cgen: Not installed
2025-09-05 21:18:47,207:INFO:           evidently: Not installed
2025-09-05 21:18:47,207:INFO:               fugue: Not installed
2025-09-05 21:18:47,207:INFO:           streamlit: Not installed
2025-09-05 21:18:47,207:INFO:             prophet: Not installed
2025-09-05 21:18:47,207:INFO:None
2025-09-05 21:18:47,207:INFO:Set up data.
2025-09-05 21:18:47,372:INFO:Set up folding strategy.
2025-09-05 21:18:47,374:INFO:Set up train/test split.
2025-09-05 21:18:47,555:INFO:Set up index.
2025-09-05 21:18:47,563:INFO:Assigning column types.
2025-09-05 21:18:47,743:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-05 21:18:47,743:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,745:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,748:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,907:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,940:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:47,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:47,942:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,944:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:18:47,946:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,100:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,126:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:48,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:48,126:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-05 21:18:48,128:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,131:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,281:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,307:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:48,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:48,314:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,314:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,463:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,484:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,484:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:48,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:48,485:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-05 21:18:48,489:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,612:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,635:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:48,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:48,641:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,827:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:48,848:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:48,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:48,848:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-05 21:18:48,977:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:49,000:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:49,000:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:49,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:49,130:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:49,150:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:18:49,150:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:49,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:49,150:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-05 21:18:49,281:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:49,302:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:49,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:49,429:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:18:49,449:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:49,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:49,451:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-05 21:18:49,593:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:49,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:49,730:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:49,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:49,735:INFO:Preparing preprocessing pipeline...
2025-09-05 21:18:49,735:INFO:Set up simple imputation.
2025-09-05 21:18:49,735:INFO:Set up feature normalization.
2025-09-05 21:18:49,753:INFO:Set up column name cleaning.
2025-09-05 21:18:50,163:INFO:Finished creating preprocessing pipeline.
2025-09-05 21:18:50,169:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-05 21:18:50,169:INFO:Creating final display dataframe.
2025-09-05 21:18:51,075:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target           action1
2                   Target type        Regression
3           Original data shape      (15000, 507)
4        Transformed data shape      (15000, 507)
5   Transformed train set shape      (10500, 507)
6    Transformed test set shape       (4500, 507)
7              Numeric features               506
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              1e0c
2025-09-05 21:18:51,317:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:51,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:51,458:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:18:51,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:18:51,458:INFO:setup() successfully completed in 4.41s...............
2025-09-05 21:18:51,458:INFO:Initializing compare_models()
2025-09-05 21:18:51,458:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-05 21:18:51,458:INFO:Checking exceptions
2025-09-05 21:18:51,513:INFO:Preparing display monitor
2025-09-05 21:18:51,521:INFO:Initializing Decision Tree Regressor
2025-09-05 21:18:51,521:INFO:Total runtime is 0.0 minutes
2025-09-05 21:18:51,521:INFO:SubProcess create_model() called ==================================
2025-09-05 21:18:51,521:INFO:Initializing create_model()
2025-09-05 21:18:51,521:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000135DC54DFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:18:51,521:INFO:Checking exceptions
2025-09-05 21:18:51,521:INFO:Importing libraries
2025-09-05 21:18:51,521:INFO:Copying training dataset
2025-09-05 21:18:51,658:INFO:Defining folds
2025-09-05 21:18:51,658:INFO:Declaring metric variables
2025-09-05 21:18:51,658:INFO:Importing untrained model
2025-09-05 21:18:51,658:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:18:51,658:INFO:Starting cross validation
2025-09-05 21:18:51,667:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:18:56,518:INFO:Calculating mean and std
2025-09-05 21:18:56,518:INFO:Creating metrics dataframe
2025-09-05 21:18:56,520:INFO:Uploading results into container
2025-09-05 21:18:56,520:INFO:Uploading model into container now
2025-09-05 21:18:56,522:INFO:_master_model_container: 1
2025-09-05 21:18:56,522:INFO:_display_container: 2
2025-09-05 21:18:56,522:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:18:56,522:INFO:create_model() successfully completed......................................
2025-09-05 21:18:56,606:INFO:SubProcess create_model() end ==================================
2025-09-05 21:18:56,606:INFO:Creating metrics dataframe
2025-09-05 21:18:56,625:INFO:Initializing Random Forest Regressor
2025-09-05 21:18:56,625:INFO:Total runtime is 0.08506457805633545 minutes
2025-09-05 21:18:56,625:INFO:SubProcess create_model() called ==================================
2025-09-05 21:18:56,625:INFO:Initializing create_model()
2025-09-05 21:18:56,625:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000135DC54DFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:18:56,625:INFO:Checking exceptions
2025-09-05 21:18:56,625:INFO:Importing libraries
2025-09-05 21:18:56,625:INFO:Copying training dataset
2025-09-05 21:18:56,749:INFO:Defining folds
2025-09-05 21:18:56,749:INFO:Declaring metric variables
2025-09-05 21:18:56,749:INFO:Importing untrained model
2025-09-05 21:18:56,749:INFO:Random Forest Regressor Imported successfully
2025-09-05 21:18:56,749:INFO:Starting cross validation
2025-09-05 21:18:56,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:19:42,476:INFO:Calculating mean and std
2025-09-05 21:19:42,476:INFO:Creating metrics dataframe
2025-09-05 21:19:42,478:INFO:Uploading results into container
2025-09-05 21:19:42,478:INFO:Uploading model into container now
2025-09-05 21:19:42,478:INFO:_master_model_container: 2
2025-09-05 21:19:42,478:INFO:_display_container: 2
2025-09-05 21:19:42,478:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-05 21:19:42,478:INFO:create_model() successfully completed......................................
2025-09-05 21:19:42,582:INFO:SubProcess create_model() end ==================================
2025-09-05 21:19:42,582:INFO:Creating metrics dataframe
2025-09-05 21:19:42,582:INFO:Initializing Gradient Boosting Regressor
2025-09-05 21:19:42,582:INFO:Total runtime is 0.8510084350903829 minutes
2025-09-05 21:19:42,582:INFO:SubProcess create_model() called ==================================
2025-09-05 21:19:42,582:INFO:Initializing create_model()
2025-09-05 21:19:42,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000135DC54DFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:19:42,582:INFO:Checking exceptions
2025-09-05 21:19:42,582:INFO:Importing libraries
2025-09-05 21:19:42,582:INFO:Copying training dataset
2025-09-05 21:19:42,744:INFO:Defining folds
2025-09-05 21:19:42,744:INFO:Declaring metric variables
2025-09-05 21:19:42,744:INFO:Importing untrained model
2025-09-05 21:19:42,744:INFO:Gradient Boosting Regressor Imported successfully
2025-09-05 21:19:42,744:INFO:Starting cross validation
2025-09-05 21:19:42,744:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:20:32,299:INFO:Calculating mean and std
2025-09-05 21:20:32,299:INFO:Creating metrics dataframe
2025-09-05 21:20:32,301:INFO:Uploading results into container
2025-09-05 21:20:32,301:INFO:Uploading model into container now
2025-09-05 21:20:32,301:INFO:_master_model_container: 3
2025-09-05 21:20:32,301:INFO:_display_container: 2
2025-09-05 21:20:32,301:INFO:GradientBoostingRegressor(random_state=791)
2025-09-05 21:20:32,301:INFO:create_model() successfully completed......................................
2025-09-05 21:20:32,372:INFO:SubProcess create_model() end ==================================
2025-09-05 21:20:32,372:INFO:Creating metrics dataframe
2025-09-05 21:20:32,372:INFO:Initializing Extreme Gradient Boosting
2025-09-05 21:20:32,372:INFO:Total runtime is 1.680848777294159 minutes
2025-09-05 21:20:32,372:INFO:SubProcess create_model() called ==================================
2025-09-05 21:20:32,372:INFO:Initializing create_model()
2025-09-05 21:20:32,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000135DC54DFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:20:32,372:INFO:Checking exceptions
2025-09-05 21:20:32,372:INFO:Importing libraries
2025-09-05 21:20:32,372:INFO:Copying training dataset
2025-09-05 21:20:32,500:INFO:Defining folds
2025-09-05 21:20:32,500:INFO:Declaring metric variables
2025-09-05 21:20:32,500:INFO:Importing untrained model
2025-09-05 21:20:32,501:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:20:32,501:INFO:Starting cross validation
2025-09-05 21:20:32,501:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:20:38,949:INFO:Calculating mean and std
2025-09-05 21:20:38,949:INFO:Creating metrics dataframe
2025-09-05 21:20:38,949:INFO:Uploading results into container
2025-09-05 21:20:38,952:INFO:Uploading model into container now
2025-09-05 21:20:38,952:INFO:_master_model_container: 4
2025-09-05 21:20:38,952:INFO:_display_container: 2
2025-09-05 21:20:38,952:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:20:38,952:INFO:create_model() successfully completed......................................
2025-09-05 21:20:39,023:INFO:SubProcess create_model() end ==================================
2025-09-05 21:20:39,023:INFO:Creating metrics dataframe
2025-09-05 21:20:39,031:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-05 21:20:39,031:INFO:Initializing create_model()
2025-09-05 21:20:39,031:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:20:39,031:INFO:Checking exceptions
2025-09-05 21:20:39,031:INFO:Importing libraries
2025-09-05 21:20:39,031:INFO:Copying training dataset
2025-09-05 21:20:39,173:INFO:Defining folds
2025-09-05 21:20:39,173:INFO:Declaring metric variables
2025-09-05 21:20:39,173:INFO:Importing untrained model
2025-09-05 21:20:39,173:INFO:Declaring custom model
2025-09-05 21:20:39,173:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:20:39,184:INFO:Cross validation set to False
2025-09-05 21:20:39,184:INFO:Fitting Model
2025-09-05 21:20:40,452:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:20:40,452:INFO:create_model() successfully completed......................................
2025-09-05 21:20:40,579:INFO:_master_model_container: 4
2025-09-05 21:20:40,579:INFO:_display_container: 2
2025-09-05 21:20:40,579:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:20:40,579:INFO:compare_models() successfully completed......................................
2025-09-05 21:20:40,595:INFO:Initializing finalize_model()
2025-09-05 21:20:40,595:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-05 21:20:40,596:INFO:Finalizing XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:20:40,684:INFO:Initializing create_model()
2025-09-05 21:20:40,684:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000135CD3B8390>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:20:40,684:INFO:Checking exceptions
2025-09-05 21:20:40,685:INFO:Importing libraries
2025-09-05 21:20:40,685:INFO:Copying training dataset
2025-09-05 21:20:40,697:INFO:Defining folds
2025-09-05 21:20:40,697:INFO:Declaring metric variables
2025-09-05 21:20:40,697:INFO:Importing untrained model
2025-09-05 21:20:40,697:INFO:Declaring custom model
2025-09-05 21:20:40,697:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:20:40,707:INFO:Cross validation set to False
2025-09-05 21:20:40,707:INFO:Fitting Model
2025-09-05 21:20:42,257:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:20:42,257:INFO:create_model() successfully completed......................................
2025-09-05 21:20:42,370:INFO:_master_model_container: 4
2025-09-05 21:20:42,370:INFO:_display_container: 2
2025-09-05 21:20:42,380:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:20:42,380:INFO:finalize_model() successfully completed......................................
2025-09-05 21:20:42,451:INFO:Initializing save_model()
2025-09-05 21:20:42,451:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))]), model_name=out/action1/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-05 21:20:42,451:INFO:Adding model into prep_pipe
2025-09-05 21:20:42,451:WARNING:Only Model saved as it was a pipeline.
2025-09-05 21:20:42,470:INFO:out/action1/pycaret/model.pkl saved in current working directory
2025-09-05 21:20:42,480:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:20:42,480:INFO:save_model() successfully completed......................................
2025-09-05 21:20:43,327:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:20:45,094:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-05 21:21:33,980:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:23:55,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:23:55,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:23:55,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:23:55,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:24:02,788:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 21:24:11,091:INFO:PyCaret RegressionExperiment
2025-09-05 21:24:11,091:INFO:Logging name: reg-default-name
2025-09-05 21:24:11,091:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-05 21:24:11,091:INFO:version 3.3.2
2025-09-05 21:24:11,091:INFO:Initializing setup()
2025-09-05 21:24:11,091:INFO:self.USI: a363
2025-09-05 21:24:11,091:INFO:self._variable_keys: {'_ml_usecase', 'y_train', 'y_test', 'USI', 'fold_generator', 'transform_target_param', 'exp_id', 'logging_param', 'idx', 'fold_groups_param', '_available_plots', 'X_train', 'seed', 'target_param', 'gpu_param', 'fold_shuffle_param', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'memory', 'data', 'exp_name_log', 'n_jobs_param', 'html_param', 'X_test', 'X', 'y'}
2025-09-05 21:24:11,091:INFO:Checking environment
2025-09-05 21:24:11,091:INFO:python_version: 3.11.9
2025-09-05 21:24:11,091:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-05 21:24:11,091:INFO:machine: AMD64
2025-09-05 21:24:11,099:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-05 21:24:11,100:INFO:Memory: svmem(total=16766066688, available=6182035456, percent=63.1, used=10584031232, free=6182035456)
2025-09-05 21:24:11,100:INFO:Physical Core: 16
2025-09-05 21:24:11,100:INFO:Logical Core: 22
2025-09-05 21:24:11,100:INFO:Checking libraries
2025-09-05 21:24:11,100:INFO:System:
2025-09-05 21:24:11,100:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-05 21:24:11,100:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-05 21:24:11,100:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-05 21:24:11,100:INFO:PyCaret required dependencies:
2025-09-05 21:24:11,115:INFO:                 pip: 25.2
2025-09-05 21:24:11,115:INFO:          setuptools: 65.5.0
2025-09-05 21:24:11,115:INFO:             pycaret: 3.3.2
2025-09-05 21:24:11,115:INFO:             IPython: 9.5.0
2025-09-05 21:24:11,115:INFO:          ipywidgets: 8.1.7
2025-09-05 21:24:11,115:INFO:                tqdm: 4.67.1
2025-09-05 21:24:11,115:INFO:               numpy: 1.26.4
2025-09-05 21:24:11,115:INFO:              pandas: 2.1.4
2025-09-05 21:24:11,115:INFO:              jinja2: 3.1.6
2025-09-05 21:24:11,115:INFO:               scipy: 1.11.4
2025-09-05 21:24:11,115:INFO:              joblib: 1.3.2
2025-09-05 21:24:11,115:INFO:             sklearn: 1.4.2
2025-09-05 21:24:11,116:INFO:                pyod: 2.0.5
2025-09-05 21:24:11,116:INFO:            imblearn: 0.14.0
2025-09-05 21:24:11,116:INFO:   category_encoders: 2.7.0
2025-09-05 21:24:11,116:INFO:            lightgbm: 4.6.0
2025-09-05 21:24:11,116:INFO:               numba: 0.61.2
2025-09-05 21:24:11,116:INFO:            requests: 2.32.5
2025-09-05 21:24:11,116:INFO:          matplotlib: 3.7.5
2025-09-05 21:24:11,116:INFO:          scikitplot: 0.3.7
2025-09-05 21:24:11,116:INFO:         yellowbrick: 1.5
2025-09-05 21:24:11,116:INFO:              plotly: 6.3.0
2025-09-05 21:24:11,116:INFO:    plotly-resampler: Not installed
2025-09-05 21:24:11,116:INFO:             kaleido: 1.0.0
2025-09-05 21:24:11,116:INFO:           schemdraw: 0.15
2025-09-05 21:24:11,116:INFO:         statsmodels: 0.14.5
2025-09-05 21:24:11,116:INFO:              sktime: 0.26.0
2025-09-05 21:24:11,116:INFO:               tbats: 1.1.3
2025-09-05 21:24:11,116:INFO:            pmdarima: 2.0.4
2025-09-05 21:24:11,116:INFO:              psutil: 7.0.0
2025-09-05 21:24:11,116:INFO:          markupsafe: 3.0.2
2025-09-05 21:24:11,116:INFO:             pickle5: Not installed
2025-09-05 21:24:11,116:INFO:         cloudpickle: 3.1.1
2025-09-05 21:24:11,116:INFO:         deprecation: 2.1.0
2025-09-05 21:24:11,116:INFO:              xxhash: 3.5.0
2025-09-05 21:24:11,116:INFO:           wurlitzer: Not installed
2025-09-05 21:24:11,116:INFO:PyCaret optional dependencies:
2025-09-05 21:24:11,135:INFO:                shap: 0.48.0
2025-09-05 21:24:11,135:INFO:           interpret: Not installed
2025-09-05 21:24:11,135:INFO:                umap: Not installed
2025-09-05 21:24:11,135:INFO:     ydata_profiling: Not installed
2025-09-05 21:24:11,135:INFO:  explainerdashboard: Not installed
2025-09-05 21:24:11,135:INFO:             autoviz: Not installed
2025-09-05 21:24:11,135:INFO:           fairlearn: Not installed
2025-09-05 21:24:11,135:INFO:          deepchecks: Not installed
2025-09-05 21:24:11,135:INFO:             xgboost: 3.0.5
2025-09-05 21:24:11,135:INFO:            catboost: Not installed
2025-09-05 21:24:11,135:INFO:              kmodes: Not installed
2025-09-05 21:24:11,135:INFO:             mlxtend: Not installed
2025-09-05 21:24:11,135:INFO:       statsforecast: Not installed
2025-09-05 21:24:11,135:INFO:        tune_sklearn: Not installed
2025-09-05 21:24:11,135:INFO:                 ray: Not installed
2025-09-05 21:24:11,135:INFO:            hyperopt: Not installed
2025-09-05 21:24:11,135:INFO:              optuna: Not installed
2025-09-05 21:24:11,135:INFO:               skopt: Not installed
2025-09-05 21:24:11,135:INFO:              mlflow: Not installed
2025-09-05 21:24:11,135:INFO:              gradio: Not installed
2025-09-05 21:24:11,135:INFO:             fastapi: Not installed
2025-09-05 21:24:11,135:INFO:             uvicorn: Not installed
2025-09-05 21:24:11,135:INFO:              m2cgen: Not installed
2025-09-05 21:24:11,135:INFO:           evidently: Not installed
2025-09-05 21:24:11,135:INFO:               fugue: Not installed
2025-09-05 21:24:11,135:INFO:           streamlit: Not installed
2025-09-05 21:24:11,135:INFO:             prophet: Not installed
2025-09-05 21:24:11,135:INFO:None
2025-09-05 21:24:11,135:INFO:Set up data.
2025-09-05 21:24:11,299:INFO:Set up folding strategy.
2025-09-05 21:24:11,299:INFO:Set up train/test split.
2025-09-05 21:24:11,490:INFO:Set up index.
2025-09-05 21:24:11,494:INFO:Assigning column types.
2025-09-05 21:24:11,652:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-05 21:24:11,652:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,662:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,664:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,813:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,836:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:11,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:11,836:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,836:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,836:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,978:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,995:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:11,995:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:12,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:12,002:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-05 21:24:12,002:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,002:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,135:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,162:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:12,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:12,162:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,162:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,302:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,319:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,319:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:12,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:12,319:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-05 21:24:12,329:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,473:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,491:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:12,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:12,491:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,702:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,718:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,718:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:12,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:12,718:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-05 21:24:12,860:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:12,881:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:12,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:13,002:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:13,031:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:24:13,031:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:13,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:13,033:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-05 21:24:13,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:13,179:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:13,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:13,303:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:24:13,325:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:13,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:13,327:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-05 21:24:13,480:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:13,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:13,620:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:13,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:13,627:INFO:Preparing preprocessing pipeline...
2025-09-05 21:24:13,627:INFO:Set up simple imputation.
2025-09-05 21:24:13,627:INFO:Set up feature normalization.
2025-09-05 21:24:13,645:INFO:Set up column name cleaning.
2025-09-05 21:24:14,068:INFO:Finished creating preprocessing pipeline.
2025-09-05 21:24:14,078:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-05 21:24:14,078:INFO:Creating final display dataframe.
2025-09-05 21:24:15,036:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target           action2
2                   Target type        Regression
3           Original data shape      (15000, 507)
4        Transformed data shape      (15000, 507)
5   Transformed train set shape      (10500, 507)
6    Transformed test set shape       (4500, 507)
7              Numeric features               506
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              a363
2025-09-05 21:24:15,251:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:15,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:15,402:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:24:15,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:24:15,404:INFO:setup() successfully completed in 4.32s...............
2025-09-05 21:24:15,404:INFO:Initializing compare_models()
2025-09-05 21:24:15,404:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-05 21:24:15,404:INFO:Checking exceptions
2025-09-05 21:24:15,452:INFO:Preparing display monitor
2025-09-05 21:24:15,454:INFO:Initializing Decision Tree Regressor
2025-09-05 21:24:15,455:INFO:Total runtime is 1.666545867919922e-05 minutes
2025-09-05 21:24:15,455:INFO:SubProcess create_model() called ==================================
2025-09-05 21:24:15,455:INFO:Initializing create_model()
2025-09-05 21:24:15,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023DB5341E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:24:15,455:INFO:Checking exceptions
2025-09-05 21:24:15,455:INFO:Importing libraries
2025-09-05 21:24:15,455:INFO:Copying training dataset
2025-09-05 21:24:15,583:INFO:Defining folds
2025-09-05 21:24:15,583:INFO:Declaring metric variables
2025-09-05 21:24:15,583:INFO:Importing untrained model
2025-09-05 21:24:15,583:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:24:15,583:INFO:Starting cross validation
2025-09-05 21:24:15,591:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:24:20,152:INFO:Calculating mean and std
2025-09-05 21:24:20,152:INFO:Creating metrics dataframe
2025-09-05 21:24:20,152:INFO:Uploading results into container
2025-09-05 21:24:20,152:INFO:Uploading model into container now
2025-09-05 21:24:20,152:INFO:_master_model_container: 1
2025-09-05 21:24:20,152:INFO:_display_container: 2
2025-09-05 21:24:20,152:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:24:20,152:INFO:create_model() successfully completed......................................
2025-09-05 21:24:20,231:INFO:SubProcess create_model() end ==================================
2025-09-05 21:24:20,231:INFO:Creating metrics dataframe
2025-09-05 21:24:20,233:INFO:Initializing Random Forest Regressor
2025-09-05 21:24:20,233:INFO:Total runtime is 0.07964984973271688 minutes
2025-09-05 21:24:20,233:INFO:SubProcess create_model() called ==================================
2025-09-05 21:24:20,233:INFO:Initializing create_model()
2025-09-05 21:24:20,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023DB5341E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:24:20,234:INFO:Checking exceptions
2025-09-05 21:24:20,234:INFO:Importing libraries
2025-09-05 21:24:20,234:INFO:Copying training dataset
2025-09-05 21:24:20,345:INFO:Defining folds
2025-09-05 21:24:20,345:INFO:Declaring metric variables
2025-09-05 21:24:20,345:INFO:Importing untrained model
2025-09-05 21:24:20,345:INFO:Random Forest Regressor Imported successfully
2025-09-05 21:24:20,345:INFO:Starting cross validation
2025-09-05 21:24:20,345:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:25:00,677:INFO:Calculating mean and std
2025-09-05 21:25:00,677:INFO:Creating metrics dataframe
2025-09-05 21:25:00,679:INFO:Uploading results into container
2025-09-05 21:25:00,679:INFO:Uploading model into container now
2025-09-05 21:25:00,679:INFO:_master_model_container: 2
2025-09-05 21:25:00,679:INFO:_display_container: 2
2025-09-05 21:25:00,681:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-05 21:25:00,681:INFO:create_model() successfully completed......................................
2025-09-05 21:25:00,772:INFO:SubProcess create_model() end ==================================
2025-09-05 21:25:00,772:INFO:Creating metrics dataframe
2025-09-05 21:25:00,775:INFO:Initializing Gradient Boosting Regressor
2025-09-05 21:25:00,775:INFO:Total runtime is 0.7553491473197937 minutes
2025-09-05 21:25:00,775:INFO:SubProcess create_model() called ==================================
2025-09-05 21:25:00,776:INFO:Initializing create_model()
2025-09-05 21:25:00,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023DB5341E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:25:00,776:INFO:Checking exceptions
2025-09-05 21:25:00,776:INFO:Importing libraries
2025-09-05 21:25:00,776:INFO:Copying training dataset
2025-09-05 21:25:00,904:INFO:Defining folds
2025-09-05 21:25:00,905:INFO:Declaring metric variables
2025-09-05 21:25:00,905:INFO:Importing untrained model
2025-09-05 21:25:00,905:INFO:Gradient Boosting Regressor Imported successfully
2025-09-05 21:25:00,905:INFO:Starting cross validation
2025-09-05 21:25:00,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:25:49,521:INFO:Calculating mean and std
2025-09-05 21:25:49,521:INFO:Creating metrics dataframe
2025-09-05 21:25:49,521:INFO:Uploading results into container
2025-09-05 21:25:49,523:INFO:Uploading model into container now
2025-09-05 21:25:49,523:INFO:_master_model_container: 3
2025-09-05 21:25:49,523:INFO:_display_container: 2
2025-09-05 21:25:49,523:INFO:GradientBoostingRegressor(random_state=791)
2025-09-05 21:25:49,523:INFO:create_model() successfully completed......................................
2025-09-05 21:25:49,604:INFO:SubProcess create_model() end ==================================
2025-09-05 21:25:49,604:INFO:Creating metrics dataframe
2025-09-05 21:25:49,606:INFO:Initializing Extreme Gradient Boosting
2025-09-05 21:25:49,606:INFO:Total runtime is 1.5692097385724386 minutes
2025-09-05 21:25:49,606:INFO:SubProcess create_model() called ==================================
2025-09-05 21:25:49,606:INFO:Initializing create_model()
2025-09-05 21:25:49,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023DB5341E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:25:49,606:INFO:Checking exceptions
2025-09-05 21:25:49,606:INFO:Importing libraries
2025-09-05 21:25:49,606:INFO:Copying training dataset
2025-09-05 21:25:49,719:INFO:Defining folds
2025-09-05 21:25:49,719:INFO:Declaring metric variables
2025-09-05 21:25:49,719:INFO:Importing untrained model
2025-09-05 21:25:49,719:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:25:49,719:INFO:Starting cross validation
2025-09-05 21:25:49,719:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:25:58,341:INFO:Calculating mean and std
2025-09-05 21:25:58,341:INFO:Creating metrics dataframe
2025-09-05 21:25:58,344:INFO:Uploading results into container
2025-09-05 21:25:58,344:INFO:Uploading model into container now
2025-09-05 21:25:58,344:INFO:_master_model_container: 4
2025-09-05 21:25:58,344:INFO:_display_container: 2
2025-09-05 21:25:58,344:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:25:58,344:INFO:create_model() successfully completed......................................
2025-09-05 21:25:58,420:INFO:SubProcess create_model() end ==================================
2025-09-05 21:25:58,420:INFO:Creating metrics dataframe
2025-09-05 21:25:58,422:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-05 21:25:58,424:INFO:Initializing create_model()
2025-09-05 21:25:58,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:25:58,424:INFO:Checking exceptions
2025-09-05 21:25:58,424:INFO:Importing libraries
2025-09-05 21:25:58,424:INFO:Copying training dataset
2025-09-05 21:25:58,550:INFO:Defining folds
2025-09-05 21:25:58,550:INFO:Declaring metric variables
2025-09-05 21:25:58,550:INFO:Importing untrained model
2025-09-05 21:25:58,550:INFO:Declaring custom model
2025-09-05 21:25:58,552:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:25:58,552:INFO:Cross validation set to False
2025-09-05 21:25:58,552:INFO:Fitting Model
2025-09-05 21:26:00,766:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:26:00,766:INFO:create_model() successfully completed......................................
2025-09-05 21:26:00,863:INFO:_master_model_container: 4
2025-09-05 21:26:00,865:INFO:_display_container: 2
2025-09-05 21:26:00,865:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:26:00,865:INFO:compare_models() successfully completed......................................
2025-09-05 21:26:00,872:INFO:Initializing finalize_model()
2025-09-05 21:26:00,872:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-05 21:26:00,873:INFO:Finalizing XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:26:00,992:INFO:Initializing create_model()
2025-09-05 21:26:00,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023DAC8A5050>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:26:00,992:INFO:Checking exceptions
2025-09-05 21:26:00,992:INFO:Importing libraries
2025-09-05 21:26:00,992:INFO:Copying training dataset
2025-09-05 21:26:01,019:INFO:Defining folds
2025-09-05 21:26:01,019:INFO:Declaring metric variables
2025-09-05 21:26:01,019:INFO:Importing untrained model
2025-09-05 21:26:01,019:INFO:Declaring custom model
2025-09-05 21:26:01,021:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:26:01,021:INFO:Cross validation set to False
2025-09-05 21:26:01,021:INFO:Fitting Model
2025-09-05 21:26:03,462:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:26:03,464:INFO:create_model() successfully completed......................................
2025-09-05 21:26:03,588:INFO:_master_model_container: 4
2025-09-05 21:26:03,588:INFO:_display_container: 2
2025-09-05 21:26:03,594:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:26:03,594:INFO:finalize_model() successfully completed......................................
2025-09-05 21:26:03,671:INFO:Initializing save_model()
2025-09-05 21:26:03,671:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))]), model_name=out/action2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-05 21:26:03,671:INFO:Adding model into prep_pipe
2025-09-05 21:26:03,671:WARNING:Only Model saved as it was a pipeline.
2025-09-05 21:26:03,687:INFO:out/action2/pycaret/model.pkl saved in current working directory
2025-09-05 21:26:03,697:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:26:03,697:INFO:save_model() successfully completed......................................
2025-09-05 21:26:04,858:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:26:07,116:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-05 21:26:28,574:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:30:16,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:16,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:16,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:16,230:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:52,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:52,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:52,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:30:52,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:31:10,009:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 21:31:20,307:INFO:PyCaret RegressionExperiment
2025-09-05 21:31:20,307:INFO:Logging name: reg-default-name
2025-09-05 21:31:20,307:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-05 21:31:20,307:INFO:version 3.3.2
2025-09-05 21:31:20,307:INFO:Initializing setup()
2025-09-05 21:31:20,307:INFO:self.USI: 8681
2025-09-05 21:31:20,307:INFO:self._variable_keys: {'logging_param', 'transform_target_param', 'exp_name_log', 'USI', 'fold_generator', 'memory', '_ml_usecase', 'y', 'data', 'exp_id', 'html_param', 'seed', 'pipeline', 'y_test', 'gpu_param', 'idx', 'log_plots_param', '_available_plots', 'X_train', 'fold_shuffle_param', 'X_test', 'fold_groups_param', 'X', 'y_train', 'target_param', 'n_jobs_param', 'gpu_n_jobs_param'}
2025-09-05 21:31:20,307:INFO:Checking environment
2025-09-05 21:31:20,307:INFO:python_version: 3.11.9
2025-09-05 21:31:20,307:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-05 21:31:20,307:INFO:machine: AMD64
2025-09-05 21:31:20,314:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-05 21:31:20,315:INFO:Memory: svmem(total=16766066688, available=7562219520, percent=54.9, used=9203847168, free=7562219520)
2025-09-05 21:31:20,315:INFO:Physical Core: 16
2025-09-05 21:31:20,315:INFO:Logical Core: 22
2025-09-05 21:31:20,315:INFO:Checking libraries
2025-09-05 21:31:20,315:INFO:System:
2025-09-05 21:31:20,315:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-05 21:31:20,315:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-05 21:31:20,315:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-05 21:31:20,315:INFO:PyCaret required dependencies:
2025-09-05 21:31:20,330:INFO:                 pip: 25.2
2025-09-05 21:31:20,330:INFO:          setuptools: 65.5.0
2025-09-05 21:31:20,330:INFO:             pycaret: 3.3.2
2025-09-05 21:31:20,330:INFO:             IPython: 9.5.0
2025-09-05 21:31:20,330:INFO:          ipywidgets: 8.1.7
2025-09-05 21:31:20,330:INFO:                tqdm: 4.67.1
2025-09-05 21:31:20,330:INFO:               numpy: 1.26.4
2025-09-05 21:31:20,330:INFO:              pandas: 2.1.4
2025-09-05 21:31:20,330:INFO:              jinja2: 3.1.6
2025-09-05 21:31:20,330:INFO:               scipy: 1.11.4
2025-09-05 21:31:20,330:INFO:              joblib: 1.3.2
2025-09-05 21:31:20,330:INFO:             sklearn: 1.4.2
2025-09-05 21:31:20,330:INFO:                pyod: 2.0.5
2025-09-05 21:31:20,330:INFO:            imblearn: 0.14.0
2025-09-05 21:31:20,330:INFO:   category_encoders: 2.7.0
2025-09-05 21:31:20,330:INFO:            lightgbm: 4.6.0
2025-09-05 21:31:20,330:INFO:               numba: 0.61.2
2025-09-05 21:31:20,330:INFO:            requests: 2.32.5
2025-09-05 21:31:20,330:INFO:          matplotlib: 3.7.5
2025-09-05 21:31:20,330:INFO:          scikitplot: 0.3.7
2025-09-05 21:31:20,330:INFO:         yellowbrick: 1.5
2025-09-05 21:31:20,330:INFO:              plotly: 6.3.0
2025-09-05 21:31:20,330:INFO:    plotly-resampler: Not installed
2025-09-05 21:31:20,330:INFO:             kaleido: 1.0.0
2025-09-05 21:31:20,330:INFO:           schemdraw: 0.15
2025-09-05 21:31:20,330:INFO:         statsmodels: 0.14.5
2025-09-05 21:31:20,330:INFO:              sktime: 0.26.0
2025-09-05 21:31:20,330:INFO:               tbats: 1.1.3
2025-09-05 21:31:20,330:INFO:            pmdarima: 2.0.4
2025-09-05 21:31:20,330:INFO:              psutil: 7.0.0
2025-09-05 21:31:20,330:INFO:          markupsafe: 3.0.2
2025-09-05 21:31:20,330:INFO:             pickle5: Not installed
2025-09-05 21:31:20,330:INFO:         cloudpickle: 3.1.1
2025-09-05 21:31:20,330:INFO:         deprecation: 2.1.0
2025-09-05 21:31:20,330:INFO:              xxhash: 3.5.0
2025-09-05 21:31:20,330:INFO:           wurlitzer: Not installed
2025-09-05 21:31:20,330:INFO:PyCaret optional dependencies:
2025-09-05 21:31:20,354:INFO:                shap: 0.48.0
2025-09-05 21:31:20,354:INFO:           interpret: Not installed
2025-09-05 21:31:20,355:INFO:                umap: Not installed
2025-09-05 21:31:20,355:INFO:     ydata_profiling: Not installed
2025-09-05 21:31:20,355:INFO:  explainerdashboard: Not installed
2025-09-05 21:31:20,355:INFO:             autoviz: Not installed
2025-09-05 21:31:20,355:INFO:           fairlearn: Not installed
2025-09-05 21:31:20,355:INFO:          deepchecks: Not installed
2025-09-05 21:31:20,355:INFO:             xgboost: 3.0.5
2025-09-05 21:31:20,355:INFO:            catboost: Not installed
2025-09-05 21:31:20,355:INFO:              kmodes: Not installed
2025-09-05 21:31:20,355:INFO:             mlxtend: Not installed
2025-09-05 21:31:20,355:INFO:       statsforecast: Not installed
2025-09-05 21:31:20,355:INFO:        tune_sklearn: Not installed
2025-09-05 21:31:20,355:INFO:                 ray: Not installed
2025-09-05 21:31:20,355:INFO:            hyperopt: Not installed
2025-09-05 21:31:20,355:INFO:              optuna: Not installed
2025-09-05 21:31:20,355:INFO:               skopt: Not installed
2025-09-05 21:31:20,355:INFO:              mlflow: Not installed
2025-09-05 21:31:20,355:INFO:              gradio: Not installed
2025-09-05 21:31:20,355:INFO:             fastapi: Not installed
2025-09-05 21:31:20,355:INFO:             uvicorn: Not installed
2025-09-05 21:31:20,355:INFO:              m2cgen: Not installed
2025-09-05 21:31:20,355:INFO:           evidently: Not installed
2025-09-05 21:31:20,355:INFO:               fugue: Not installed
2025-09-05 21:31:20,355:INFO:           streamlit: Not installed
2025-09-05 21:31:20,355:INFO:             prophet: Not installed
2025-09-05 21:31:20,355:INFO:None
2025-09-05 21:31:20,355:INFO:Set up data.
2025-09-05 21:31:20,498:INFO:Set up folding strategy.
2025-09-05 21:31:20,498:INFO:Set up train/test split.
2025-09-05 21:31:20,692:INFO:Set up index.
2025-09-05 21:31:20,703:INFO:Assigning column types.
2025-09-05 21:31:20,865:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-05 21:31:20,865:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:31:20,865:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:31:20,875:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,011:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,032:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:21,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:21,032:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,032:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,032:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,162:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,195:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:21,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:21,195:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-05 21:31:21,197:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,201:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,336:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,356:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:21,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:21,356:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,356:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,514:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:21,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:21,514:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-05 21:31:21,524:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,680:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:21,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:21,680:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,890:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,914:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:21,915:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:21,915:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:21,915:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-05 21:31:22,047:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:22,064:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:22,074:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:22,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:22,197:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:22,225:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:31:22,225:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:22,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:22,226:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-05 21:31:22,346:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:22,367:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:22,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:22,493:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:31:22,516:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:22,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:22,517:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-05 21:31:22,657:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:22,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:22,793:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:22,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:22,795:INFO:Preparing preprocessing pipeline...
2025-09-05 21:31:22,795:INFO:Set up simple imputation.
2025-09-05 21:31:22,795:INFO:Set up feature normalization.
2025-09-05 21:31:22,876:INFO:Set up column name cleaning.
2025-09-05 21:31:23,226:INFO:Finished creating preprocessing pipeline.
2025-09-05 21:31:23,233:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-05 21:31:23,233:INFO:Creating final display dataframe.
2025-09-05 21:31:24,309:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target           action1
2                   Target type        Regression
3           Original data shape      (15000, 507)
4        Transformed data shape      (15000, 507)
5   Transformed train set shape      (10500, 507)
6    Transformed test set shape       (4500, 507)
7              Numeric features               506
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              8681
2025-09-05 21:31:24,454:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:24,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:24,590:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:31:24,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:31:24,592:INFO:setup() successfully completed in 4.29s...............
2025-09-05 21:31:24,593:INFO:Initializing compare_models()
2025-09-05 21:31:24,593:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-05 21:31:24,593:INFO:Checking exceptions
2025-09-05 21:31:24,632:INFO:Preparing display monitor
2025-09-05 21:31:24,645:INFO:Initializing Decision Tree Regressor
2025-09-05 21:31:24,645:INFO:Total runtime is 0.0 minutes
2025-09-05 21:31:24,645:INFO:SubProcess create_model() called ==================================
2025-09-05 21:31:24,645:INFO:Initializing create_model()
2025-09-05 21:31:24,645:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027F98919E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:31:24,645:INFO:Checking exceptions
2025-09-05 21:31:24,645:INFO:Importing libraries
2025-09-05 21:31:24,645:INFO:Copying training dataset
2025-09-05 21:31:24,757:INFO:Defining folds
2025-09-05 21:31:24,757:INFO:Declaring metric variables
2025-09-05 21:31:24,757:INFO:Importing untrained model
2025-09-05 21:31:24,757:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:31:24,757:INFO:Starting cross validation
2025-09-05 21:31:24,767:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:31:29,212:INFO:Calculating mean and std
2025-09-05 21:31:29,212:INFO:Creating metrics dataframe
2025-09-05 21:31:29,214:INFO:Uploading results into container
2025-09-05 21:31:29,214:INFO:Uploading model into container now
2025-09-05 21:31:29,215:INFO:_master_model_container: 1
2025-09-05 21:31:29,215:INFO:_display_container: 2
2025-09-05 21:31:29,215:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:31:29,215:INFO:create_model() successfully completed......................................
2025-09-05 21:31:29,297:INFO:SubProcess create_model() end ==================================
2025-09-05 21:31:29,297:INFO:Creating metrics dataframe
2025-09-05 21:31:29,299:INFO:Initializing Random Forest Regressor
2025-09-05 21:31:29,299:INFO:Total runtime is 0.07757620811462403 minutes
2025-09-05 21:31:29,299:INFO:SubProcess create_model() called ==================================
2025-09-05 21:31:29,299:INFO:Initializing create_model()
2025-09-05 21:31:29,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027F98919E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:31:29,299:INFO:Checking exceptions
2025-09-05 21:31:29,299:INFO:Importing libraries
2025-09-05 21:31:29,299:INFO:Copying training dataset
2025-09-05 21:31:29,427:INFO:Defining folds
2025-09-05 21:31:29,427:INFO:Declaring metric variables
2025-09-05 21:31:29,427:INFO:Importing untrained model
2025-09-05 21:31:29,427:INFO:Random Forest Regressor Imported successfully
2025-09-05 21:31:29,427:INFO:Starting cross validation
2025-09-05 21:31:29,427:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:31:58,001:INFO:Calculating mean and std
2025-09-05 21:31:58,001:INFO:Creating metrics dataframe
2025-09-05 21:31:58,003:INFO:Uploading results into container
2025-09-05 21:31:58,003:INFO:Uploading model into container now
2025-09-05 21:31:58,004:INFO:_master_model_container: 2
2025-09-05 21:31:58,004:INFO:_display_container: 2
2025-09-05 21:31:58,004:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-05 21:31:58,004:INFO:create_model() successfully completed......................................
2025-09-05 21:31:58,105:INFO:SubProcess create_model() end ==================================
2025-09-05 21:31:58,105:INFO:Creating metrics dataframe
2025-09-05 21:31:58,107:INFO:Initializing Gradient Boosting Regressor
2025-09-05 21:31:58,107:INFO:Total runtime is 0.557700248559316 minutes
2025-09-05 21:31:58,107:INFO:SubProcess create_model() called ==================================
2025-09-05 21:31:58,107:INFO:Initializing create_model()
2025-09-05 21:31:58,107:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027F98919E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:31:58,107:INFO:Checking exceptions
2025-09-05 21:31:58,107:INFO:Importing libraries
2025-09-05 21:31:58,108:INFO:Copying training dataset
2025-09-05 21:31:58,239:INFO:Defining folds
2025-09-05 21:31:58,239:INFO:Declaring metric variables
2025-09-05 21:31:58,239:INFO:Importing untrained model
2025-09-05 21:31:58,239:INFO:Gradient Boosting Regressor Imported successfully
2025-09-05 21:31:58,240:INFO:Starting cross validation
2025-09-05 21:31:58,241:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:32:39,271:INFO:Calculating mean and std
2025-09-05 21:32:39,271:INFO:Creating metrics dataframe
2025-09-05 21:32:39,271:INFO:Uploading results into container
2025-09-05 21:32:39,271:INFO:Uploading model into container now
2025-09-05 21:32:39,271:INFO:_master_model_container: 3
2025-09-05 21:32:39,271:INFO:_display_container: 2
2025-09-05 21:32:39,271:INFO:GradientBoostingRegressor(random_state=791)
2025-09-05 21:32:39,271:INFO:create_model() successfully completed......................................
2025-09-05 21:32:39,355:INFO:SubProcess create_model() end ==================================
2025-09-05 21:32:39,355:INFO:Creating metrics dataframe
2025-09-05 21:32:39,355:INFO:Initializing Extreme Gradient Boosting
2025-09-05 21:32:39,355:INFO:Total runtime is 1.2451737801233929 minutes
2025-09-05 21:32:39,355:INFO:SubProcess create_model() called ==================================
2025-09-05 21:32:39,355:INFO:Initializing create_model()
2025-09-05 21:32:39,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027F98919E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:32:39,355:INFO:Checking exceptions
2025-09-05 21:32:39,355:INFO:Importing libraries
2025-09-05 21:32:39,355:INFO:Copying training dataset
2025-09-05 21:32:39,486:INFO:Defining folds
2025-09-05 21:32:39,486:INFO:Declaring metric variables
2025-09-05 21:32:39,487:INFO:Importing untrained model
2025-09-05 21:32:39,487:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:32:39,487:INFO:Starting cross validation
2025-09-05 21:32:39,487:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:32:44,315:INFO:Calculating mean and std
2025-09-05 21:32:44,315:INFO:Creating metrics dataframe
2025-09-05 21:32:44,315:INFO:Uploading results into container
2025-09-05 21:32:44,315:INFO:Uploading model into container now
2025-09-05 21:32:44,319:INFO:_master_model_container: 4
2025-09-05 21:32:44,319:INFO:_display_container: 2
2025-09-05 21:32:44,319:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:32:44,319:INFO:create_model() successfully completed......................................
2025-09-05 21:32:44,394:INFO:SubProcess create_model() end ==================================
2025-09-05 21:32:44,394:INFO:Creating metrics dataframe
2025-09-05 21:32:44,394:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-05 21:32:44,394:INFO:Initializing create_model()
2025-09-05 21:32:44,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:32:44,394:INFO:Checking exceptions
2025-09-05 21:32:44,394:INFO:Importing libraries
2025-09-05 21:32:44,394:INFO:Copying training dataset
2025-09-05 21:32:44,517:INFO:Defining folds
2025-09-05 21:32:44,517:INFO:Declaring metric variables
2025-09-05 21:32:44,517:INFO:Importing untrained model
2025-09-05 21:32:44,517:INFO:Declaring custom model
2025-09-05 21:32:44,517:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:32:44,517:INFO:Cross validation set to False
2025-09-05 21:32:44,517:INFO:Fitting Model
2025-09-05 21:32:45,075:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:32:45,075:INFO:create_model() successfully completed......................................
2025-09-05 21:32:45,160:INFO:_master_model_container: 4
2025-09-05 21:32:45,160:INFO:_display_container: 2
2025-09-05 21:32:45,160:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:32:45,160:INFO:compare_models() successfully completed......................................
2025-09-05 21:32:45,160:INFO:Initializing finalize_model()
2025-09-05 21:32:45,160:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-05 21:32:45,160:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-05 21:32:45,260:INFO:Initializing create_model()
2025-09-05 21:32:45,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027FA2EDC5D0>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:32:45,260:INFO:Checking exceptions
2025-09-05 21:32:45,260:INFO:Importing libraries
2025-09-05 21:32:45,260:INFO:Copying training dataset
2025-09-05 21:32:45,277:INFO:Defining folds
2025-09-05 21:32:45,277:INFO:Declaring metric variables
2025-09-05 21:32:45,277:INFO:Importing untrained model
2025-09-05 21:32:45,277:INFO:Declaring custom model
2025-09-05 21:32:45,277:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:32:45,287:INFO:Cross validation set to False
2025-09-05 21:32:45,287:INFO:Fitting Model
2025-09-05 21:32:46,003:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-05 21:32:46,003:INFO:create_model() successfully completed......................................
2025-09-05 21:32:46,080:INFO:_master_model_container: 4
2025-09-05 21:32:46,080:INFO:_display_container: 2
2025-09-05 21:32:46,085:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-05 21:32:46,086:INFO:finalize_model() successfully completed......................................
2025-09-05 21:32:46,160:INFO:Initializing save_model()
2025-09-05 21:32:46,160:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/action1/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-05 21:32:46,160:INFO:Adding model into prep_pipe
2025-09-05 21:32:46,160:WARNING:Only Model saved as it was a pipeline.
2025-09-05 21:32:46,176:INFO:out/action1/pycaret/model.pkl saved in current working directory
2025-09-05 21:32:46,176:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-05 21:32:46,176:INFO:save_model() successfully completed......................................
2025-09-05 21:32:46,474:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:32:47,866:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-05 21:35:22,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:35:22,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:35:22,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:35:22,956:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:35:28,913:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 21:35:34,338:INFO:PyCaret RegressionExperiment
2025-09-05 21:35:34,338:INFO:Logging name: reg-default-name
2025-09-05 21:35:34,338:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-05 21:35:34,338:INFO:version 3.3.2
2025-09-05 21:35:34,338:INFO:Initializing setup()
2025-09-05 21:35:34,338:INFO:self.USI: ad3f
2025-09-05 21:35:34,338:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'data', 'USI', 'X_train', 'memory', 'logging_param', 'X_test', 'exp_id', 'y_test', 'fold_generator', 'transform_target_param', 'seed', 'X', 'pipeline', 'y_train', 'y', 'idx', 'html_param', 'log_plots_param', '_available_plots', 'exp_name_log', 'gpu_n_jobs_param', '_ml_usecase', 'target_param', 'fold_shuffle_param', 'n_jobs_param'}
2025-09-05 21:35:34,338:INFO:Checking environment
2025-09-05 21:35:34,338:INFO:python_version: 3.11.9
2025-09-05 21:35:34,338:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-05 21:35:34,338:INFO:machine: AMD64
2025-09-05 21:35:34,346:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-05 21:35:34,346:INFO:Memory: svmem(total=16766066688, available=7531905024, percent=55.1, used=9234161664, free=7531905024)
2025-09-05 21:35:34,346:INFO:Physical Core: 16
2025-09-05 21:35:34,346:INFO:Logical Core: 22
2025-09-05 21:35:34,346:INFO:Checking libraries
2025-09-05 21:35:34,346:INFO:System:
2025-09-05 21:35:34,346:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-05 21:35:34,346:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-05 21:35:34,346:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-05 21:35:34,346:INFO:PyCaret required dependencies:
2025-09-05 21:35:34,352:INFO:                 pip: 25.2
2025-09-05 21:35:34,352:INFO:          setuptools: 65.5.0
2025-09-05 21:35:34,352:INFO:             pycaret: 3.3.2
2025-09-05 21:35:34,362:INFO:             IPython: 9.5.0
2025-09-05 21:35:34,362:INFO:          ipywidgets: 8.1.7
2025-09-05 21:35:34,362:INFO:                tqdm: 4.67.1
2025-09-05 21:35:34,362:INFO:               numpy: 1.26.4
2025-09-05 21:35:34,362:INFO:              pandas: 2.1.4
2025-09-05 21:35:34,362:INFO:              jinja2: 3.1.6
2025-09-05 21:35:34,362:INFO:               scipy: 1.11.4
2025-09-05 21:35:34,362:INFO:              joblib: 1.3.2
2025-09-05 21:35:34,362:INFO:             sklearn: 1.4.2
2025-09-05 21:35:34,362:INFO:                pyod: 2.0.5
2025-09-05 21:35:34,362:INFO:            imblearn: 0.14.0
2025-09-05 21:35:34,362:INFO:   category_encoders: 2.7.0
2025-09-05 21:35:34,362:INFO:            lightgbm: 4.6.0
2025-09-05 21:35:34,362:INFO:               numba: 0.61.2
2025-09-05 21:35:34,362:INFO:            requests: 2.32.5
2025-09-05 21:35:34,362:INFO:          matplotlib: 3.7.5
2025-09-05 21:35:34,362:INFO:          scikitplot: 0.3.7
2025-09-05 21:35:34,362:INFO:         yellowbrick: 1.5
2025-09-05 21:35:34,362:INFO:              plotly: 6.3.0
2025-09-05 21:35:34,362:INFO:    plotly-resampler: Not installed
2025-09-05 21:35:34,362:INFO:             kaleido: 1.0.0
2025-09-05 21:35:34,362:INFO:           schemdraw: 0.15
2025-09-05 21:35:34,362:INFO:         statsmodels: 0.14.5
2025-09-05 21:35:34,362:INFO:              sktime: 0.26.0
2025-09-05 21:35:34,362:INFO:               tbats: 1.1.3
2025-09-05 21:35:34,362:INFO:            pmdarima: 2.0.4
2025-09-05 21:35:34,362:INFO:              psutil: 7.0.0
2025-09-05 21:35:34,362:INFO:          markupsafe: 3.0.2
2025-09-05 21:35:34,362:INFO:             pickle5: Not installed
2025-09-05 21:35:34,362:INFO:         cloudpickle: 3.1.1
2025-09-05 21:35:34,362:INFO:         deprecation: 2.1.0
2025-09-05 21:35:34,362:INFO:              xxhash: 3.5.0
2025-09-05 21:35:34,362:INFO:           wurlitzer: Not installed
2025-09-05 21:35:34,362:INFO:PyCaret optional dependencies:
2025-09-05 21:35:34,385:INFO:                shap: 0.48.0
2025-09-05 21:35:34,385:INFO:           interpret: Not installed
2025-09-05 21:35:34,385:INFO:                umap: Not installed
2025-09-05 21:35:34,385:INFO:     ydata_profiling: Not installed
2025-09-05 21:35:34,385:INFO:  explainerdashboard: Not installed
2025-09-05 21:35:34,385:INFO:             autoviz: Not installed
2025-09-05 21:35:34,385:INFO:           fairlearn: Not installed
2025-09-05 21:35:34,385:INFO:          deepchecks: Not installed
2025-09-05 21:35:34,385:INFO:             xgboost: 3.0.5
2025-09-05 21:35:34,385:INFO:            catboost: Not installed
2025-09-05 21:35:34,385:INFO:              kmodes: Not installed
2025-09-05 21:35:34,385:INFO:             mlxtend: Not installed
2025-09-05 21:35:34,385:INFO:       statsforecast: Not installed
2025-09-05 21:35:34,385:INFO:        tune_sklearn: Not installed
2025-09-05 21:35:34,385:INFO:                 ray: Not installed
2025-09-05 21:35:34,385:INFO:            hyperopt: Not installed
2025-09-05 21:35:34,385:INFO:              optuna: Not installed
2025-09-05 21:35:34,385:INFO:               skopt: Not installed
2025-09-05 21:35:34,385:INFO:              mlflow: Not installed
2025-09-05 21:35:34,385:INFO:              gradio: Not installed
2025-09-05 21:35:34,385:INFO:             fastapi: Not installed
2025-09-05 21:35:34,385:INFO:             uvicorn: Not installed
2025-09-05 21:35:34,385:INFO:              m2cgen: Not installed
2025-09-05 21:35:34,385:INFO:           evidently: Not installed
2025-09-05 21:35:34,385:INFO:               fugue: Not installed
2025-09-05 21:35:34,385:INFO:           streamlit: Not installed
2025-09-05 21:35:34,385:INFO:             prophet: Not installed
2025-09-05 21:35:34,385:INFO:None
2025-09-05 21:35:34,385:INFO:Set up data.
2025-09-05 21:35:34,539:INFO:Set up folding strategy.
2025-09-05 21:35:34,539:INFO:Set up train/test split.
2025-09-05 21:35:34,713:INFO:Set up index.
2025-09-05 21:35:34,723:INFO:Assigning column types.
2025-09-05 21:35:34,885:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-05 21:35:34,885:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:35:34,885:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:35:34,885:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,028:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,052:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,052:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:35,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:35,052:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,052:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,052:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,195:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,222:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,222:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:35,222:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:35,222:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-05 21:35:35,228:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,369:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,397:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,397:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:35,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:35,402:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,402:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,552:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,579:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,579:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:35,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:35,579:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-05 21:35:35,585:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,718:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,745:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:35,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:35,745:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,952:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,979:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:35,979:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:35,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:35,979:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-05 21:35:36,118:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:36,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:36,135:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:36,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:36,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:36,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:35:36,293:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:36,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:36,294:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-05 21:35:36,409:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:36,430:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:36,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:36,554:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:35:36,574:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:36,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:36,580:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-05 21:35:36,708:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:36,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:36,841:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:36,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:36,851:INFO:Preparing preprocessing pipeline...
2025-09-05 21:35:36,851:INFO:Set up simple imputation.
2025-09-05 21:35:36,851:INFO:Set up feature normalization.
2025-09-05 21:35:36,861:INFO:Set up column name cleaning.
2025-09-05 21:35:37,260:INFO:Finished creating preprocessing pipeline.
2025-09-05 21:35:37,269:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-05 21:35:37,269:INFO:Creating final display dataframe.
2025-09-05 21:35:37,786:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target           action1
2                   Target type        Regression
3           Original data shape      (15000, 507)
4        Transformed data shape      (15000, 507)
5   Transformed train set shape      (10500, 507)
6    Transformed test set shape       (4500, 507)
7              Numeric features               506
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              ad3f
2025-09-05 21:35:37,987:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:37,998:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:38,129:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:35:38,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:35:38,129:INFO:setup() successfully completed in 3.79s...............
2025-09-05 21:35:38,129:INFO:Initializing compare_models()
2025-09-05 21:35:38,129:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-05 21:35:38,129:INFO:Checking exceptions
2025-09-05 21:35:38,181:INFO:Preparing display monitor
2025-09-05 21:35:38,184:INFO:Initializing Decision Tree Regressor
2025-09-05 21:35:38,184:INFO:Total runtime is 0.0 minutes
2025-09-05 21:35:38,185:INFO:SubProcess create_model() called ==================================
2025-09-05 21:35:38,185:INFO:Initializing create_model()
2025-09-05 21:35:38,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACB3952D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:35:38,185:INFO:Checking exceptions
2025-09-05 21:35:38,185:INFO:Importing libraries
2025-09-05 21:35:38,185:INFO:Copying training dataset
2025-09-05 21:35:38,308:INFO:Defining folds
2025-09-05 21:35:38,308:INFO:Declaring metric variables
2025-09-05 21:35:38,309:INFO:Importing untrained model
2025-09-05 21:35:38,309:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:35:38,309:INFO:Starting cross validation
2025-09-05 21:35:38,314:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:35:42,558:INFO:Calculating mean and std
2025-09-05 21:35:42,558:INFO:Creating metrics dataframe
2025-09-05 21:35:42,560:INFO:Uploading results into container
2025-09-05 21:35:42,560:INFO:Uploading model into container now
2025-09-05 21:35:42,560:INFO:_master_model_container: 1
2025-09-05 21:35:42,560:INFO:_display_container: 2
2025-09-05 21:35:42,560:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:35:42,560:INFO:create_model() successfully completed......................................
2025-09-05 21:35:42,656:INFO:SubProcess create_model() end ==================================
2025-09-05 21:35:42,656:INFO:Creating metrics dataframe
2025-09-05 21:35:42,658:INFO:Initializing Random Forest Regressor
2025-09-05 21:35:42,658:INFO:Total runtime is 0.07457252343495686 minutes
2025-09-05 21:35:42,658:INFO:SubProcess create_model() called ==================================
2025-09-05 21:35:42,658:INFO:Initializing create_model()
2025-09-05 21:35:42,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACB3952D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:35:42,658:INFO:Checking exceptions
2025-09-05 21:35:42,658:INFO:Importing libraries
2025-09-05 21:35:42,658:INFO:Copying training dataset
2025-09-05 21:35:42,767:INFO:Defining folds
2025-09-05 21:35:42,767:INFO:Declaring metric variables
2025-09-05 21:35:42,767:INFO:Importing untrained model
2025-09-05 21:35:42,777:INFO:Random Forest Regressor Imported successfully
2025-09-05 21:35:42,777:INFO:Starting cross validation
2025-09-05 21:35:42,779:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:36:11,970:INFO:Calculating mean and std
2025-09-05 21:36:11,970:INFO:Creating metrics dataframe
2025-09-05 21:36:11,970:INFO:Uploading results into container
2025-09-05 21:36:11,970:INFO:Uploading model into container now
2025-09-05 21:36:11,970:INFO:_master_model_container: 2
2025-09-05 21:36:11,970:INFO:_display_container: 2
2025-09-05 21:36:11,970:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-05 21:36:11,970:INFO:create_model() successfully completed......................................
2025-09-05 21:36:12,053:INFO:SubProcess create_model() end ==================================
2025-09-05 21:36:12,053:INFO:Creating metrics dataframe
2025-09-05 21:36:12,063:INFO:Initializing Gradient Boosting Regressor
2025-09-05 21:36:12,063:INFO:Total runtime is 0.5646560668945313 minutes
2025-09-05 21:36:12,063:INFO:SubProcess create_model() called ==================================
2025-09-05 21:36:12,063:INFO:Initializing create_model()
2025-09-05 21:36:12,063:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACB3952D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:36:12,063:INFO:Checking exceptions
2025-09-05 21:36:12,063:INFO:Importing libraries
2025-09-05 21:36:12,063:INFO:Copying training dataset
2025-09-05 21:36:12,195:INFO:Defining folds
2025-09-05 21:36:12,195:INFO:Declaring metric variables
2025-09-05 21:36:12,195:INFO:Importing untrained model
2025-09-05 21:36:12,195:INFO:Gradient Boosting Regressor Imported successfully
2025-09-05 21:36:12,195:INFO:Starting cross validation
2025-09-05 21:36:12,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:36:51,622:INFO:Calculating mean and std
2025-09-05 21:36:51,622:INFO:Creating metrics dataframe
2025-09-05 21:36:51,622:INFO:Uploading results into container
2025-09-05 21:36:51,624:INFO:Uploading model into container now
2025-09-05 21:36:51,624:INFO:_master_model_container: 3
2025-09-05 21:36:51,624:INFO:_display_container: 2
2025-09-05 21:36:51,624:INFO:GradientBoostingRegressor(random_state=791)
2025-09-05 21:36:51,624:INFO:create_model() successfully completed......................................
2025-09-05 21:36:51,700:INFO:SubProcess create_model() end ==================================
2025-09-05 21:36:51,700:INFO:Creating metrics dataframe
2025-09-05 21:36:51,710:INFO:Initializing Extreme Gradient Boosting
2025-09-05 21:36:51,710:INFO:Total runtime is 1.2254360874493917 minutes
2025-09-05 21:36:51,710:INFO:SubProcess create_model() called ==================================
2025-09-05 21:36:51,710:INFO:Initializing create_model()
2025-09-05 21:36:51,710:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACB3952D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:36:51,710:INFO:Checking exceptions
2025-09-05 21:36:51,710:INFO:Importing libraries
2025-09-05 21:36:51,710:INFO:Copying training dataset
2025-09-05 21:36:51,822:INFO:Defining folds
2025-09-05 21:36:51,822:INFO:Declaring metric variables
2025-09-05 21:36:51,822:INFO:Importing untrained model
2025-09-05 21:36:51,822:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:36:51,822:INFO:Starting cross validation
2025-09-05 21:36:51,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:36:55,965:INFO:Calculating mean and std
2025-09-05 21:36:55,965:INFO:Creating metrics dataframe
2025-09-05 21:36:55,966:INFO:Uploading results into container
2025-09-05 21:36:55,966:INFO:Uploading model into container now
2025-09-05 21:36:55,966:INFO:_master_model_container: 4
2025-09-05 21:36:55,968:INFO:_display_container: 2
2025-09-05 21:36:55,968:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:36:55,968:INFO:create_model() successfully completed......................................
2025-09-05 21:36:56,045:INFO:SubProcess create_model() end ==================================
2025-09-05 21:36:56,047:INFO:Creating metrics dataframe
2025-09-05 21:36:56,049:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-05 21:36:56,049:INFO:Initializing create_model()
2025-09-05 21:36:56,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:36:56,051:INFO:Checking exceptions
2025-09-05 21:36:56,051:INFO:Importing libraries
2025-09-05 21:36:56,051:INFO:Copying training dataset
2025-09-05 21:36:56,177:INFO:Defining folds
2025-09-05 21:36:56,177:INFO:Declaring metric variables
2025-09-05 21:36:56,177:INFO:Importing untrained model
2025-09-05 21:36:56,177:INFO:Declaring custom model
2025-09-05 21:36:56,177:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:36:56,179:INFO:Cross validation set to False
2025-09-05 21:36:56,179:INFO:Fitting Model
2025-09-05 21:36:56,718:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:36:56,718:INFO:create_model() successfully completed......................................
2025-09-05 21:36:56,789:INFO:_master_model_container: 4
2025-09-05 21:36:56,789:INFO:_display_container: 2
2025-09-05 21:36:56,789:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:36:56,789:INFO:compare_models() successfully completed......................................
2025-09-05 21:36:56,789:INFO:Initializing finalize_model()
2025-09-05 21:36:56,789:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-05 21:36:56,789:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-05 21:36:56,890:INFO:Initializing create_model()
2025-09-05 21:36:56,890:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAC217E850>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:36:56,890:INFO:Checking exceptions
2025-09-05 21:36:56,890:INFO:Importing libraries
2025-09-05 21:36:56,890:INFO:Copying training dataset
2025-09-05 21:36:56,909:INFO:Defining folds
2025-09-05 21:36:56,909:INFO:Declaring metric variables
2025-09-05 21:36:56,909:INFO:Importing untrained model
2025-09-05 21:36:56,909:INFO:Declaring custom model
2025-09-05 21:36:56,909:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:36:56,909:INFO:Cross validation set to False
2025-09-05 21:36:56,909:INFO:Fitting Model
2025-09-05 21:36:57,608:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-05 21:36:57,608:INFO:create_model() successfully completed......................................
2025-09-05 21:36:57,687:INFO:_master_model_container: 4
2025-09-05 21:36:57,687:INFO:_display_container: 2
2025-09-05 21:36:57,691:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-05 21:36:57,693:INFO:finalize_model() successfully completed......................................
2025-09-05 21:36:57,769:INFO:Initializing save_model()
2025-09-05 21:36:57,769:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/action1/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-05 21:36:57,769:INFO:Adding model into prep_pipe
2025-09-05 21:36:57,769:WARNING:Only Model saved as it was a pipeline.
2025-09-05 21:36:57,802:INFO:out/action1/pycaret/model.pkl saved in current working directory
2025-09-05 21:36:57,802:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-05 21:36:57,802:INFO:save_model() successfully completed......................................
2025-09-05 21:36:58,083:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:36:59,435:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-05 21:37:15,318:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:37:26,234:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-05 21:38:40,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:38:40,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:38:40,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:38:40,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-05 21:38:48,094:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-05 21:39:08,468:INFO:PyCaret RegressionExperiment
2025-09-05 21:39:08,469:INFO:Logging name: reg-default-name
2025-09-05 21:39:08,469:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-05 21:39:08,469:INFO:version 3.3.2
2025-09-05 21:39:08,469:INFO:Initializing setup()
2025-09-05 21:39:08,469:INFO:self.USI: 6153
2025-09-05 21:39:08,469:INFO:self._variable_keys: {'X', 'html_param', 'n_jobs_param', 'exp_id', 'idx', 'memory', 'gpu_param', 'X_test', 'y_test', '_ml_usecase', 'logging_param', 'gpu_n_jobs_param', 'transform_target_param', 'fold_shuffle_param', 'y', 'fold_generator', 'seed', 'fold_groups_param', 'exp_name_log', 'pipeline', 'log_plots_param', 'y_train', 'USI', 'data', '_available_plots', 'X_train', 'target_param'}
2025-09-05 21:39:08,469:INFO:Checking environment
2025-09-05 21:39:08,469:INFO:python_version: 3.11.9
2025-09-05 21:39:08,469:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-05 21:39:08,469:INFO:machine: AMD64
2025-09-05 21:39:08,476:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-05 21:39:08,476:INFO:Memory: svmem(total=16766066688, available=7318839296, percent=56.3, used=9447227392, free=7318839296)
2025-09-05 21:39:08,476:INFO:Physical Core: 16
2025-09-05 21:39:08,476:INFO:Logical Core: 22
2025-09-05 21:39:08,476:INFO:Checking libraries
2025-09-05 21:39:08,476:INFO:System:
2025-09-05 21:39:08,476:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-05 21:39:08,476:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-05 21:39:08,477:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-05 21:39:08,477:INFO:PyCaret required dependencies:
2025-09-05 21:39:08,485:INFO:                 pip: 25.2
2025-09-05 21:39:08,485:INFO:          setuptools: 65.5.0
2025-09-05 21:39:08,485:INFO:             pycaret: 3.3.2
2025-09-05 21:39:08,485:INFO:             IPython: 9.5.0
2025-09-05 21:39:08,485:INFO:          ipywidgets: 8.1.7
2025-09-05 21:39:08,485:INFO:                tqdm: 4.67.1
2025-09-05 21:39:08,485:INFO:               numpy: 1.26.4
2025-09-05 21:39:08,485:INFO:              pandas: 2.1.4
2025-09-05 21:39:08,485:INFO:              jinja2: 3.1.6
2025-09-05 21:39:08,485:INFO:               scipy: 1.11.4
2025-09-05 21:39:08,485:INFO:              joblib: 1.3.2
2025-09-05 21:39:08,485:INFO:             sklearn: 1.4.2
2025-09-05 21:39:08,485:INFO:                pyod: 2.0.5
2025-09-05 21:39:08,485:INFO:            imblearn: 0.14.0
2025-09-05 21:39:08,485:INFO:   category_encoders: 2.7.0
2025-09-05 21:39:08,485:INFO:            lightgbm: 4.6.0
2025-09-05 21:39:08,485:INFO:               numba: 0.61.2
2025-09-05 21:39:08,485:INFO:            requests: 2.32.5
2025-09-05 21:39:08,485:INFO:          matplotlib: 3.7.5
2025-09-05 21:39:08,485:INFO:          scikitplot: 0.3.7
2025-09-05 21:39:08,485:INFO:         yellowbrick: 1.5
2025-09-05 21:39:08,485:INFO:              plotly: 6.3.0
2025-09-05 21:39:08,485:INFO:    plotly-resampler: Not installed
2025-09-05 21:39:08,485:INFO:             kaleido: 1.0.0
2025-09-05 21:39:08,485:INFO:           schemdraw: 0.15
2025-09-05 21:39:08,485:INFO:         statsmodels: 0.14.5
2025-09-05 21:39:08,485:INFO:              sktime: 0.26.0
2025-09-05 21:39:08,485:INFO:               tbats: 1.1.3
2025-09-05 21:39:08,485:INFO:            pmdarima: 2.0.4
2025-09-05 21:39:08,485:INFO:              psutil: 7.0.0
2025-09-05 21:39:08,485:INFO:          markupsafe: 3.0.2
2025-09-05 21:39:08,485:INFO:             pickle5: Not installed
2025-09-05 21:39:08,485:INFO:         cloudpickle: 3.1.1
2025-09-05 21:39:08,485:INFO:         deprecation: 2.1.0
2025-09-05 21:39:08,485:INFO:              xxhash: 3.5.0
2025-09-05 21:39:08,485:INFO:           wurlitzer: Not installed
2025-09-05 21:39:08,485:INFO:PyCaret optional dependencies:
2025-09-05 21:39:08,514:INFO:                shap: 0.48.0
2025-09-05 21:39:08,514:INFO:           interpret: Not installed
2025-09-05 21:39:08,514:INFO:                umap: Not installed
2025-09-05 21:39:08,514:INFO:     ydata_profiling: Not installed
2025-09-05 21:39:08,514:INFO:  explainerdashboard: Not installed
2025-09-05 21:39:08,514:INFO:             autoviz: Not installed
2025-09-05 21:39:08,514:INFO:           fairlearn: Not installed
2025-09-05 21:39:08,514:INFO:          deepchecks: Not installed
2025-09-05 21:39:08,514:INFO:             xgboost: 3.0.5
2025-09-05 21:39:08,514:INFO:            catboost: Not installed
2025-09-05 21:39:08,514:INFO:              kmodes: Not installed
2025-09-05 21:39:08,514:INFO:             mlxtend: Not installed
2025-09-05 21:39:08,514:INFO:       statsforecast: Not installed
2025-09-05 21:39:08,514:INFO:        tune_sklearn: Not installed
2025-09-05 21:39:08,514:INFO:                 ray: Not installed
2025-09-05 21:39:08,514:INFO:            hyperopt: Not installed
2025-09-05 21:39:08,514:INFO:              optuna: Not installed
2025-09-05 21:39:08,514:INFO:               skopt: Not installed
2025-09-05 21:39:08,514:INFO:              mlflow: Not installed
2025-09-05 21:39:08,514:INFO:              gradio: Not installed
2025-09-05 21:39:08,514:INFO:             fastapi: Not installed
2025-09-05 21:39:08,514:INFO:             uvicorn: Not installed
2025-09-05 21:39:08,514:INFO:              m2cgen: Not installed
2025-09-05 21:39:08,514:INFO:           evidently: Not installed
2025-09-05 21:39:08,514:INFO:               fugue: Not installed
2025-09-05 21:39:08,514:INFO:           streamlit: Not installed
2025-09-05 21:39:08,514:INFO:             prophet: Not installed
2025-09-05 21:39:08,514:INFO:None
2025-09-05 21:39:08,514:INFO:Set up data.
2025-09-05 21:39:08,670:INFO:Set up folding strategy.
2025-09-05 21:39:08,670:INFO:Set up train/test split.
2025-09-05 21:39:08,905:INFO:Set up index.
2025-09-05 21:39:08,915:INFO:Assigning column types.
2025-09-05 21:39:09,085:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-05 21:39:09,085:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,095:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,095:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,233:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,249:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,259:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:09,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:09,259:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,259:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,259:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,426:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:09,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:09,426:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-05 21:39:09,426:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,433:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,566:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,586:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,586:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:09,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:09,597:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,599:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,733:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,750:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:09,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:09,759:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-05 21:39:09,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,892:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,916:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:09,916:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:09,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:09,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,143:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:10,143:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:10,143:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-05 21:39:10,266:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,292:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:10,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:10,425:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,442:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:10,442:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:10,442:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-05 21:39:10,564:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,585:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:10,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:10,715:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-05 21:39:10,738:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:10,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:10,738:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-05 21:39:10,869:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:10,869:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:11,032:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:11,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:11,032:INFO:Preparing preprocessing pipeline...
2025-09-05 21:39:11,032:INFO:Set up simple imputation.
2025-09-05 21:39:11,032:INFO:Set up feature normalization.
2025-09-05 21:39:11,135:INFO:Set up column name cleaning.
2025-09-05 21:39:11,479:INFO:Finished creating preprocessing pipeline.
2025-09-05 21:39:11,484:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-05 21:39:11,484:INFO:Creating final display dataframe.
2025-09-05 21:39:12,552:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target           action2
2                   Target type        Regression
3           Original data shape      (15000, 507)
4        Transformed data shape      (15000, 507)
5   Transformed train set shape      (10500, 507)
6    Transformed test set shape       (4500, 507)
7              Numeric features               506
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              6153
2025-09-05 21:39:12,700:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:12,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:12,842:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-05 21:39:12,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-05 21:39:12,842:INFO:setup() successfully completed in 4.38s...............
2025-09-05 21:39:12,842:INFO:Initializing compare_models()
2025-09-05 21:39:12,842:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-05 21:39:12,842:INFO:Checking exceptions
2025-09-05 21:39:12,896:INFO:Preparing display monitor
2025-09-05 21:39:12,899:INFO:Initializing Decision Tree Regressor
2025-09-05 21:39:12,899:INFO:Total runtime is 0.0 minutes
2025-09-05 21:39:12,899:INFO:SubProcess create_model() called ==================================
2025-09-05 21:39:12,899:INFO:Initializing create_model()
2025-09-05 21:39:12,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C85F732D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:39:12,899:INFO:Checking exceptions
2025-09-05 21:39:12,899:INFO:Importing libraries
2025-09-05 21:39:12,899:INFO:Copying training dataset
2025-09-05 21:39:13,030:INFO:Defining folds
2025-09-05 21:39:13,030:INFO:Declaring metric variables
2025-09-05 21:39:13,030:INFO:Importing untrained model
2025-09-05 21:39:13,030:INFO:Decision Tree Regressor Imported successfully
2025-09-05 21:39:13,030:INFO:Starting cross validation
2025-09-05 21:39:13,032:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:39:17,711:INFO:Calculating mean and std
2025-09-05 21:39:17,711:INFO:Creating metrics dataframe
2025-09-05 21:39:17,711:INFO:Uploading results into container
2025-09-05 21:39:17,711:INFO:Uploading model into container now
2025-09-05 21:39:17,711:INFO:_master_model_container: 1
2025-09-05 21:39:17,711:INFO:_display_container: 2
2025-09-05 21:39:17,711:INFO:DecisionTreeRegressor(random_state=791)
2025-09-05 21:39:17,711:INFO:create_model() successfully completed......................................
2025-09-05 21:39:17,791:INFO:SubProcess create_model() end ==================================
2025-09-05 21:39:17,791:INFO:Creating metrics dataframe
2025-09-05 21:39:17,793:INFO:Initializing Random Forest Regressor
2025-09-05 21:39:17,793:INFO:Total runtime is 0.08156348466873169 minutes
2025-09-05 21:39:17,793:INFO:SubProcess create_model() called ==================================
2025-09-05 21:39:17,793:INFO:Initializing create_model()
2025-09-05 21:39:17,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C85F732D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:39:17,793:INFO:Checking exceptions
2025-09-05 21:39:17,793:INFO:Importing libraries
2025-09-05 21:39:17,793:INFO:Copying training dataset
2025-09-05 21:39:17,935:INFO:Defining folds
2025-09-05 21:39:17,935:INFO:Declaring metric variables
2025-09-05 21:39:17,935:INFO:Importing untrained model
2025-09-05 21:39:17,935:INFO:Random Forest Regressor Imported successfully
2025-09-05 21:39:17,935:INFO:Starting cross validation
2025-09-05 21:39:17,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:40:03,973:INFO:Calculating mean and std
2025-09-05 21:40:03,973:INFO:Creating metrics dataframe
2025-09-05 21:40:03,973:INFO:Uploading results into container
2025-09-05 21:40:03,973:INFO:Uploading model into container now
2025-09-05 21:40:03,973:INFO:_master_model_container: 2
2025-09-05 21:40:03,973:INFO:_display_container: 2
2025-09-05 21:40:03,973:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-05 21:40:03,973:INFO:create_model() successfully completed......................................
2025-09-05 21:40:04,063:INFO:SubProcess create_model() end ==================================
2025-09-05 21:40:04,063:INFO:Creating metrics dataframe
2025-09-05 21:40:04,073:INFO:Initializing Gradient Boosting Regressor
2025-09-05 21:40:04,073:INFO:Total runtime is 0.8529072920481363 minutes
2025-09-05 21:40:04,073:INFO:SubProcess create_model() called ==================================
2025-09-05 21:40:04,073:INFO:Initializing create_model()
2025-09-05 21:40:04,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C85F732D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:40:04,073:INFO:Checking exceptions
2025-09-05 21:40:04,073:INFO:Importing libraries
2025-09-05 21:40:04,073:INFO:Copying training dataset
2025-09-05 21:40:04,214:INFO:Defining folds
2025-09-05 21:40:04,214:INFO:Declaring metric variables
2025-09-05 21:40:04,214:INFO:Importing untrained model
2025-09-05 21:40:04,214:INFO:Gradient Boosting Regressor Imported successfully
2025-09-05 21:40:04,214:INFO:Starting cross validation
2025-09-05 21:40:04,214:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:40:45,482:INFO:Calculating mean and std
2025-09-05 21:40:45,482:INFO:Creating metrics dataframe
2025-09-05 21:40:45,482:INFO:Uploading results into container
2025-09-05 21:40:45,482:INFO:Uploading model into container now
2025-09-05 21:40:45,482:INFO:_master_model_container: 3
2025-09-05 21:40:45,482:INFO:_display_container: 2
2025-09-05 21:40:45,482:INFO:GradientBoostingRegressor(random_state=791)
2025-09-05 21:40:45,482:INFO:create_model() successfully completed......................................
2025-09-05 21:40:45,560:INFO:SubProcess create_model() end ==================================
2025-09-05 21:40:45,560:INFO:Creating metrics dataframe
2025-09-05 21:40:45,560:INFO:Initializing Extreme Gradient Boosting
2025-09-05 21:40:45,560:INFO:Total runtime is 1.5443464120229085 minutes
2025-09-05 21:40:45,560:INFO:SubProcess create_model() called ==================================
2025-09-05 21:40:45,560:INFO:Initializing create_model()
2025-09-05 21:40:45,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C85F732D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:40:45,560:INFO:Checking exceptions
2025-09-05 21:40:45,560:INFO:Importing libraries
2025-09-05 21:40:45,560:INFO:Copying training dataset
2025-09-05 21:40:45,681:INFO:Defining folds
2025-09-05 21:40:45,681:INFO:Declaring metric variables
2025-09-05 21:40:45,681:INFO:Importing untrained model
2025-09-05 21:40:45,681:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:40:45,681:INFO:Starting cross validation
2025-09-05 21:40:45,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-05 21:40:54,231:INFO:Calculating mean and std
2025-09-05 21:40:54,231:INFO:Creating metrics dataframe
2025-09-05 21:40:54,231:INFO:Uploading results into container
2025-09-05 21:40:54,231:INFO:Uploading model into container now
2025-09-05 21:40:54,231:INFO:_master_model_container: 4
2025-09-05 21:40:54,231:INFO:_display_container: 2
2025-09-05 21:40:54,231:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:40:54,231:INFO:create_model() successfully completed......................................
2025-09-05 21:40:54,308:INFO:SubProcess create_model() end ==================================
2025-09-05 21:40:54,308:INFO:Creating metrics dataframe
2025-09-05 21:40:54,308:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-05 21:40:54,308:INFO:Initializing create_model()
2025-09-05 21:40:54,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:40:54,308:INFO:Checking exceptions
2025-09-05 21:40:54,308:INFO:Importing libraries
2025-09-05 21:40:54,308:INFO:Copying training dataset
2025-09-05 21:40:54,439:INFO:Defining folds
2025-09-05 21:40:54,439:INFO:Declaring metric variables
2025-09-05 21:40:54,439:INFO:Importing untrained model
2025-09-05 21:40:54,439:INFO:Declaring custom model
2025-09-05 21:40:54,439:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:40:54,439:INFO:Cross validation set to False
2025-09-05 21:40:54,439:INFO:Fitting Model
2025-09-05 21:40:56,619:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:40:56,619:INFO:create_model() successfully completed......................................
2025-09-05 21:40:56,756:INFO:_master_model_container: 4
2025-09-05 21:40:56,756:INFO:_display_container: 2
2025-09-05 21:40:56,756:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:40:56,756:INFO:compare_models() successfully completed......................................
2025-09-05 21:40:56,768:INFO:Initializing finalize_model()
2025-09-05 21:40:56,768:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-05 21:40:56,769:INFO:Finalizing XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-05 21:40:56,875:INFO:Initializing create_model()
2025-09-05 21:40:56,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C85EF176D0>, estimator=XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-05 21:40:56,875:INFO:Checking exceptions
2025-09-05 21:40:56,875:INFO:Importing libraries
2025-09-05 21:40:56,875:INFO:Copying training dataset
2025-09-05 21:40:56,895:INFO:Defining folds
2025-09-05 21:40:56,895:INFO:Declaring metric variables
2025-09-05 21:40:56,895:INFO:Importing untrained model
2025-09-05 21:40:56,895:INFO:Declaring custom model
2025-09-05 21:40:56,895:INFO:Extreme Gradient Boosting Imported successfully
2025-09-05 21:40:56,905:INFO:Cross validation set to False
2025-09-05 21:40:56,905:INFO:Fitting Model
2025-09-05 21:40:59,471:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:40:59,471:INFO:create_model() successfully completed......................................
2025-09-05 21:40:59,595:INFO:_master_model_container: 4
2025-09-05 21:40:59,595:INFO:_display_container: 2
2025-09-05 21:40:59,605:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:40:59,605:INFO:finalize_model() successfully completed......................................
2025-09-05 21:40:59,687:INFO:Initializing save_model()
2025-09-05 21:40:59,687:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))]), model_name=out/action2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3',...
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-05 21:40:59,687:INFO:Adding model into prep_pipe
2025-09-05 21:40:59,687:WARNING:Only Model saved as it was a pipeline.
2025-09-05 21:40:59,705:INFO:out/action2/pycaret/model.pkl saved in current working directory
2025-09-05 21:40:59,715:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'action1', 'Action_space1',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_...
                              feature_types=None, feature_weights=None,
                              gamma=None, grow_policy=None,
                              importance_type=None,
                              interaction_constraints=None, learning_rate=None,
                              max_bin=None, max_cat_threshold=None,
                              max_cat_to_onehot=None, max_delta_step=None,
                              max_depth=None, max_leaves=None,
                              min_child_weight=None, missing=nan,
                              monotone_constraints=None, multi_strategy=None,
                              n_estimators=None, n_jobs=-1,
                              num_parallel_tree=None, ...))])
2025-09-05 21:40:59,715:INFO:save_model() successfully completed......................................
2025-09-05 21:41:01,006:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-05 21:41:03,257:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-05 21:41:06,188:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:12:58,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:12:58,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:12:58,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:12:58,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:13:27,861:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-08 09:14:23,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:14:23,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:14:23,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:14:23,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:14:42,547:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-08 09:14:59,337:INFO:PyCaret RegressionExperiment
2025-09-08 09:14:59,337:INFO:Logging name: reg-default-name
2025-09-08 09:14:59,337:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:14:59,337:INFO:version 3.3.2
2025-09-08 09:14:59,337:INFO:Initializing setup()
2025-09-08 09:14:59,337:INFO:self.USI: 24f3
2025-09-08 09:14:59,337:INFO:self._variable_keys: {'y_test', 'y_train', 'target_param', 'html_param', 'gpu_param', 'USI', 'n_jobs_param', 'X_test', 'seed', '_ml_usecase', '_available_plots', 'X', 'memory', 'y', 'X_train', 'fold_shuffle_param', 'exp_name_log', 'transform_target_param', 'fold_generator', 'idx', 'gpu_n_jobs_param', 'fold_groups_param', 'pipeline', 'data', 'exp_id', 'logging_param', 'log_plots_param'}
2025-09-08 09:14:59,337:INFO:Checking environment
2025-09-08 09:14:59,337:INFO:python_version: 3.11.9
2025-09-08 09:14:59,337:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:14:59,337:INFO:machine: AMD64
2025-09-08 09:14:59,343:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:14:59,343:INFO:Memory: svmem(total=16766066688, available=4945534976, percent=70.5, used=11820531712, free=4945534976)
2025-09-08 09:14:59,343:INFO:Physical Core: 16
2025-09-08 09:14:59,343:INFO:Logical Core: 22
2025-09-08 09:14:59,343:INFO:Checking libraries
2025-09-08 09:14:59,343:INFO:System:
2025-09-08 09:14:59,343:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:14:59,343:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:14:59,343:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:14:59,343:INFO:PyCaret required dependencies:
2025-09-08 09:14:59,406:INFO:                 pip: 25.2
2025-09-08 09:14:59,406:INFO:          setuptools: 65.5.0
2025-09-08 09:14:59,406:INFO:             pycaret: 3.3.2
2025-09-08 09:14:59,406:INFO:             IPython: 9.5.0
2025-09-08 09:14:59,406:INFO:          ipywidgets: 8.1.7
2025-09-08 09:14:59,406:INFO:                tqdm: 4.67.1
2025-09-08 09:14:59,406:INFO:               numpy: 1.26.4
2025-09-08 09:14:59,406:INFO:              pandas: 2.1.4
2025-09-08 09:14:59,406:INFO:              jinja2: 3.1.6
2025-09-08 09:14:59,406:INFO:               scipy: 1.11.4
2025-09-08 09:14:59,406:INFO:              joblib: 1.3.2
2025-09-08 09:14:59,406:INFO:             sklearn: 1.4.2
2025-09-08 09:14:59,406:INFO:                pyod: 2.0.5
2025-09-08 09:14:59,406:INFO:            imblearn: 0.14.0
2025-09-08 09:14:59,406:INFO:   category_encoders: 2.7.0
2025-09-08 09:14:59,406:INFO:            lightgbm: 4.6.0
2025-09-08 09:14:59,406:INFO:               numba: 0.61.2
2025-09-08 09:14:59,406:INFO:            requests: 2.32.5
2025-09-08 09:14:59,406:INFO:          matplotlib: 3.7.5
2025-09-08 09:14:59,406:INFO:          scikitplot: 0.3.7
2025-09-08 09:14:59,406:INFO:         yellowbrick: 1.5
2025-09-08 09:14:59,406:INFO:              plotly: 6.3.0
2025-09-08 09:14:59,406:INFO:    plotly-resampler: Not installed
2025-09-08 09:14:59,406:INFO:             kaleido: 1.0.0
2025-09-08 09:14:59,406:INFO:           schemdraw: 0.15
2025-09-08 09:14:59,406:INFO:         statsmodels: 0.14.5
2025-09-08 09:14:59,406:INFO:              sktime: 0.26.0
2025-09-08 09:14:59,406:INFO:               tbats: 1.1.3
2025-09-08 09:14:59,406:INFO:            pmdarima: 2.0.4
2025-09-08 09:14:59,406:INFO:              psutil: 7.0.0
2025-09-08 09:14:59,406:INFO:          markupsafe: 3.0.2
2025-09-08 09:14:59,406:INFO:             pickle5: Not installed
2025-09-08 09:14:59,406:INFO:         cloudpickle: 3.1.1
2025-09-08 09:14:59,407:INFO:         deprecation: 2.1.0
2025-09-08 09:14:59,407:INFO:              xxhash: 3.5.0
2025-09-08 09:14:59,407:INFO:           wurlitzer: Not installed
2025-09-08 09:14:59,407:INFO:PyCaret optional dependencies:
2025-09-08 09:14:59,502:INFO:                shap: 0.48.0
2025-09-08 09:14:59,503:INFO:           interpret: Not installed
2025-09-08 09:14:59,503:INFO:                umap: Not installed
2025-09-08 09:14:59,503:INFO:     ydata_profiling: Not installed
2025-09-08 09:14:59,503:INFO:  explainerdashboard: Not installed
2025-09-08 09:14:59,503:INFO:             autoviz: Not installed
2025-09-08 09:14:59,503:INFO:           fairlearn: Not installed
2025-09-08 09:14:59,503:INFO:          deepchecks: Not installed
2025-09-08 09:14:59,503:INFO:             xgboost: 3.0.5
2025-09-08 09:14:59,503:INFO:            catboost: Not installed
2025-09-08 09:14:59,503:INFO:              kmodes: Not installed
2025-09-08 09:14:59,503:INFO:             mlxtend: Not installed
2025-09-08 09:14:59,503:INFO:       statsforecast: Not installed
2025-09-08 09:14:59,503:INFO:        tune_sklearn: Not installed
2025-09-08 09:14:59,503:INFO:                 ray: Not installed
2025-09-08 09:14:59,503:INFO:            hyperopt: Not installed
2025-09-08 09:14:59,503:INFO:              optuna: Not installed
2025-09-08 09:14:59,503:INFO:               skopt: Not installed
2025-09-08 09:14:59,503:INFO:              mlflow: Not installed
2025-09-08 09:14:59,503:INFO:              gradio: Not installed
2025-09-08 09:14:59,503:INFO:             fastapi: Not installed
2025-09-08 09:14:59,503:INFO:             uvicorn: Not installed
2025-09-08 09:14:59,503:INFO:              m2cgen: Not installed
2025-09-08 09:14:59,503:INFO:           evidently: Not installed
2025-09-08 09:14:59,503:INFO:               fugue: Not installed
2025-09-08 09:14:59,503:INFO:           streamlit: Not installed
2025-09-08 09:14:59,503:INFO:             prophet: Not installed
2025-09-08 09:14:59,503:INFO:None
2025-09-08 09:14:59,503:INFO:Set up data.
2025-09-08 09:14:59,506:INFO:Set up folding strategy.
2025-09-08 09:14:59,506:INFO:Set up train/test split.
2025-09-08 09:14:59,506:INFO:Set up index.
2025-09-08 09:14:59,506:INFO:Assigning column types.
2025-09-08 09:14:59,516:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:14:59,516:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,518:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,520:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,547:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,576:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,578:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,582:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,628:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,634:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:14:59,634:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,638:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,688:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,692:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,694:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,722:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,749:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,750:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,751:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:14:59,755:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,784:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,806:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,806:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,811:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,865:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,865:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:14:59,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,932:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,932:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,965:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:14:59,991:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:14:59,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:14:59,993:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:15:00,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:15:00,050:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:15:00,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:15:00,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:15:00,105:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:15:00,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:15:00,117:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:15:00,177:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:15:00,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:15:00,239:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:15:00,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:15:00,259:INFO:Preparing preprocessing pipeline...
2025-09-08 09:15:00,259:INFO:Set up simple imputation.
2025-09-08 09:15:00,259:INFO:Set up feature normalization.
2025-09-08 09:15:00,259:INFO:Set up column name cleaning.
2025-09-08 09:15:00,289:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:15:00,298:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bound...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:15:00,298:INFO:Creating final display dataframe.
2025-09-08 09:15:00,382:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target         Passes P2
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              24f3
2025-09-08 09:15:00,438:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:15:00,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:15:00,500:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:15:00,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:15:00,502:INFO:setup() successfully completed in 1.17s...............
2025-09-08 09:15:00,502:INFO:Initializing compare_models()
2025-09-08 09:15:00,502:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:15:00,502:INFO:Checking exceptions
2025-09-08 09:15:00,506:INFO:Preparing display monitor
2025-09-08 09:15:00,510:INFO:Initializing Decision Tree Regressor
2025-09-08 09:15:00,510:INFO:Total runtime is 0.0 minutes
2025-09-08 09:15:00,510:INFO:SubProcess create_model() called ==================================
2025-09-08 09:15:00,510:INFO:Initializing create_model()
2025-09-08 09:15:00,510:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D4F0D28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:15:00,510:INFO:Checking exceptions
2025-09-08 09:15:00,510:INFO:Importing libraries
2025-09-08 09:15:00,510:INFO:Copying training dataset
2025-09-08 09:15:00,512:INFO:Defining folds
2025-09-08 09:15:00,512:INFO:Declaring metric variables
2025-09-08 09:15:00,512:INFO:Importing untrained model
2025-09-08 09:15:00,512:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:15:00,512:INFO:Starting cross validation
2025-09-08 09:15:00,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:15:03,545:INFO:Calculating mean and std
2025-09-08 09:15:03,547:INFO:Creating metrics dataframe
2025-09-08 09:15:03,551:INFO:Uploading results into container
2025-09-08 09:15:03,551:INFO:Uploading model into container now
2025-09-08 09:15:03,551:INFO:_master_model_container: 1
2025-09-08 09:15:03,551:INFO:_display_container: 2
2025-09-08 09:15:03,551:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:15:03,551:INFO:create_model() successfully completed......................................
2025-09-08 09:15:03,638:INFO:SubProcess create_model() end ==================================
2025-09-08 09:15:03,638:INFO:Creating metrics dataframe
2025-09-08 09:15:03,646:INFO:Initializing Random Forest Regressor
2025-09-08 09:15:03,648:INFO:Total runtime is 0.052297544479370114 minutes
2025-09-08 09:15:03,648:INFO:SubProcess create_model() called ==================================
2025-09-08 09:15:03,648:INFO:Initializing create_model()
2025-09-08 09:15:03,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D4F0D28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:15:03,648:INFO:Checking exceptions
2025-09-08 09:15:03,648:INFO:Importing libraries
2025-09-08 09:15:03,648:INFO:Copying training dataset
2025-09-08 09:15:03,652:INFO:Defining folds
2025-09-08 09:15:03,652:INFO:Declaring metric variables
2025-09-08 09:15:03,652:INFO:Importing untrained model
2025-09-08 09:15:03,652:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:15:03,652:INFO:Starting cross validation
2025-09-08 09:15:03,652:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:15:06,254:INFO:Calculating mean and std
2025-09-08 09:15:06,255:INFO:Creating metrics dataframe
2025-09-08 09:15:06,255:INFO:Uploading results into container
2025-09-08 09:15:06,257:INFO:Uploading model into container now
2025-09-08 09:15:06,257:INFO:_master_model_container: 2
2025-09-08 09:15:06,257:INFO:_display_container: 2
2025-09-08 09:15:06,257:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-08 09:15:06,257:INFO:create_model() successfully completed......................................
2025-09-08 09:15:06,343:INFO:SubProcess create_model() end ==================================
2025-09-08 09:15:06,343:INFO:Creating metrics dataframe
2025-09-08 09:15:06,351:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:15:06,351:INFO:Total runtime is 0.09735082387924193 minutes
2025-09-08 09:15:06,351:INFO:SubProcess create_model() called ==================================
2025-09-08 09:15:06,351:INFO:Initializing create_model()
2025-09-08 09:15:06,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D4F0D28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:15:06,351:INFO:Checking exceptions
2025-09-08 09:15:06,351:INFO:Importing libraries
2025-09-08 09:15:06,351:INFO:Copying training dataset
2025-09-08 09:15:06,354:INFO:Defining folds
2025-09-08 09:15:06,354:INFO:Declaring metric variables
2025-09-08 09:15:06,354:INFO:Importing untrained model
2025-09-08 09:15:06,354:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:15:06,354:INFO:Starting cross validation
2025-09-08 09:15:06,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:15:07,968:INFO:Calculating mean and std
2025-09-08 09:15:07,968:INFO:Creating metrics dataframe
2025-09-08 09:15:07,968:INFO:Uploading results into container
2025-09-08 09:15:07,968:INFO:Uploading model into container now
2025-09-08 09:15:07,968:INFO:_master_model_container: 3
2025-09-08 09:15:07,971:INFO:_display_container: 2
2025-09-08 09:15:07,971:INFO:GradientBoostingRegressor(random_state=791)
2025-09-08 09:15:07,971:INFO:create_model() successfully completed......................................
2025-09-08 09:15:08,048:INFO:SubProcess create_model() end ==================================
2025-09-08 09:15:08,048:INFO:Creating metrics dataframe
2025-09-08 09:15:08,052:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:15:08,052:INFO:Total runtime is 0.1257002035776774 minutes
2025-09-08 09:15:08,052:INFO:SubProcess create_model() called ==================================
2025-09-08 09:15:08,052:INFO:Initializing create_model()
2025-09-08 09:15:08,052:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D4F0D28D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:15:08,053:INFO:Checking exceptions
2025-09-08 09:15:08,053:INFO:Importing libraries
2025-09-08 09:15:08,053:INFO:Copying training dataset
2025-09-08 09:15:08,057:INFO:Defining folds
2025-09-08 09:15:08,058:INFO:Declaring metric variables
2025-09-08 09:15:08,058:INFO:Importing untrained model
2025-09-08 09:15:08,058:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:15:08,058:INFO:Starting cross validation
2025-09-08 09:15:08,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:15:08,173:INFO:Calculating mean and std
2025-09-08 09:15:08,173:INFO:Creating metrics dataframe
2025-09-08 09:15:08,173:INFO:Uploading results into container
2025-09-08 09:15:08,173:INFO:Uploading model into container now
2025-09-08 09:15:08,173:INFO:_master_model_container: 4
2025-09-08 09:15:08,173:INFO:_display_container: 2
2025-09-08 09:15:08,173:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:15:08,173:INFO:create_model() successfully completed......................................
2025-09-08 09:15:08,246:INFO:SubProcess create_model() end ==================================
2025-09-08 09:15:08,246:INFO:Creating metrics dataframe
2025-09-08 09:15:08,282:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:15:08,285:INFO:Initializing create_model()
2025-09-08 09:15:08,285:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:15:08,285:INFO:Checking exceptions
2025-09-08 09:15:08,286:INFO:Importing libraries
2025-09-08 09:15:08,286:INFO:Copying training dataset
2025-09-08 09:15:08,287:INFO:Defining folds
2025-09-08 09:15:08,287:INFO:Declaring metric variables
2025-09-08 09:15:08,287:INFO:Importing untrained model
2025-09-08 09:15:08,287:INFO:Declaring custom model
2025-09-08 09:15:08,287:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:15:08,287:INFO:Cross validation set to False
2025-09-08 09:15:08,287:INFO:Fitting Model
2025-09-08 09:15:08,299:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:15:08,299:INFO:create_model() successfully completed......................................
2025-09-08 09:15:08,379:INFO:_master_model_container: 4
2025-09-08 09:15:08,379:INFO:_display_container: 2
2025-09-08 09:15:08,379:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:15:08,379:INFO:compare_models() successfully completed......................................
2025-09-08 09:15:08,389:INFO:Initializing finalize_model()
2025-09-08 09:15:08,389:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:15:08,389:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-08 09:15:08,391:INFO:Initializing create_model()
2025-09-08 09:15:08,391:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000019D452E6410>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:15:08,391:INFO:Checking exceptions
2025-09-08 09:15:08,392:INFO:Importing libraries
2025-09-08 09:15:08,392:INFO:Copying training dataset
2025-09-08 09:15:08,392:INFO:Defining folds
2025-09-08 09:15:08,392:INFO:Declaring metric variables
2025-09-08 09:15:08,392:INFO:Importing untrained model
2025-09-08 09:15:08,393:INFO:Declaring custom model
2025-09-08 09:15:08,393:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:15:08,393:INFO:Cross validation set to False
2025-09-08 09:15:08,393:INFO:Fitting Model
2025-09-08 09:15:08,399:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:15:08,399:INFO:create_model() successfully completed......................................
2025-09-08 09:15:08,483:INFO:_master_model_container: 4
2025-09-08 09:15:08,483:INFO:_display_container: 2
2025-09-08 09:15:08,488:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:15:08,488:INFO:finalize_model() successfully completed......................................
2025-09-08 09:15:08,570:INFO:Initializing save_model()
2025-09-08 09:15:08,570:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/Passes P2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bound...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:15:08,570:INFO:Adding model into prep_pipe
2025-09-08 09:15:08,570:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:15:08,572:INFO:out/Passes P2/pycaret/model.pkl saved in current working directory
2025-09-08 09:15:08,575:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:15:08,575:INFO:save_model() successfully completed......................................
2025-09-08 09:15:08,856:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:15:09,220:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:15:31,028:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:15:46,670:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:16:56,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:16:56,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:16:56,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:16:56,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:17:05,230:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-08 09:17:11,367:INFO:PyCaret RegressionExperiment
2025-09-08 09:17:11,367:INFO:Logging name: reg-default-name
2025-09-08 09:17:11,367:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:17:11,367:INFO:version 3.3.2
2025-09-08 09:17:11,367:INFO:Initializing setup()
2025-09-08 09:17:11,367:INFO:self.USI: c17f
2025-09-08 09:17:11,367:INFO:self._variable_keys: {'gpu_param', '_available_plots', 'fold_groups_param', 'target_param', '_ml_usecase', 'fold_shuffle_param', 'exp_name_log', 'USI', 'log_plots_param', 'X_test', 'exp_id', 'logging_param', 'y', 'n_jobs_param', 'seed', 'y_train', 'data', 'gpu_n_jobs_param', 'X', 'idx', 'transform_target_param', 'fold_generator', 'html_param', 'y_test', 'memory', 'X_train', 'pipeline'}
2025-09-08 09:17:11,367:INFO:Checking environment
2025-09-08 09:17:11,367:INFO:python_version: 3.11.9
2025-09-08 09:17:11,367:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:17:11,367:INFO:machine: AMD64
2025-09-08 09:17:11,376:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:17:11,376:INFO:Memory: svmem(total=16766066688, available=6010474496, percent=64.2, used=10755592192, free=6010474496)
2025-09-08 09:17:11,376:INFO:Physical Core: 16
2025-09-08 09:17:11,376:INFO:Logical Core: 22
2025-09-08 09:17:11,376:INFO:Checking libraries
2025-09-08 09:17:11,376:INFO:System:
2025-09-08 09:17:11,376:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:17:11,376:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:17:11,376:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:17:11,376:INFO:PyCaret required dependencies:
2025-09-08 09:17:11,393:INFO:                 pip: 25.2
2025-09-08 09:17:11,393:INFO:          setuptools: 65.5.0
2025-09-08 09:17:11,393:INFO:             pycaret: 3.3.2
2025-09-08 09:17:11,393:INFO:             IPython: 9.5.0
2025-09-08 09:17:11,393:INFO:          ipywidgets: 8.1.7
2025-09-08 09:17:11,393:INFO:                tqdm: 4.67.1
2025-09-08 09:17:11,393:INFO:               numpy: 1.26.4
2025-09-08 09:17:11,393:INFO:              pandas: 2.1.4
2025-09-08 09:17:11,393:INFO:              jinja2: 3.1.6
2025-09-08 09:17:11,393:INFO:               scipy: 1.11.4
2025-09-08 09:17:11,394:INFO:              joblib: 1.3.2
2025-09-08 09:17:11,394:INFO:             sklearn: 1.4.2
2025-09-08 09:17:11,394:INFO:                pyod: 2.0.5
2025-09-08 09:17:11,394:INFO:            imblearn: 0.14.0
2025-09-08 09:17:11,394:INFO:   category_encoders: 2.7.0
2025-09-08 09:17:11,394:INFO:            lightgbm: 4.6.0
2025-09-08 09:17:11,394:INFO:               numba: 0.61.2
2025-09-08 09:17:11,394:INFO:            requests: 2.32.5
2025-09-08 09:17:11,394:INFO:          matplotlib: 3.7.5
2025-09-08 09:17:11,394:INFO:          scikitplot: 0.3.7
2025-09-08 09:17:11,394:INFO:         yellowbrick: 1.5
2025-09-08 09:17:11,394:INFO:              plotly: 6.3.0
2025-09-08 09:17:11,394:INFO:    plotly-resampler: Not installed
2025-09-08 09:17:11,394:INFO:             kaleido: 1.0.0
2025-09-08 09:17:11,394:INFO:           schemdraw: 0.15
2025-09-08 09:17:11,394:INFO:         statsmodels: 0.14.5
2025-09-08 09:17:11,394:INFO:              sktime: 0.26.0
2025-09-08 09:17:11,394:INFO:               tbats: 1.1.3
2025-09-08 09:17:11,394:INFO:            pmdarima: 2.0.4
2025-09-08 09:17:11,394:INFO:              psutil: 7.0.0
2025-09-08 09:17:11,394:INFO:          markupsafe: 3.0.2
2025-09-08 09:17:11,394:INFO:             pickle5: Not installed
2025-09-08 09:17:11,394:INFO:         cloudpickle: 3.1.1
2025-09-08 09:17:11,394:INFO:         deprecation: 2.1.0
2025-09-08 09:17:11,394:INFO:              xxhash: 3.5.0
2025-09-08 09:17:11,394:INFO:           wurlitzer: Not installed
2025-09-08 09:17:11,394:INFO:PyCaret optional dependencies:
2025-09-08 09:17:11,417:INFO:                shap: 0.48.0
2025-09-08 09:17:11,417:INFO:           interpret: Not installed
2025-09-08 09:17:11,417:INFO:                umap: Not installed
2025-09-08 09:17:11,417:INFO:     ydata_profiling: Not installed
2025-09-08 09:17:11,417:INFO:  explainerdashboard: Not installed
2025-09-08 09:17:11,417:INFO:             autoviz: Not installed
2025-09-08 09:17:11,417:INFO:           fairlearn: Not installed
2025-09-08 09:17:11,417:INFO:          deepchecks: Not installed
2025-09-08 09:17:11,417:INFO:             xgboost: 3.0.5
2025-09-08 09:17:11,417:INFO:            catboost: Not installed
2025-09-08 09:17:11,417:INFO:              kmodes: Not installed
2025-09-08 09:17:11,417:INFO:             mlxtend: Not installed
2025-09-08 09:17:11,417:INFO:       statsforecast: Not installed
2025-09-08 09:17:11,417:INFO:        tune_sklearn: Not installed
2025-09-08 09:17:11,417:INFO:                 ray: Not installed
2025-09-08 09:17:11,417:INFO:            hyperopt: Not installed
2025-09-08 09:17:11,417:INFO:              optuna: Not installed
2025-09-08 09:17:11,417:INFO:               skopt: Not installed
2025-09-08 09:17:11,417:INFO:              mlflow: Not installed
2025-09-08 09:17:11,417:INFO:              gradio: Not installed
2025-09-08 09:17:11,417:INFO:             fastapi: Not installed
2025-09-08 09:17:11,417:INFO:             uvicorn: Not installed
2025-09-08 09:17:11,417:INFO:              m2cgen: Not installed
2025-09-08 09:17:11,417:INFO:           evidently: Not installed
2025-09-08 09:17:11,417:INFO:               fugue: Not installed
2025-09-08 09:17:11,417:INFO:           streamlit: Not installed
2025-09-08 09:17:11,417:INFO:             prophet: Not installed
2025-09-08 09:17:11,417:INFO:None
2025-09-08 09:17:11,417:INFO:Set up data.
2025-09-08 09:17:11,423:INFO:Set up folding strategy.
2025-09-08 09:17:11,423:INFO:Set up train/test split.
2025-09-08 09:17:11,425:INFO:Set up index.
2025-09-08 09:17:11,425:INFO:Assigning column types.
2025-09-08 09:17:11,427:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:17:11,427:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,429:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,431:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,466:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,483:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,483:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,494:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,494:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,515:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,545:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,545:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,545:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:17:11,554:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,555:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,597:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,597:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,607:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,607:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,638:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,660:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,660:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,660:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:17:11,669:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,689:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,721:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,721:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,723:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,727:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,776:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,778:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:17:11,809:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,823:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,823:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,873:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,894:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,894:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:17:11,924:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:11,945:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:11,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:11,985:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:17:12,005:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:12,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:12,005:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:17:12,065:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:12,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:12,117:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:12,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:12,127:INFO:Preparing preprocessing pipeline...
2025-09-08 09:17:12,127:INFO:Set up simple imputation.
2025-09-08 09:17:12,127:INFO:Set up feature normalization.
2025-09-08 09:17:12,127:INFO:Set up column name cleaning.
2025-09-08 09:17:12,148:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:17:12,148:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bound...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:17:12,148:INFO:Creating final display dataframe.
2025-09-08 09:17:12,210:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target         Passes P2
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              c17f
2025-09-08 09:17:12,268:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:12,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:12,321:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:17:12,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:17:12,321:INFO:setup() successfully completed in 0.96s...............
2025-09-08 09:17:12,321:INFO:Initializing compare_models()
2025-09-08 09:17:12,321:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:17:12,321:INFO:Checking exceptions
2025-09-08 09:17:12,331:INFO:Preparing display monitor
2025-09-08 09:17:12,333:INFO:Initializing Decision Tree Regressor
2025-09-08 09:17:12,333:INFO:Total runtime is 0.0 minutes
2025-09-08 09:17:12,333:INFO:SubProcess create_model() called ==================================
2025-09-08 09:17:12,333:INFO:Initializing create_model()
2025-09-08 09:17:12,333:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018DC87E0110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:17:12,333:INFO:Checking exceptions
2025-09-08 09:17:12,333:INFO:Importing libraries
2025-09-08 09:17:12,333:INFO:Copying training dataset
2025-09-08 09:17:12,333:INFO:Defining folds
2025-09-08 09:17:12,333:INFO:Declaring metric variables
2025-09-08 09:17:12,333:INFO:Importing untrained model
2025-09-08 09:17:12,333:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:17:12,333:INFO:Starting cross validation
2025-09-08 09:17:12,341:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:17:15,282:INFO:Calculating mean and std
2025-09-08 09:17:15,283:INFO:Creating metrics dataframe
2025-09-08 09:17:15,283:INFO:Uploading results into container
2025-09-08 09:17:15,285:INFO:Uploading model into container now
2025-09-08 09:17:15,285:INFO:_master_model_container: 1
2025-09-08 09:17:15,285:INFO:_display_container: 2
2025-09-08 09:17:15,285:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:17:15,285:INFO:create_model() successfully completed......................................
2025-09-08 09:17:15,365:INFO:SubProcess create_model() end ==================================
2025-09-08 09:17:15,366:INFO:Creating metrics dataframe
2025-09-08 09:17:15,367:INFO:Initializing Random Forest Regressor
2025-09-08 09:17:15,367:INFO:Total runtime is 0.05056302944819133 minutes
2025-09-08 09:17:15,368:INFO:SubProcess create_model() called ==================================
2025-09-08 09:17:15,368:INFO:Initializing create_model()
2025-09-08 09:17:15,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018DC87E0110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:17:15,368:INFO:Checking exceptions
2025-09-08 09:17:15,368:INFO:Importing libraries
2025-09-08 09:17:15,368:INFO:Copying training dataset
2025-09-08 09:17:15,371:INFO:Defining folds
2025-09-08 09:17:15,371:INFO:Declaring metric variables
2025-09-08 09:17:15,371:INFO:Importing untrained model
2025-09-08 09:17:15,371:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:17:15,371:INFO:Starting cross validation
2025-09-08 09:17:15,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:17:17,909:INFO:Calculating mean and std
2025-09-08 09:17:17,909:INFO:Creating metrics dataframe
2025-09-08 09:17:17,911:INFO:Uploading results into container
2025-09-08 09:17:17,913:INFO:Uploading model into container now
2025-09-08 09:17:17,913:INFO:_master_model_container: 2
2025-09-08 09:17:17,913:INFO:_display_container: 2
2025-09-08 09:17:17,913:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-08 09:17:17,913:INFO:create_model() successfully completed......................................
2025-09-08 09:17:18,004:INFO:SubProcess create_model() end ==================================
2025-09-08 09:17:18,004:INFO:Creating metrics dataframe
2025-09-08 09:17:18,005:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:17:18,005:INFO:Total runtime is 0.09452459414800007 minutes
2025-09-08 09:17:18,005:INFO:SubProcess create_model() called ==================================
2025-09-08 09:17:18,005:INFO:Initializing create_model()
2025-09-08 09:17:18,005:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018DC87E0110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:17:18,005:INFO:Checking exceptions
2025-09-08 09:17:18,005:INFO:Importing libraries
2025-09-08 09:17:18,005:INFO:Copying training dataset
2025-09-08 09:17:18,005:INFO:Defining folds
2025-09-08 09:17:18,005:INFO:Declaring metric variables
2025-09-08 09:17:18,005:INFO:Importing untrained model
2025-09-08 09:17:18,005:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:17:18,005:INFO:Starting cross validation
2025-09-08 09:17:18,005:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:17:19,594:INFO:Calculating mean and std
2025-09-08 09:17:19,594:INFO:Creating metrics dataframe
2025-09-08 09:17:19,596:INFO:Uploading results into container
2025-09-08 09:17:19,596:INFO:Uploading model into container now
2025-09-08 09:17:19,596:INFO:_master_model_container: 3
2025-09-08 09:17:19,596:INFO:_display_container: 2
2025-09-08 09:17:19,596:INFO:GradientBoostingRegressor(random_state=791)
2025-09-08 09:17:19,598:INFO:create_model() successfully completed......................................
2025-09-08 09:17:19,683:INFO:SubProcess create_model() end ==================================
2025-09-08 09:17:19,683:INFO:Creating metrics dataframe
2025-09-08 09:17:19,685:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:17:19,685:INFO:Total runtime is 0.12252866824467976 minutes
2025-09-08 09:17:19,685:INFO:SubProcess create_model() called ==================================
2025-09-08 09:17:19,685:INFO:Initializing create_model()
2025-09-08 09:17:19,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018DC87E0110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:17:19,685:INFO:Checking exceptions
2025-09-08 09:17:19,685:INFO:Importing libraries
2025-09-08 09:17:19,685:INFO:Copying training dataset
2025-09-08 09:17:19,691:INFO:Defining folds
2025-09-08 09:17:19,691:INFO:Declaring metric variables
2025-09-08 09:17:19,691:INFO:Importing untrained model
2025-09-08 09:17:19,692:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:17:19,692:INFO:Starting cross validation
2025-09-08 09:17:19,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:17:19,786:INFO:Calculating mean and std
2025-09-08 09:17:19,786:INFO:Creating metrics dataframe
2025-09-08 09:17:19,786:INFO:Uploading results into container
2025-09-08 09:17:19,786:INFO:Uploading model into container now
2025-09-08 09:17:19,786:INFO:_master_model_container: 4
2025-09-08 09:17:19,786:INFO:_display_container: 2
2025-09-08 09:17:19,786:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:17:19,786:INFO:create_model() successfully completed......................................
2025-09-08 09:17:19,857:INFO:SubProcess create_model() end ==================================
2025-09-08 09:17:19,857:INFO:Creating metrics dataframe
2025-09-08 09:17:19,861:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:17:19,861:INFO:Initializing create_model()
2025-09-08 09:17:19,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:17:19,861:INFO:Checking exceptions
2025-09-08 09:17:19,862:INFO:Importing libraries
2025-09-08 09:17:19,862:INFO:Copying training dataset
2025-09-08 09:17:19,865:INFO:Defining folds
2025-09-08 09:17:19,865:INFO:Declaring metric variables
2025-09-08 09:17:19,865:INFO:Importing untrained model
2025-09-08 09:17:19,865:INFO:Declaring custom model
2025-09-08 09:17:19,865:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:17:19,866:INFO:Cross validation set to False
2025-09-08 09:17:19,866:INFO:Fitting Model
2025-09-08 09:17:19,871:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:17:19,871:INFO:create_model() successfully completed......................................
2025-09-08 09:17:19,932:INFO:_master_model_container: 4
2025-09-08 09:17:19,932:INFO:_display_container: 2
2025-09-08 09:17:19,932:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:17:19,932:INFO:compare_models() successfully completed......................................
2025-09-08 09:17:19,932:INFO:Initializing finalize_model()
2025-09-08 09:17:19,932:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:17:19,932:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-08 09:17:19,942:INFO:Initializing create_model()
2025-09-08 09:17:19,942:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018DC23F5C50>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:17:19,942:INFO:Checking exceptions
2025-09-08 09:17:19,942:INFO:Importing libraries
2025-09-08 09:17:19,942:INFO:Copying training dataset
2025-09-08 09:17:19,944:INFO:Defining folds
2025-09-08 09:17:19,944:INFO:Declaring metric variables
2025-09-08 09:17:19,945:INFO:Importing untrained model
2025-09-08 09:17:19,945:INFO:Declaring custom model
2025-09-08 09:17:19,946:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:17:19,946:INFO:Cross validation set to False
2025-09-08 09:17:19,946:INFO:Fitting Model
2025-09-08 09:17:19,955:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:17:19,955:INFO:create_model() successfully completed......................................
2025-09-08 09:17:20,032:INFO:_master_model_container: 4
2025-09-08 09:17:20,032:INFO:_display_container: 2
2025-09-08 09:17:20,035:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:17:20,035:INFO:finalize_model() successfully completed......................................
2025-09-08 09:17:20,109:INFO:Initializing save_model()
2025-09-08 09:17:20,109:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/Passes P2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bound...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:17:20,109:INFO:Adding model into prep_pipe
2025-09-08 09:17:20,109:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:17:20,109:INFO:out/Passes P2/pycaret/model.pkl saved in current working directory
2025-09-08 09:17:20,109:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Collisions', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cos...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:17:20,109:INFO:save_model() successfully completed......................................
2025-09-08 09:17:20,287:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:17:20,630:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:17:28,815:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:17:38,327:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:18:52,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:18:52,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:18:52,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:18:52,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-08 09:19:03,319:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-08 09:19:11,365:INFO:PyCaret RegressionExperiment
2025-09-08 09:19:11,366:INFO:Logging name: reg-default-name
2025-09-08 09:19:11,366:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:19:11,366:INFO:version 3.3.2
2025-09-08 09:19:11,366:INFO:Initializing setup()
2025-09-08 09:19:11,366:INFO:self.USI: eeb9
2025-09-08 09:19:11,366:INFO:self._variable_keys: {'log_plots_param', 'seed', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'exp_id', 'X_train', '_ml_usecase', '_available_plots', 'target_param', 'logging_param', 'idx', 'fold_generator', 'y', 'data', 'y_train', 'y_test', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'memory', 'html_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2025-09-08 09:19:11,366:INFO:Checking environment
2025-09-08 09:19:11,366:INFO:python_version: 3.11.9
2025-09-08 09:19:11,366:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:19:11,366:INFO:machine: AMD64
2025-09-08 09:19:11,375:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:19:11,376:INFO:Memory: svmem(total=16766066688, available=6069968896, percent=63.8, used=10696097792, free=6069968896)
2025-09-08 09:19:11,376:INFO:Physical Core: 16
2025-09-08 09:19:11,376:INFO:Logical Core: 22
2025-09-08 09:19:11,376:INFO:Checking libraries
2025-09-08 09:19:11,376:INFO:System:
2025-09-08 09:19:11,376:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:19:11,376:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:19:11,376:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:19:11,376:INFO:PyCaret required dependencies:
2025-09-08 09:19:11,393:INFO:                 pip: 25.2
2025-09-08 09:19:11,393:INFO:          setuptools: 65.5.0
2025-09-08 09:19:11,393:INFO:             pycaret: 3.3.2
2025-09-08 09:19:11,393:INFO:             IPython: 9.5.0
2025-09-08 09:19:11,393:INFO:          ipywidgets: 8.1.7
2025-09-08 09:19:11,393:INFO:                tqdm: 4.67.1
2025-09-08 09:19:11,393:INFO:               numpy: 1.26.4
2025-09-08 09:19:11,393:INFO:              pandas: 2.1.4
2025-09-08 09:19:11,393:INFO:              jinja2: 3.1.6
2025-09-08 09:19:11,393:INFO:               scipy: 1.11.4
2025-09-08 09:19:11,393:INFO:              joblib: 1.3.2
2025-09-08 09:19:11,393:INFO:             sklearn: 1.4.2
2025-09-08 09:19:11,393:INFO:                pyod: 2.0.5
2025-09-08 09:19:11,393:INFO:            imblearn: 0.14.0
2025-09-08 09:19:11,393:INFO:   category_encoders: 2.7.0
2025-09-08 09:19:11,393:INFO:            lightgbm: 4.6.0
2025-09-08 09:19:11,393:INFO:               numba: 0.61.2
2025-09-08 09:19:11,394:INFO:            requests: 2.32.5
2025-09-08 09:19:11,394:INFO:          matplotlib: 3.7.5
2025-09-08 09:19:11,394:INFO:          scikitplot: 0.3.7
2025-09-08 09:19:11,394:INFO:         yellowbrick: 1.5
2025-09-08 09:19:11,394:INFO:              plotly: 6.3.0
2025-09-08 09:19:11,394:INFO:    plotly-resampler: Not installed
2025-09-08 09:19:11,394:INFO:             kaleido: 1.0.0
2025-09-08 09:19:11,394:INFO:           schemdraw: 0.15
2025-09-08 09:19:11,394:INFO:         statsmodels: 0.14.5
2025-09-08 09:19:11,394:INFO:              sktime: 0.26.0
2025-09-08 09:19:11,394:INFO:               tbats: 1.1.3
2025-09-08 09:19:11,394:INFO:            pmdarima: 2.0.4
2025-09-08 09:19:11,394:INFO:              psutil: 7.0.0
2025-09-08 09:19:11,394:INFO:          markupsafe: 3.0.2
2025-09-08 09:19:11,394:INFO:             pickle5: Not installed
2025-09-08 09:19:11,394:INFO:         cloudpickle: 3.1.1
2025-09-08 09:19:11,394:INFO:         deprecation: 2.1.0
2025-09-08 09:19:11,394:INFO:              xxhash: 3.5.0
2025-09-08 09:19:11,394:INFO:           wurlitzer: Not installed
2025-09-08 09:19:11,394:INFO:PyCaret optional dependencies:
2025-09-08 09:19:11,410:INFO:                shap: 0.48.0
2025-09-08 09:19:11,410:INFO:           interpret: Not installed
2025-09-08 09:19:11,410:INFO:                umap: Not installed
2025-09-08 09:19:11,410:INFO:     ydata_profiling: Not installed
2025-09-08 09:19:11,410:INFO:  explainerdashboard: Not installed
2025-09-08 09:19:11,410:INFO:             autoviz: Not installed
2025-09-08 09:19:11,410:INFO:           fairlearn: Not installed
2025-09-08 09:19:11,410:INFO:          deepchecks: Not installed
2025-09-08 09:19:11,410:INFO:             xgboost: 3.0.5
2025-09-08 09:19:11,410:INFO:            catboost: Not installed
2025-09-08 09:19:11,410:INFO:              kmodes: Not installed
2025-09-08 09:19:11,410:INFO:             mlxtend: Not installed
2025-09-08 09:19:11,410:INFO:       statsforecast: Not installed
2025-09-08 09:19:11,410:INFO:        tune_sklearn: Not installed
2025-09-08 09:19:11,410:INFO:                 ray: Not installed
2025-09-08 09:19:11,410:INFO:            hyperopt: Not installed
2025-09-08 09:19:11,410:INFO:              optuna: Not installed
2025-09-08 09:19:11,410:INFO:               skopt: Not installed
2025-09-08 09:19:11,410:INFO:              mlflow: Not installed
2025-09-08 09:19:11,410:INFO:              gradio: Not installed
2025-09-08 09:19:11,410:INFO:             fastapi: Not installed
2025-09-08 09:19:11,410:INFO:             uvicorn: Not installed
2025-09-08 09:19:11,410:INFO:              m2cgen: Not installed
2025-09-08 09:19:11,410:INFO:           evidently: Not installed
2025-09-08 09:19:11,410:INFO:               fugue: Not installed
2025-09-08 09:19:11,410:INFO:           streamlit: Not installed
2025-09-08 09:19:11,410:INFO:             prophet: Not installed
2025-09-08 09:19:11,410:INFO:None
2025-09-08 09:19:11,410:INFO:Set up data.
2025-09-08 09:19:11,420:INFO:Set up folding strategy.
2025-09-08 09:19:11,420:INFO:Set up train/test split.
2025-09-08 09:19:11,420:INFO:Set up index.
2025-09-08 09:19:11,420:INFO:Assigning column types.
2025-09-08 09:19:11,427:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:19:11,427:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,427:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,427:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,460:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,491:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,493:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,495:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,498:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,527:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,543:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,543:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:19:11,553:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,553:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,584:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,604:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,614:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,614:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,666:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,666:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:19:11,676:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,696:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,727:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,727:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,736:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,764:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,787:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,788:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:19:11,820:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,842:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,871:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,894:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,903:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:19:11,939:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:11,965:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:11,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:11,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:19:12,024:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:12,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:12,027:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:19:12,080:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:12,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:12,150:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:12,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:12,152:INFO:Preparing preprocessing pipeline...
2025-09-08 09:19:12,152:INFO:Set up simple imputation.
2025-09-08 09:19:12,152:INFO:Set up feature normalization.
2025-09-08 09:19:12,153:INFO:Set up column name cleaning.
2025-09-08 09:19:12,178:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:19:12,180:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds C...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:19:12,180:INFO:Creating final display dataframe.
2025-09-08 09:19:12,249:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target        Collisions
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              eeb9
2025-09-08 09:19:12,307:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:12,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:12,373:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:19:12,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:19:12,373:INFO:setup() successfully completed in 1.01s...............
2025-09-08 09:19:12,373:INFO:Initializing compare_models()
2025-09-08 09:19:12,373:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:19:12,373:INFO:Checking exceptions
2025-09-08 09:19:12,376:INFO:Preparing display monitor
2025-09-08 09:19:12,378:INFO:Initializing Decision Tree Regressor
2025-09-08 09:19:12,378:INFO:Total runtime is 0.0 minutes
2025-09-08 09:19:12,378:INFO:SubProcess create_model() called ==================================
2025-09-08 09:19:12,378:INFO:Initializing create_model()
2025-09-08 09:19:12,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468475BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:19:12,378:INFO:Checking exceptions
2025-09-08 09:19:12,378:INFO:Importing libraries
2025-09-08 09:19:12,378:INFO:Copying training dataset
2025-09-08 09:19:12,381:INFO:Defining folds
2025-09-08 09:19:12,381:INFO:Declaring metric variables
2025-09-08 09:19:12,381:INFO:Importing untrained model
2025-09-08 09:19:12,381:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:19:12,381:INFO:Starting cross validation
2025-09-08 09:19:12,386:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:19:15,270:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,270:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,270:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,275:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,275:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,275:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,275:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,275:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,285:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,285:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,325:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,325:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,325:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,327:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,351:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,353:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,359:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,359:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,368:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:15,368:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:15,376:INFO:Calculating mean and std
2025-09-08 09:19:15,376:INFO:Creating metrics dataframe
2025-09-08 09:19:15,378:INFO:Uploading results into container
2025-09-08 09:19:15,380:INFO:Uploading model into container now
2025-09-08 09:19:15,380:INFO:_master_model_container: 1
2025-09-08 09:19:15,380:INFO:_display_container: 2
2025-09-08 09:19:15,380:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:19:15,380:INFO:create_model() successfully completed......................................
2025-09-08 09:19:15,461:INFO:SubProcess create_model() end ==================================
2025-09-08 09:19:15,461:INFO:Creating metrics dataframe
2025-09-08 09:19:15,465:INFO:Initializing Random Forest Regressor
2025-09-08 09:19:15,465:INFO:Total runtime is 0.05144136349360148 minutes
2025-09-08 09:19:15,465:INFO:SubProcess create_model() called ==================================
2025-09-08 09:19:15,465:INFO:Initializing create_model()
2025-09-08 09:19:15,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468475BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:19:15,465:INFO:Checking exceptions
2025-09-08 09:19:15,465:INFO:Importing libraries
2025-09-08 09:19:15,465:INFO:Copying training dataset
2025-09-08 09:19:15,468:INFO:Defining folds
2025-09-08 09:19:15,468:INFO:Declaring metric variables
2025-09-08 09:19:15,469:INFO:Importing untrained model
2025-09-08 09:19:15,469:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:19:15,469:INFO:Starting cross validation
2025-09-08 09:19:15,469:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:19:17,907:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,907:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,909:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,910:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,913:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,913:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,917:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,917:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,942:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,942:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,953:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,953:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,972:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,972:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,975:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,975:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,980:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,980:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,982:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:17,984:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:17,993:INFO:Calculating mean and std
2025-09-08 09:19:17,993:INFO:Creating metrics dataframe
2025-09-08 09:19:17,995:INFO:Uploading results into container
2025-09-08 09:19:17,995:INFO:Uploading model into container now
2025-09-08 09:19:17,995:INFO:_master_model_container: 2
2025-09-08 09:19:17,995:INFO:_display_container: 2
2025-09-08 09:19:17,995:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-08 09:19:17,995:INFO:create_model() successfully completed......................................
2025-09-08 09:19:18,080:INFO:SubProcess create_model() end ==================================
2025-09-08 09:19:18,080:INFO:Creating metrics dataframe
2025-09-08 09:19:18,082:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:19:18,082:INFO:Total runtime is 0.09505836168924968 minutes
2025-09-08 09:19:18,082:INFO:SubProcess create_model() called ==================================
2025-09-08 09:19:18,082:INFO:Initializing create_model()
2025-09-08 09:19:18,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468475BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:19:18,082:INFO:Checking exceptions
2025-09-08 09:19:18,082:INFO:Importing libraries
2025-09-08 09:19:18,082:INFO:Copying training dataset
2025-09-08 09:19:18,085:INFO:Defining folds
2025-09-08 09:19:18,085:INFO:Declaring metric variables
2025-09-08 09:19:18,085:INFO:Importing untrained model
2025-09-08 09:19:18,085:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:19:18,085:INFO:Starting cross validation
2025-09-08 09:19:18,086:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:19:18,144:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,144:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,144:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,144:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,147:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,147:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,147:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,147:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,147:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,147:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,165:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,165:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,165:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,165:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:18,165:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:18,165:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,659:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,659:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,663:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,663:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,671:INFO:Calculating mean and std
2025-09-08 09:19:19,671:INFO:Creating metrics dataframe
2025-09-08 09:19:19,671:INFO:Uploading results into container
2025-09-08 09:19:19,671:INFO:Uploading model into container now
2025-09-08 09:19:19,671:INFO:_master_model_container: 3
2025-09-08 09:19:19,671:INFO:_display_container: 2
2025-09-08 09:19:19,671:INFO:GradientBoostingRegressor(random_state=791)
2025-09-08 09:19:19,671:INFO:create_model() successfully completed......................................
2025-09-08 09:19:19,754:INFO:SubProcess create_model() end ==================================
2025-09-08 09:19:19,754:INFO:Creating metrics dataframe
2025-09-08 09:19:19,756:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:19:19,756:INFO:Total runtime is 0.12296897570292156 minutes
2025-09-08 09:19:19,756:INFO:SubProcess create_model() called ==================================
2025-09-08 09:19:19,756:INFO:Initializing create_model()
2025-09-08 09:19:19,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468475BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:19:19,756:INFO:Checking exceptions
2025-09-08 09:19:19,756:INFO:Importing libraries
2025-09-08 09:19:19,756:INFO:Copying training dataset
2025-09-08 09:19:19,759:INFO:Defining folds
2025-09-08 09:19:19,759:INFO:Declaring metric variables
2025-09-08 09:19:19,759:INFO:Importing untrained model
2025-09-08 09:19:19,760:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:19:19,760:INFO:Starting cross validation
2025-09-08 09:19:19,760:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:19:19,826:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,826:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,828:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,828:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,831:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,831:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,838:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,838:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,842:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,843:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,843:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,843:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,845:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,845:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,845:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,845:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,845:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,845:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,852:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:19:19,852:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:19:19,862:INFO:Calculating mean and std
2025-09-08 09:19:19,863:INFO:Creating metrics dataframe
2025-09-08 09:19:19,863:INFO:Uploading results into container
2025-09-08 09:19:19,863:INFO:Uploading model into container now
2025-09-08 09:19:19,863:INFO:_master_model_container: 4
2025-09-08 09:19:19,863:INFO:_display_container: 2
2025-09-08 09:19:19,863:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:19:19,863:INFO:create_model() successfully completed......................................
2025-09-08 09:19:19,935:INFO:SubProcess create_model() end ==================================
2025-09-08 09:19:19,935:INFO:Creating metrics dataframe
2025-09-08 09:19:19,935:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:19:19,935:INFO:Initializing create_model()
2025-09-08 09:19:19,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:19:19,941:INFO:Checking exceptions
2025-09-08 09:19:19,941:INFO:Importing libraries
2025-09-08 09:19:19,941:INFO:Copying training dataset
2025-09-08 09:19:19,944:INFO:Defining folds
2025-09-08 09:19:19,944:INFO:Declaring metric variables
2025-09-08 09:19:19,944:INFO:Importing untrained model
2025-09-08 09:19:19,944:INFO:Declaring custom model
2025-09-08 09:19:19,945:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:19:19,945:INFO:Cross validation set to False
2025-09-08 09:19:19,945:INFO:Fitting Model
2025-09-08 09:19:19,955:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:19:19,955:INFO:create_model() successfully completed......................................
2025-09-08 09:19:20,026:INFO:_master_model_container: 4
2025-09-08 09:19:20,026:INFO:_display_container: 2
2025-09-08 09:19:20,026:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:19:20,026:INFO:compare_models() successfully completed......................................
2025-09-08 09:19:20,038:INFO:Initializing finalize_model()
2025-09-08 09:19:20,038:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:19:20,038:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-08 09:19:20,043:INFO:Initializing create_model()
2025-09-08 09:19:20,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001545E68A610>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:19:20,043:INFO:Checking exceptions
2025-09-08 09:19:20,044:INFO:Importing libraries
2025-09-08 09:19:20,044:INFO:Copying training dataset
2025-09-08 09:19:20,044:INFO:Defining folds
2025-09-08 09:19:20,044:INFO:Declaring metric variables
2025-09-08 09:19:20,044:INFO:Importing untrained model
2025-09-08 09:19:20,044:INFO:Declaring custom model
2025-09-08 09:19:20,044:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:19:20,044:INFO:Cross validation set to False
2025-09-08 09:19:20,044:INFO:Fitting Model
2025-09-08 09:19:20,055:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:19:20,055:INFO:create_model() successfully completed......................................
2025-09-08 09:19:20,125:INFO:_master_model_container: 4
2025-09-08 09:19:20,125:INFO:_display_container: 2
2025-09-08 09:19:20,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:19:20,135:INFO:finalize_model() successfully completed......................................
2025-09-08 09:19:20,212:INFO:Initializing save_model()
2025-09-08 09:19:20,212:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/Collisions/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds C...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:19:20,212:INFO:Adding model into prep_pipe
2025-09-08 09:19:20,212:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:19:20,214:INFO:out/Collisions/pycaret/model.pkl saved in current working directory
2025-09-08 09:19:20,217:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:19:20,217:INFO:save_model() successfully completed......................................
2025-09-08 09:19:20,384:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:19:20,722:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:19:26,688:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:19:37,782:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:20:17,683:INFO:PyCaret RegressionExperiment
2025-09-08 09:20:17,683:INFO:Logging name: reg-default-name
2025-09-08 09:20:17,683:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:20:17,683:INFO:version 3.3.2
2025-09-08 09:20:17,683:INFO:Initializing setup()
2025-09-08 09:20:17,683:INFO:self.USI: 3451
2025-09-08 09:20:17,683:INFO:self._variable_keys: {'log_plots_param', 'seed', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'exp_id', 'X_train', '_ml_usecase', '_available_plots', 'target_param', 'logging_param', 'idx', 'fold_generator', 'y', 'data', 'y_train', 'y_test', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'memory', 'html_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2025-09-08 09:20:17,683:INFO:Checking environment
2025-09-08 09:20:17,683:INFO:python_version: 3.11.9
2025-09-08 09:20:17,685:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:20:17,685:INFO:machine: AMD64
2025-09-08 09:20:17,685:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:20:17,685:INFO:Memory: svmem(total=16766066688, available=2649071616, percent=84.2, used=14116995072, free=2649071616)
2025-09-08 09:20:17,685:INFO:Physical Core: 16
2025-09-08 09:20:17,685:INFO:Logical Core: 22
2025-09-08 09:20:17,685:INFO:Checking libraries
2025-09-08 09:20:17,685:INFO:System:
2025-09-08 09:20:17,685:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:20:17,685:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:20:17,685:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:20:17,685:INFO:PyCaret required dependencies:
2025-09-08 09:20:17,685:INFO:                 pip: 25.2
2025-09-08 09:20:17,685:INFO:          setuptools: 65.5.0
2025-09-08 09:20:17,685:INFO:             pycaret: 3.3.2
2025-09-08 09:20:17,685:INFO:             IPython: 9.5.0
2025-09-08 09:20:17,685:INFO:          ipywidgets: 8.1.7
2025-09-08 09:20:17,685:INFO:                tqdm: 4.67.1
2025-09-08 09:20:17,685:INFO:               numpy: 1.26.4
2025-09-08 09:20:17,685:INFO:              pandas: 2.1.4
2025-09-08 09:20:17,685:INFO:              jinja2: 3.1.6
2025-09-08 09:20:17,685:INFO:               scipy: 1.11.4
2025-09-08 09:20:17,685:INFO:              joblib: 1.3.2
2025-09-08 09:20:17,685:INFO:             sklearn: 1.4.2
2025-09-08 09:20:17,685:INFO:                pyod: 2.0.5
2025-09-08 09:20:17,685:INFO:            imblearn: 0.14.0
2025-09-08 09:20:17,685:INFO:   category_encoders: 2.7.0
2025-09-08 09:20:17,685:INFO:            lightgbm: 4.6.0
2025-09-08 09:20:17,686:INFO:               numba: 0.61.2
2025-09-08 09:20:17,686:INFO:            requests: 2.32.5
2025-09-08 09:20:17,686:INFO:          matplotlib: 3.7.5
2025-09-08 09:20:17,686:INFO:          scikitplot: 0.3.7
2025-09-08 09:20:17,686:INFO:         yellowbrick: 1.5
2025-09-08 09:20:17,686:INFO:              plotly: 6.3.0
2025-09-08 09:20:17,686:INFO:    plotly-resampler: Not installed
2025-09-08 09:20:17,686:INFO:             kaleido: 1.0.0
2025-09-08 09:20:17,686:INFO:           schemdraw: 0.15
2025-09-08 09:20:17,686:INFO:         statsmodels: 0.14.5
2025-09-08 09:20:17,686:INFO:              sktime: 0.26.0
2025-09-08 09:20:17,686:INFO:               tbats: 1.1.3
2025-09-08 09:20:17,686:INFO:            pmdarima: 2.0.4
2025-09-08 09:20:17,686:INFO:              psutil: 7.0.0
2025-09-08 09:20:17,686:INFO:          markupsafe: 3.0.2
2025-09-08 09:20:17,686:INFO:             pickle5: Not installed
2025-09-08 09:20:17,686:INFO:         cloudpickle: 3.1.1
2025-09-08 09:20:17,686:INFO:         deprecation: 2.1.0
2025-09-08 09:20:17,686:INFO:              xxhash: 3.5.0
2025-09-08 09:20:17,686:INFO:           wurlitzer: Not installed
2025-09-08 09:20:17,686:INFO:PyCaret optional dependencies:
2025-09-08 09:20:17,686:INFO:                shap: 0.48.0
2025-09-08 09:20:17,686:INFO:           interpret: Not installed
2025-09-08 09:20:17,686:INFO:                umap: Not installed
2025-09-08 09:20:17,686:INFO:     ydata_profiling: Not installed
2025-09-08 09:20:17,686:INFO:  explainerdashboard: Not installed
2025-09-08 09:20:17,686:INFO:             autoviz: Not installed
2025-09-08 09:20:17,687:INFO:           fairlearn: Not installed
2025-09-08 09:20:17,687:INFO:          deepchecks: Not installed
2025-09-08 09:20:17,687:INFO:             xgboost: 3.0.5
2025-09-08 09:20:17,687:INFO:            catboost: Not installed
2025-09-08 09:20:17,687:INFO:              kmodes: Not installed
2025-09-08 09:20:17,687:INFO:             mlxtend: Not installed
2025-09-08 09:20:17,687:INFO:       statsforecast: Not installed
2025-09-08 09:20:17,687:INFO:        tune_sklearn: Not installed
2025-09-08 09:20:17,687:INFO:                 ray: Not installed
2025-09-08 09:20:17,687:INFO:            hyperopt: Not installed
2025-09-08 09:20:17,687:INFO:              optuna: Not installed
2025-09-08 09:20:17,687:INFO:               skopt: Not installed
2025-09-08 09:20:17,687:INFO:              mlflow: Not installed
2025-09-08 09:20:17,687:INFO:              gradio: Not installed
2025-09-08 09:20:17,687:INFO:             fastapi: Not installed
2025-09-08 09:20:17,687:INFO:             uvicorn: Not installed
2025-09-08 09:20:17,687:INFO:              m2cgen: Not installed
2025-09-08 09:20:17,687:INFO:           evidently: Not installed
2025-09-08 09:20:17,687:INFO:               fugue: Not installed
2025-09-08 09:20:17,687:INFO:           streamlit: Not installed
2025-09-08 09:20:17,687:INFO:             prophet: Not installed
2025-09-08 09:20:17,687:INFO:None
2025-09-08 09:20:17,687:INFO:Set up data.
2025-09-08 09:20:17,694:INFO:Set up folding strategy.
2025-09-08 09:20:17,694:INFO:Set up train/test split.
2025-09-08 09:20:17,695:INFO:Set up index.
2025-09-08 09:20:17,695:INFO:Assigning column types.
2025-09-08 09:20:17,695:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:20:17,695:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,695:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,704:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,753:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:17,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:17,755:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,757:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,759:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,814:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,815:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:17,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:17,816:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:20:17,818:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,853:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,875:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,875:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:17,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:17,878:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,880:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,912:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,933:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,935:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:17,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:17,935:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:20:17,939:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,989:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:17,989:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:17,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:17,995:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,045:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,045:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,046:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:20:18,077:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,098:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,098:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,133:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,155:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,155:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:20:18,187:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,210:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:18,270:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,270:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:20:18,331:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,387:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,387:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,387:INFO:Preparing preprocessing pipeline...
2025-09-08 09:20:18,387:INFO:Set up simple imputation.
2025-09-08 09:20:18,387:INFO:Set up feature normalization.
2025-09-08 09:20:18,394:INFO:Set up column name cleaning.
2025-09-08 09:20:18,411:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:20:18,411:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds C...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:20:18,411:INFO:Creating final display dataframe.
2025-09-08 09:20:18,477:INFO:Setup _display_container:                     Description             Value
0                    Session id                67
1                        Target        Collisions
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              3451
2025-09-08 09:20:18,537:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,604:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:18,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:18,604:INFO:setup() successfully completed in 0.92s...............
2025-09-08 09:20:18,604:INFO:Initializing compare_models()
2025-09-08 09:20:18,604:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:20:18,604:INFO:Checking exceptions
2025-09-08 09:20:18,611:INFO:Preparing display monitor
2025-09-08 09:20:18,611:INFO:Initializing Decision Tree Regressor
2025-09-08 09:20:18,611:INFO:Total runtime is 0.0 minutes
2025-09-08 09:20:18,611:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:18,611:INFO:Initializing create_model()
2025-09-08 09:20:18,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015469D69F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:18,611:INFO:Checking exceptions
2025-09-08 09:20:18,611:INFO:Importing libraries
2025-09-08 09:20:18,611:INFO:Copying training dataset
2025-09-08 09:20:18,611:INFO:Defining folds
2025-09-08 09:20:18,611:INFO:Declaring metric variables
2025-09-08 09:20:18,611:INFO:Importing untrained model
2025-09-08 09:20:18,611:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:20:18,611:INFO:Starting cross validation
2025-09-08 09:20:18,611:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:18,641:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,641:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,644:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,644:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,648:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,648:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,649:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,649:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,651:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,652:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,654:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,654:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,660:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,660:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,662:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,662:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,662:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,662:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,666:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,666:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,676:INFO:Calculating mean and std
2025-09-08 09:20:18,676:INFO:Creating metrics dataframe
2025-09-08 09:20:18,677:INFO:Uploading results into container
2025-09-08 09:20:18,677:INFO:Uploading model into container now
2025-09-08 09:20:18,678:INFO:_master_model_container: 1
2025-09-08 09:20:18,678:INFO:_display_container: 2
2025-09-08 09:20:18,678:INFO:DecisionTreeRegressor(random_state=67)
2025-09-08 09:20:18,678:INFO:create_model() successfully completed......................................
2025-09-08 09:20:18,780:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:18,780:INFO:Creating metrics dataframe
2025-09-08 09:20:18,780:INFO:Initializing Random Forest Regressor
2025-09-08 09:20:18,780:INFO:Total runtime is 0.002816176414489746 minutes
2025-09-08 09:20:18,780:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:18,780:INFO:Initializing create_model()
2025-09-08 09:20:18,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015469D69F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:18,782:INFO:Checking exceptions
2025-09-08 09:20:18,782:INFO:Importing libraries
2025-09-08 09:20:18,782:INFO:Copying training dataset
2025-09-08 09:20:18,784:INFO:Defining folds
2025-09-08 09:20:18,784:INFO:Declaring metric variables
2025-09-08 09:20:18,784:INFO:Importing untrained model
2025-09-08 09:20:18,784:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:20:18,784:INFO:Starting cross validation
2025-09-08 09:20:18,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:18,951:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,951:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,951:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,951:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,952:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,952:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,952:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,952:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,952:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,952:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,956:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,956:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,969:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,969:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,971:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,971:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,971:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,971:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,976:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:18,976:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:18,983:INFO:Calculating mean and std
2025-09-08 09:20:18,983:INFO:Creating metrics dataframe
2025-09-08 09:20:18,983:INFO:Uploading results into container
2025-09-08 09:20:18,983:INFO:Uploading model into container now
2025-09-08 09:20:18,983:INFO:_master_model_container: 2
2025-09-08 09:20:18,983:INFO:_display_container: 2
2025-09-08 09:20:18,983:INFO:RandomForestRegressor(n_jobs=-1, random_state=67)
2025-09-08 09:20:18,983:INFO:create_model() successfully completed......................................
2025-09-08 09:20:19,054:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:19,054:INFO:Creating metrics dataframe
2025-09-08 09:20:19,060:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:20:19,060:INFO:Total runtime is 0.007494886716206869 minutes
2025-09-08 09:20:19,060:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:19,060:INFO:Initializing create_model()
2025-09-08 09:20:19,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015469D69F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:19,060:INFO:Checking exceptions
2025-09-08 09:20:19,060:INFO:Importing libraries
2025-09-08 09:20:19,060:INFO:Copying training dataset
2025-09-08 09:20:19,061:INFO:Defining folds
2025-09-08 09:20:19,061:INFO:Declaring metric variables
2025-09-08 09:20:19,061:INFO:Importing untrained model
2025-09-08 09:20:19,061:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:20:19,064:INFO:Starting cross validation
2025-09-08 09:20:19,064:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:19,117:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,117:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,117:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,117:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,120:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,120:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,120:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,120:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,127:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,137:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,137:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,145:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,145:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,148:INFO:Calculating mean and std
2025-09-08 09:20:19,148:INFO:Creating metrics dataframe
2025-09-08 09:20:19,148:INFO:Uploading results into container
2025-09-08 09:20:19,148:INFO:Uploading model into container now
2025-09-08 09:20:19,148:INFO:_master_model_container: 3
2025-09-08 09:20:19,148:INFO:_display_container: 2
2025-09-08 09:20:19,148:INFO:GradientBoostingRegressor(random_state=67)
2025-09-08 09:20:19,148:INFO:create_model() successfully completed......................................
2025-09-08 09:20:19,229:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:19,229:INFO:Creating metrics dataframe
2025-09-08 09:20:19,231:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:20:19,231:INFO:Total runtime is 0.01034367879231771 minutes
2025-09-08 09:20:19,231:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:19,231:INFO:Initializing create_model()
2025-09-08 09:20:19,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015469D69F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:19,231:INFO:Checking exceptions
2025-09-08 09:20:19,231:INFO:Importing libraries
2025-09-08 09:20:19,232:INFO:Copying training dataset
2025-09-08 09:20:19,235:INFO:Defining folds
2025-09-08 09:20:19,235:INFO:Declaring metric variables
2025-09-08 09:20:19,236:INFO:Importing untrained model
2025-09-08 09:20:19,237:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:20:19,237:INFO:Starting cross validation
2025-09-08 09:20:19,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:19,281:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,281:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,285:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,286:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,296:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,296:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,297:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,297:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,299:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,299:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,300:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,300:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,307:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,307:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,312:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,312:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,312:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,312:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,322:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\lib\function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)

2025-09-08 09:20:19,322:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\numpy\core\_methods.py:129: RuntimeWarning: invalid value encountered in divide
  ret = ret.dtype.type(ret / rcount)

2025-09-08 09:20:19,333:INFO:Calculating mean and std
2025-09-08 09:20:19,333:INFO:Creating metrics dataframe
2025-09-08 09:20:19,333:INFO:Uploading results into container
2025-09-08 09:20:19,333:INFO:Uploading model into container now
2025-09-08 09:20:19,333:INFO:_master_model_container: 4
2025-09-08 09:20:19,333:INFO:_display_container: 2
2025-09-08 09:20:19,333:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:20:19,333:INFO:create_model() successfully completed......................................
2025-09-08 09:20:19,411:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:19,411:INFO:Creating metrics dataframe
2025-09-08 09:20:19,411:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:20:19,411:INFO:Initializing create_model()
2025-09-08 09:20:19,411:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=DecisionTreeRegressor(random_state=67), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:19,411:INFO:Checking exceptions
2025-09-08 09:20:19,411:INFO:Importing libraries
2025-09-08 09:20:19,411:INFO:Copying training dataset
2025-09-08 09:20:19,420:INFO:Defining folds
2025-09-08 09:20:19,420:INFO:Declaring metric variables
2025-09-08 09:20:19,420:INFO:Importing untrained model
2025-09-08 09:20:19,420:INFO:Declaring custom model
2025-09-08 09:20:19,420:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:20:19,420:INFO:Cross validation set to False
2025-09-08 09:20:19,420:INFO:Fitting Model
2025-09-08 09:20:19,427:INFO:DecisionTreeRegressor(random_state=67)
2025-09-08 09:20:19,427:INFO:create_model() successfully completed......................................
2025-09-08 09:20:19,527:INFO:_master_model_container: 4
2025-09-08 09:20:19,527:INFO:_display_container: 2
2025-09-08 09:20:19,527:INFO:DecisionTreeRegressor(random_state=67)
2025-09-08 09:20:19,527:INFO:compare_models() successfully completed......................................
2025-09-08 09:20:19,536:INFO:Initializing finalize_model()
2025-09-08 09:20:19,536:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=DecisionTreeRegressor(random_state=67), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:20:19,536:INFO:Finalizing DecisionTreeRegressor(random_state=67)
2025-09-08 09:20:19,538:INFO:Initializing create_model()
2025-09-08 09:20:19,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468416390>, estimator=DecisionTreeRegressor(random_state=67), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:19,538:INFO:Checking exceptions
2025-09-08 09:20:19,539:INFO:Importing libraries
2025-09-08 09:20:19,539:INFO:Copying training dataset
2025-09-08 09:20:19,539:INFO:Defining folds
2025-09-08 09:20:19,539:INFO:Declaring metric variables
2025-09-08 09:20:19,539:INFO:Importing untrained model
2025-09-08 09:20:19,539:INFO:Declaring custom model
2025-09-08 09:20:19,540:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:20:19,540:INFO:Cross validation set to False
2025-09-08 09:20:19,540:INFO:Fitting Model
2025-09-08 09:20:19,549:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=67))])
2025-09-08 09:20:19,549:INFO:create_model() successfully completed......................................
2025-09-08 09:20:19,632:INFO:_master_model_container: 4
2025-09-08 09:20:19,633:INFO:_display_container: 2
2025-09-08 09:20:19,636:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=67))])
2025-09-08 09:20:19,636:INFO:finalize_model() successfully completed......................................
2025-09-08 09:20:19,701:INFO:Initializing save_model()
2025-09-08 09:20:19,711:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=67))]), model_name=out/Collisions/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds C...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:20:19,711:INFO:Adding model into prep_pipe
2025-09-08 09:20:19,711:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:20:19,711:INFO:out/Collisions/pycaret/model.pkl saved in current working directory
2025-09-08 09:20:19,711:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Choices',
                                             'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Out of Bounds P2',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=67))])
2025-09-08 09:20:19,711:INFO:save_model() successfully completed......................................
2025-09-08 09:20:19,887:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:20:20,208:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:20:22,697:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:20:26,202:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:20:43,994:INFO:PyCaret RegressionExperiment
2025-09-08 09:20:43,994:INFO:Logging name: reg-default-name
2025-09-08 09:20:43,995:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:20:43,995:INFO:version 3.3.2
2025-09-08 09:20:43,995:INFO:Initializing setup()
2025-09-08 09:20:43,995:INFO:self.USI: 9d09
2025-09-08 09:20:43,995:INFO:self._variable_keys: {'log_plots_param', 'seed', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'exp_id', 'X_train', '_ml_usecase', '_available_plots', 'target_param', 'logging_param', 'idx', 'fold_generator', 'y', 'data', 'y_train', 'y_test', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'memory', 'html_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2025-09-08 09:20:43,995:INFO:Checking environment
2025-09-08 09:20:43,995:INFO:python_version: 3.11.9
2025-09-08 09:20:43,995:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:20:43,995:INFO:machine: AMD64
2025-09-08 09:20:43,995:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:20:43,995:INFO:Memory: svmem(total=16766066688, available=2391412736, percent=85.7, used=14374653952, free=2391412736)
2025-09-08 09:20:43,995:INFO:Physical Core: 16
2025-09-08 09:20:43,995:INFO:Logical Core: 22
2025-09-08 09:20:43,995:INFO:Checking libraries
2025-09-08 09:20:43,995:INFO:System:
2025-09-08 09:20:43,995:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:20:43,995:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:20:43,995:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:20:43,995:INFO:PyCaret required dependencies:
2025-09-08 09:20:43,995:INFO:                 pip: 25.2
2025-09-08 09:20:43,995:INFO:          setuptools: 65.5.0
2025-09-08 09:20:43,995:INFO:             pycaret: 3.3.2
2025-09-08 09:20:43,995:INFO:             IPython: 9.5.0
2025-09-08 09:20:43,995:INFO:          ipywidgets: 8.1.7
2025-09-08 09:20:43,995:INFO:                tqdm: 4.67.1
2025-09-08 09:20:43,995:INFO:               numpy: 1.26.4
2025-09-08 09:20:43,995:INFO:              pandas: 2.1.4
2025-09-08 09:20:43,995:INFO:              jinja2: 3.1.6
2025-09-08 09:20:43,995:INFO:               scipy: 1.11.4
2025-09-08 09:20:43,995:INFO:              joblib: 1.3.2
2025-09-08 09:20:43,995:INFO:             sklearn: 1.4.2
2025-09-08 09:20:43,995:INFO:                pyod: 2.0.5
2025-09-08 09:20:43,995:INFO:            imblearn: 0.14.0
2025-09-08 09:20:43,995:INFO:   category_encoders: 2.7.0
2025-09-08 09:20:43,995:INFO:            lightgbm: 4.6.0
2025-09-08 09:20:43,995:INFO:               numba: 0.61.2
2025-09-08 09:20:43,995:INFO:            requests: 2.32.5
2025-09-08 09:20:43,995:INFO:          matplotlib: 3.7.5
2025-09-08 09:20:43,995:INFO:          scikitplot: 0.3.7
2025-09-08 09:20:43,995:INFO:         yellowbrick: 1.5
2025-09-08 09:20:43,995:INFO:              plotly: 6.3.0
2025-09-08 09:20:43,996:INFO:    plotly-resampler: Not installed
2025-09-08 09:20:43,996:INFO:             kaleido: 1.0.0
2025-09-08 09:20:43,996:INFO:           schemdraw: 0.15
2025-09-08 09:20:43,996:INFO:         statsmodels: 0.14.5
2025-09-08 09:20:43,996:INFO:              sktime: 0.26.0
2025-09-08 09:20:43,996:INFO:               tbats: 1.1.3
2025-09-08 09:20:43,996:INFO:            pmdarima: 2.0.4
2025-09-08 09:20:43,996:INFO:              psutil: 7.0.0
2025-09-08 09:20:43,996:INFO:          markupsafe: 3.0.2
2025-09-08 09:20:43,996:INFO:             pickle5: Not installed
2025-09-08 09:20:43,996:INFO:         cloudpickle: 3.1.1
2025-09-08 09:20:43,996:INFO:         deprecation: 2.1.0
2025-09-08 09:20:43,996:INFO:              xxhash: 3.5.0
2025-09-08 09:20:43,996:INFO:           wurlitzer: Not installed
2025-09-08 09:20:43,996:INFO:PyCaret optional dependencies:
2025-09-08 09:20:43,996:INFO:                shap: 0.48.0
2025-09-08 09:20:43,996:INFO:           interpret: Not installed
2025-09-08 09:20:43,996:INFO:                umap: Not installed
2025-09-08 09:20:43,996:INFO:     ydata_profiling: Not installed
2025-09-08 09:20:43,996:INFO:  explainerdashboard: Not installed
2025-09-08 09:20:43,996:INFO:             autoviz: Not installed
2025-09-08 09:20:43,996:INFO:           fairlearn: Not installed
2025-09-08 09:20:43,996:INFO:          deepchecks: Not installed
2025-09-08 09:20:43,996:INFO:             xgboost: 3.0.5
2025-09-08 09:20:43,996:INFO:            catboost: Not installed
2025-09-08 09:20:43,996:INFO:              kmodes: Not installed
2025-09-08 09:20:43,996:INFO:             mlxtend: Not installed
2025-09-08 09:20:43,996:INFO:       statsforecast: Not installed
2025-09-08 09:20:43,996:INFO:        tune_sklearn: Not installed
2025-09-08 09:20:43,996:INFO:                 ray: Not installed
2025-09-08 09:20:43,996:INFO:            hyperopt: Not installed
2025-09-08 09:20:43,996:INFO:              optuna: Not installed
2025-09-08 09:20:43,996:INFO:               skopt: Not installed
2025-09-08 09:20:43,996:INFO:              mlflow: Not installed
2025-09-08 09:20:43,996:INFO:              gradio: Not installed
2025-09-08 09:20:43,996:INFO:             fastapi: Not installed
2025-09-08 09:20:43,996:INFO:             uvicorn: Not installed
2025-09-08 09:20:43,996:INFO:              m2cgen: Not installed
2025-09-08 09:20:43,996:INFO:           evidently: Not installed
2025-09-08 09:20:43,996:INFO:               fugue: Not installed
2025-09-08 09:20:43,996:INFO:           streamlit: Not installed
2025-09-08 09:20:43,996:INFO:             prophet: Not installed
2025-09-08 09:20:43,996:INFO:None
2025-09-08 09:20:43,996:INFO:Set up data.
2025-09-08 09:20:44,000:INFO:Set up folding strategy.
2025-09-08 09:20:44,000:INFO:Set up train/test split.
2025-09-08 09:20:44,003:INFO:Set up index.
2025-09-08 09:20:44,003:INFO:Assigning column types.
2025-09-08 09:20:44,006:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:20:44,006:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,006:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,006:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,071:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,074:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,074:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,108:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,144:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,146:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:20:44,148:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,150:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,202:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,202:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,202:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,232:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,266:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,266:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,268:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:20:44,272:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,300:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,321:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,321:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,328:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,377:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,377:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,379:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:20:44,416:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,426:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,469:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,489:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,489:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,489:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:20:44,531:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,554:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:20:44,623:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,623:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:20:44,681:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,745:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,748:INFO:Preparing preprocessing pipeline...
2025-09-08 09:20:44,748:INFO:Set up simple imputation.
2025-09-08 09:20:44,748:INFO:Set up feature normalization.
2025-09-08 09:20:44,749:INFO:Set up column name cleaning.
2025-09-08 09:20:44,768:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:20:44,773:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:20:44,773:INFO:Creating final display dataframe.
2025-09-08 09:20:44,838:INFO:Setup _display_container:                     Description             Value
0                    Session id               948
1                        Target  Out of Bounds P2
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              9d09
2025-09-08 09:20:44,905:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,971:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:20:44,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:20:44,971:INFO:setup() successfully completed in 0.98s...............
2025-09-08 09:20:44,971:INFO:Initializing compare_models()
2025-09-08 09:20:44,971:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:20:44,971:INFO:Checking exceptions
2025-09-08 09:20:44,976:INFO:Preparing display monitor
2025-09-08 09:20:44,976:INFO:Initializing Decision Tree Regressor
2025-09-08 09:20:44,976:INFO:Total runtime is 0.0 minutes
2025-09-08 09:20:44,976:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:44,976:INFO:Initializing create_model()
2025-09-08 09:20:44,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154684F5BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:44,976:INFO:Checking exceptions
2025-09-08 09:20:44,976:INFO:Importing libraries
2025-09-08 09:20:44,976:INFO:Copying training dataset
2025-09-08 09:20:44,982:INFO:Defining folds
2025-09-08 09:20:44,982:INFO:Declaring metric variables
2025-09-08 09:20:44,982:INFO:Importing untrained model
2025-09-08 09:20:44,982:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:20:44,982:INFO:Starting cross validation
2025-09-08 09:20:44,983:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:45,032:INFO:Calculating mean and std
2025-09-08 09:20:45,032:INFO:Creating metrics dataframe
2025-09-08 09:20:45,033:INFO:Uploading results into container
2025-09-08 09:20:45,033:INFO:Uploading model into container now
2025-09-08 09:20:45,033:INFO:_master_model_container: 1
2025-09-08 09:20:45,033:INFO:_display_container: 2
2025-09-08 09:20:45,033:INFO:DecisionTreeRegressor(random_state=948)
2025-09-08 09:20:45,033:INFO:create_model() successfully completed......................................
2025-09-08 09:20:45,131:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:45,131:INFO:Creating metrics dataframe
2025-09-08 09:20:45,133:INFO:Initializing Random Forest Regressor
2025-09-08 09:20:45,133:INFO:Total runtime is 0.0026223341623942058 minutes
2025-09-08 09:20:45,133:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:45,133:INFO:Initializing create_model()
2025-09-08 09:20:45,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154684F5BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:45,133:INFO:Checking exceptions
2025-09-08 09:20:45,133:INFO:Importing libraries
2025-09-08 09:20:45,133:INFO:Copying training dataset
2025-09-08 09:20:45,137:INFO:Defining folds
2025-09-08 09:20:45,137:INFO:Declaring metric variables
2025-09-08 09:20:45,138:INFO:Importing untrained model
2025-09-08 09:20:45,138:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:20:45,138:INFO:Starting cross validation
2025-09-08 09:20:45,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:45,344:INFO:Calculating mean and std
2025-09-08 09:20:45,344:INFO:Creating metrics dataframe
2025-09-08 09:20:45,344:INFO:Uploading results into container
2025-09-08 09:20:45,344:INFO:Uploading model into container now
2025-09-08 09:20:45,344:INFO:_master_model_container: 2
2025-09-08 09:20:45,344:INFO:_display_container: 2
2025-09-08 09:20:45,344:INFO:RandomForestRegressor(n_jobs=-1, random_state=948)
2025-09-08 09:20:45,347:INFO:create_model() successfully completed......................................
2025-09-08 09:20:45,421:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:45,421:INFO:Creating metrics dataframe
2025-09-08 09:20:45,421:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:20:45,421:INFO:Total runtime is 0.007417436440785725 minutes
2025-09-08 09:20:45,421:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:45,421:INFO:Initializing create_model()
2025-09-08 09:20:45,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154684F5BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:45,421:INFO:Checking exceptions
2025-09-08 09:20:45,421:INFO:Importing libraries
2025-09-08 09:20:45,421:INFO:Copying training dataset
2025-09-08 09:20:45,431:INFO:Defining folds
2025-09-08 09:20:45,431:INFO:Declaring metric variables
2025-09-08 09:20:45,431:INFO:Importing untrained model
2025-09-08 09:20:45,431:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:20:45,431:INFO:Starting cross validation
2025-09-08 09:20:45,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:45,577:INFO:Calculating mean and std
2025-09-08 09:20:45,577:INFO:Creating metrics dataframe
2025-09-08 09:20:45,577:INFO:Uploading results into container
2025-09-08 09:20:45,578:INFO:Uploading model into container now
2025-09-08 09:20:45,578:INFO:_master_model_container: 3
2025-09-08 09:20:45,578:INFO:_display_container: 2
2025-09-08 09:20:45,578:INFO:GradientBoostingRegressor(random_state=948)
2025-09-08 09:20:45,578:INFO:create_model() successfully completed......................................
2025-09-08 09:20:45,654:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:45,654:INFO:Creating metrics dataframe
2025-09-08 09:20:45,654:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:20:45,654:INFO:Total runtime is 0.01131363312403361 minutes
2025-09-08 09:20:45,654:INFO:SubProcess create_model() called ==================================
2025-09-08 09:20:45,654:INFO:Initializing create_model()
2025-09-08 09:20:45,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154684F5BD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:45,654:INFO:Checking exceptions
2025-09-08 09:20:45,654:INFO:Importing libraries
2025-09-08 09:20:45,654:INFO:Copying training dataset
2025-09-08 09:20:45,654:INFO:Defining folds
2025-09-08 09:20:45,654:INFO:Declaring metric variables
2025-09-08 09:20:45,654:INFO:Importing untrained model
2025-09-08 09:20:45,665:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:20:45,665:INFO:Starting cross validation
2025-09-08 09:20:45,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:20:45,782:INFO:Calculating mean and std
2025-09-08 09:20:45,782:INFO:Creating metrics dataframe
2025-09-08 09:20:45,784:INFO:Uploading results into container
2025-09-08 09:20:45,784:INFO:Uploading model into container now
2025-09-08 09:20:45,784:INFO:_master_model_container: 4
2025-09-08 09:20:45,784:INFO:_display_container: 2
2025-09-08 09:20:45,784:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:20:45,784:INFO:create_model() successfully completed......................................
2025-09-08 09:20:45,871:INFO:SubProcess create_model() end ==================================
2025-09-08 09:20:45,871:INFO:Creating metrics dataframe
2025-09-08 09:20:45,871:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:20:45,871:INFO:Initializing create_model()
2025-09-08 09:20:45,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=DecisionTreeRegressor(random_state=948), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:45,871:INFO:Checking exceptions
2025-09-08 09:20:45,871:INFO:Importing libraries
2025-09-08 09:20:45,871:INFO:Copying training dataset
2025-09-08 09:20:45,877:INFO:Defining folds
2025-09-08 09:20:45,877:INFO:Declaring metric variables
2025-09-08 09:20:45,877:INFO:Importing untrained model
2025-09-08 09:20:45,877:INFO:Declaring custom model
2025-09-08 09:20:45,877:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:20:45,877:INFO:Cross validation set to False
2025-09-08 09:20:45,877:INFO:Fitting Model
2025-09-08 09:20:45,888:INFO:DecisionTreeRegressor(random_state=948)
2025-09-08 09:20:45,888:INFO:create_model() successfully completed......................................
2025-09-08 09:20:45,983:INFO:_master_model_container: 4
2025-09-08 09:20:45,983:INFO:_display_container: 2
2025-09-08 09:20:45,983:INFO:DecisionTreeRegressor(random_state=948)
2025-09-08 09:20:45,983:INFO:compare_models() successfully completed......................................
2025-09-08 09:20:45,987:INFO:Initializing finalize_model()
2025-09-08 09:20:45,987:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=DecisionTreeRegressor(random_state=948), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:20:45,987:INFO:Finalizing DecisionTreeRegressor(random_state=948)
2025-09-08 09:20:45,992:INFO:Initializing create_model()
2025-09-08 09:20:45,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685CD650>, estimator=DecisionTreeRegressor(random_state=948), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:20:45,992:INFO:Checking exceptions
2025-09-08 09:20:45,992:INFO:Importing libraries
2025-09-08 09:20:45,992:INFO:Copying training dataset
2025-09-08 09:20:45,992:INFO:Defining folds
2025-09-08 09:20:45,992:INFO:Declaring metric variables
2025-09-08 09:20:45,992:INFO:Importing untrained model
2025-09-08 09:20:45,992:INFO:Declaring custom model
2025-09-08 09:20:45,992:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:20:45,994:INFO:Cross validation set to False
2025-09-08 09:20:45,994:INFO:Fitting Model
2025-09-08 09:20:46,005:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=948))])
2025-09-08 09:20:46,005:INFO:create_model() successfully completed......................................
2025-09-08 09:20:46,087:INFO:_master_model_container: 4
2025-09-08 09:20:46,087:INFO:_display_container: 2
2025-09-08 09:20:46,089:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=948))])
2025-09-08 09:20:46,089:INFO:finalize_model() successfully completed......................................
2025-09-08 09:20:46,176:INFO:Initializing save_model()
2025-09-08 09:20:46,176:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=948))]), model_name=out/Out of Bounds P2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:20:46,176:INFO:Adding model into prep_pipe
2025-09-08 09:20:46,176:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:20:46,177:INFO:out/Out of Bounds P2/pycaret/model.pkl saved in current working directory
2025-09-08 09:20:46,179:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=948))])
2025-09-08 09:20:46,179:INFO:save_model() successfully completed......................................
2025-09-08 09:20:46,337:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:20:46,682:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:21:24,497:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:21:29,657:INFO:PyCaret RegressionExperiment
2025-09-08 09:21:29,657:INFO:Logging name: reg-default-name
2025-09-08 09:21:29,657:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:21:29,658:INFO:version 3.3.2
2025-09-08 09:21:29,658:INFO:Initializing setup()
2025-09-08 09:21:29,658:INFO:self.USI: 9b3c
2025-09-08 09:21:29,658:INFO:self._variable_keys: {'log_plots_param', 'seed', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'exp_id', 'X_train', '_ml_usecase', '_available_plots', 'target_param', 'logging_param', 'idx', 'fold_generator', 'y', 'data', 'y_train', 'y_test', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'memory', 'html_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2025-09-08 09:21:29,658:INFO:Checking environment
2025-09-08 09:21:29,658:INFO:python_version: 3.11.9
2025-09-08 09:21:29,659:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:21:29,659:INFO:machine: AMD64
2025-09-08 09:21:29,659:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:21:29,659:INFO:Memory: svmem(total=16766066688, available=2398990336, percent=85.7, used=14367076352, free=2398990336)
2025-09-08 09:21:29,659:INFO:Physical Core: 16
2025-09-08 09:21:29,659:INFO:Logical Core: 22
2025-09-08 09:21:29,659:INFO:Checking libraries
2025-09-08 09:21:29,659:INFO:System:
2025-09-08 09:21:29,659:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:21:29,659:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:21:29,659:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:21:29,659:INFO:PyCaret required dependencies:
2025-09-08 09:21:29,659:INFO:                 pip: 25.2
2025-09-08 09:21:29,659:INFO:          setuptools: 65.5.0
2025-09-08 09:21:29,659:INFO:             pycaret: 3.3.2
2025-09-08 09:21:29,660:INFO:             IPython: 9.5.0
2025-09-08 09:21:29,660:INFO:          ipywidgets: 8.1.7
2025-09-08 09:21:29,660:INFO:                tqdm: 4.67.1
2025-09-08 09:21:29,660:INFO:               numpy: 1.26.4
2025-09-08 09:21:29,660:INFO:              pandas: 2.1.4
2025-09-08 09:21:29,660:INFO:              jinja2: 3.1.6
2025-09-08 09:21:29,660:INFO:               scipy: 1.11.4
2025-09-08 09:21:29,660:INFO:              joblib: 1.3.2
2025-09-08 09:21:29,660:INFO:             sklearn: 1.4.2
2025-09-08 09:21:29,660:INFO:                pyod: 2.0.5
2025-09-08 09:21:29,660:INFO:            imblearn: 0.14.0
2025-09-08 09:21:29,660:INFO:   category_encoders: 2.7.0
2025-09-08 09:21:29,660:INFO:            lightgbm: 4.6.0
2025-09-08 09:21:29,660:INFO:               numba: 0.61.2
2025-09-08 09:21:29,660:INFO:            requests: 2.32.5
2025-09-08 09:21:29,660:INFO:          matplotlib: 3.7.5
2025-09-08 09:21:29,660:INFO:          scikitplot: 0.3.7
2025-09-08 09:21:29,660:INFO:         yellowbrick: 1.5
2025-09-08 09:21:29,660:INFO:              plotly: 6.3.0
2025-09-08 09:21:29,660:INFO:    plotly-resampler: Not installed
2025-09-08 09:21:29,660:INFO:             kaleido: 1.0.0
2025-09-08 09:21:29,660:INFO:           schemdraw: 0.15
2025-09-08 09:21:29,660:INFO:         statsmodels: 0.14.5
2025-09-08 09:21:29,660:INFO:              sktime: 0.26.0
2025-09-08 09:21:29,660:INFO:               tbats: 1.1.3
2025-09-08 09:21:29,660:INFO:            pmdarima: 2.0.4
2025-09-08 09:21:29,660:INFO:              psutil: 7.0.0
2025-09-08 09:21:29,660:INFO:          markupsafe: 3.0.2
2025-09-08 09:21:29,660:INFO:             pickle5: Not installed
2025-09-08 09:21:29,660:INFO:         cloudpickle: 3.1.1
2025-09-08 09:21:29,660:INFO:         deprecation: 2.1.0
2025-09-08 09:21:29,660:INFO:              xxhash: 3.5.0
2025-09-08 09:21:29,660:INFO:           wurlitzer: Not installed
2025-09-08 09:21:29,660:INFO:PyCaret optional dependencies:
2025-09-08 09:21:29,660:INFO:                shap: 0.48.0
2025-09-08 09:21:29,660:INFO:           interpret: Not installed
2025-09-08 09:21:29,660:INFO:                umap: Not installed
2025-09-08 09:21:29,660:INFO:     ydata_profiling: Not installed
2025-09-08 09:21:29,660:INFO:  explainerdashboard: Not installed
2025-09-08 09:21:29,660:INFO:             autoviz: Not installed
2025-09-08 09:21:29,660:INFO:           fairlearn: Not installed
2025-09-08 09:21:29,660:INFO:          deepchecks: Not installed
2025-09-08 09:21:29,660:INFO:             xgboost: 3.0.5
2025-09-08 09:21:29,660:INFO:            catboost: Not installed
2025-09-08 09:21:29,660:INFO:              kmodes: Not installed
2025-09-08 09:21:29,660:INFO:             mlxtend: Not installed
2025-09-08 09:21:29,660:INFO:       statsforecast: Not installed
2025-09-08 09:21:29,660:INFO:        tune_sklearn: Not installed
2025-09-08 09:21:29,660:INFO:                 ray: Not installed
2025-09-08 09:21:29,660:INFO:            hyperopt: Not installed
2025-09-08 09:21:29,660:INFO:              optuna: Not installed
2025-09-08 09:21:29,660:INFO:               skopt: Not installed
2025-09-08 09:21:29,661:INFO:              mlflow: Not installed
2025-09-08 09:21:29,661:INFO:              gradio: Not installed
2025-09-08 09:21:29,661:INFO:             fastapi: Not installed
2025-09-08 09:21:29,661:INFO:             uvicorn: Not installed
2025-09-08 09:21:29,661:INFO:              m2cgen: Not installed
2025-09-08 09:21:29,661:INFO:           evidently: Not installed
2025-09-08 09:21:29,661:INFO:               fugue: Not installed
2025-09-08 09:21:29,661:INFO:           streamlit: Not installed
2025-09-08 09:21:29,661:INFO:             prophet: Not installed
2025-09-08 09:21:29,661:INFO:None
2025-09-08 09:21:29,661:INFO:Set up data.
2025-09-08 09:21:29,666:INFO:Set up folding strategy.
2025-09-08 09:21:29,666:INFO:Set up train/test split.
2025-09-08 09:21:29,666:INFO:Set up index.
2025-09-08 09:21:29,666:INFO:Assigning column types.
2025-09-08 09:21:29,666:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:21:29,666:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,677:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,677:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,737:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,737:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:29,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:29,739:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,741:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,743:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,772:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,793:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,794:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:29,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:29,795:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:21:29,798:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,800:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,828:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,850:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:29,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:29,854:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,854:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,902:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,902:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:29,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:29,904:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:21:29,908:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,956:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,956:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:29,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:29,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:29,991:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,013:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,015:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:21:30,049:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,070:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,070:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,102:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,125:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,125:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,125:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:21:30,156:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,177:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,210:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:30,236:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,243:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:21:30,300:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,353:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,359:INFO:Preparing preprocessing pipeline...
2025-09-08 09:21:30,359:INFO:Set up simple imputation.
2025-09-08 09:21:30,359:INFO:Set up feature normalization.
2025-09-08 09:21:30,360:INFO:Set up column name cleaning.
2025-09-08 09:21:30,378:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:21:30,381:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:21:30,381:INFO:Creating final display dataframe.
2025-09-08 09:21:30,443:INFO:Setup _display_container:                     Description             Value
0                    Session id               487
1                        Target  Out of Bounds P2
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              9b3c
2025-09-08 09:21:30,503:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,570:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:30,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:30,570:INFO:setup() successfully completed in 0.91s...............
2025-09-08 09:21:30,570:INFO:Initializing compare_models()
2025-09-08 09:21:30,570:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:21:30,570:INFO:Checking exceptions
2025-09-08 09:21:30,570:INFO:Preparing display monitor
2025-09-08 09:21:30,570:INFO:Initializing Decision Tree Regressor
2025-09-08 09:21:30,570:INFO:Total runtime is 0.0 minutes
2025-09-08 09:21:30,570:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:30,576:INFO:Initializing create_model()
2025-09-08 09:21:30,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001546848A750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:30,576:INFO:Checking exceptions
2025-09-08 09:21:30,576:INFO:Importing libraries
2025-09-08 09:21:30,576:INFO:Copying training dataset
2025-09-08 09:21:30,576:INFO:Defining folds
2025-09-08 09:21:30,576:INFO:Declaring metric variables
2025-09-08 09:21:30,576:INFO:Importing untrained model
2025-09-08 09:21:30,576:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:21:30,576:INFO:Starting cross validation
2025-09-08 09:21:30,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:30,635:INFO:Calculating mean and std
2025-09-08 09:21:30,635:INFO:Creating metrics dataframe
2025-09-08 09:21:30,635:INFO:Uploading results into container
2025-09-08 09:21:30,637:INFO:Uploading model into container now
2025-09-08 09:21:30,637:INFO:_master_model_container: 1
2025-09-08 09:21:30,637:INFO:_display_container: 2
2025-09-08 09:21:30,637:INFO:DecisionTreeRegressor(random_state=487)
2025-09-08 09:21:30,637:INFO:create_model() successfully completed......................................
2025-09-08 09:21:30,729:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:30,729:INFO:Creating metrics dataframe
2025-09-08 09:21:30,729:INFO:Initializing Random Forest Regressor
2025-09-08 09:21:30,729:INFO:Total runtime is 0.0026604970296223956 minutes
2025-09-08 09:21:30,729:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:30,729:INFO:Initializing create_model()
2025-09-08 09:21:30,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001546848A750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:30,729:INFO:Checking exceptions
2025-09-08 09:21:30,729:INFO:Importing libraries
2025-09-08 09:21:30,729:INFO:Copying training dataset
2025-09-08 09:21:30,729:INFO:Defining folds
2025-09-08 09:21:30,729:INFO:Declaring metric variables
2025-09-08 09:21:30,729:INFO:Importing untrained model
2025-09-08 09:21:30,729:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:21:30,739:INFO:Starting cross validation
2025-09-08 09:21:30,739:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:30,936:INFO:Calculating mean and std
2025-09-08 09:21:30,936:INFO:Creating metrics dataframe
2025-09-08 09:21:30,937:INFO:Uploading results into container
2025-09-08 09:21:30,937:INFO:Uploading model into container now
2025-09-08 09:21:30,937:INFO:_master_model_container: 2
2025-09-08 09:21:30,937:INFO:_display_container: 2
2025-09-08 09:21:30,937:INFO:RandomForestRegressor(n_jobs=-1, random_state=487)
2025-09-08 09:21:30,937:INFO:create_model() successfully completed......................................
2025-09-08 09:21:31,020:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:31,020:INFO:Creating metrics dataframe
2025-09-08 09:21:31,022:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:21:31,022:INFO:Total runtime is 0.007540667057037353 minutes
2025-09-08 09:21:31,022:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:31,022:INFO:Initializing create_model()
2025-09-08 09:21:31,022:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001546848A750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:31,022:INFO:Checking exceptions
2025-09-08 09:21:31,022:INFO:Importing libraries
2025-09-08 09:21:31,022:INFO:Copying training dataset
2025-09-08 09:21:31,026:INFO:Defining folds
2025-09-08 09:21:31,026:INFO:Declaring metric variables
2025-09-08 09:21:31,026:INFO:Importing untrained model
2025-09-08 09:21:31,026:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:21:31,026:INFO:Starting cross validation
2025-09-08 09:21:31,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:31,161:INFO:Calculating mean and std
2025-09-08 09:21:31,161:INFO:Creating metrics dataframe
2025-09-08 09:21:31,161:INFO:Uploading results into container
2025-09-08 09:21:31,161:INFO:Uploading model into container now
2025-09-08 09:21:31,163:INFO:_master_model_container: 3
2025-09-08 09:21:31,163:INFO:_display_container: 2
2025-09-08 09:21:31,163:INFO:GradientBoostingRegressor(random_state=487)
2025-09-08 09:21:31,163:INFO:create_model() successfully completed......................................
2025-09-08 09:21:31,248:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:31,248:INFO:Creating metrics dataframe
2025-09-08 09:21:31,250:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:21:31,250:INFO:Total runtime is 0.01133219003677368 minutes
2025-09-08 09:21:31,250:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:31,250:INFO:Initializing create_model()
2025-09-08 09:21:31,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001546848A750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:31,250:INFO:Checking exceptions
2025-09-08 09:21:31,250:INFO:Importing libraries
2025-09-08 09:21:31,250:INFO:Copying training dataset
2025-09-08 09:21:31,253:INFO:Defining folds
2025-09-08 09:21:31,254:INFO:Declaring metric variables
2025-09-08 09:21:31,254:INFO:Importing untrained model
2025-09-08 09:21:31,255:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:21:31,255:INFO:Starting cross validation
2025-09-08 09:21:31,256:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:31,372:INFO:Calculating mean and std
2025-09-08 09:21:31,372:INFO:Creating metrics dataframe
2025-09-08 09:21:31,374:INFO:Uploading results into container
2025-09-08 09:21:31,374:INFO:Uploading model into container now
2025-09-08 09:21:31,374:INFO:_master_model_container: 4
2025-09-08 09:21:31,374:INFO:_display_container: 2
2025-09-08 09:21:31,374:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:21:31,374:INFO:create_model() successfully completed......................................
2025-09-08 09:21:31,460:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:31,460:INFO:Creating metrics dataframe
2025-09-08 09:21:31,460:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:21:31,460:INFO:Initializing create_model()
2025-09-08 09:21:31,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=DecisionTreeRegressor(random_state=487), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:31,460:INFO:Checking exceptions
2025-09-08 09:21:31,460:INFO:Importing libraries
2025-09-08 09:21:31,460:INFO:Copying training dataset
2025-09-08 09:21:31,460:INFO:Defining folds
2025-09-08 09:21:31,460:INFO:Declaring metric variables
2025-09-08 09:21:31,460:INFO:Importing untrained model
2025-09-08 09:21:31,460:INFO:Declaring custom model
2025-09-08 09:21:31,460:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:21:31,460:INFO:Cross validation set to False
2025-09-08 09:21:31,460:INFO:Fitting Model
2025-09-08 09:21:31,476:INFO:DecisionTreeRegressor(random_state=487)
2025-09-08 09:21:31,476:INFO:create_model() successfully completed......................................
2025-09-08 09:21:31,560:INFO:_master_model_container: 4
2025-09-08 09:21:31,560:INFO:_display_container: 2
2025-09-08 09:21:31,560:INFO:DecisionTreeRegressor(random_state=487)
2025-09-08 09:21:31,560:INFO:compare_models() successfully completed......................................
2025-09-08 09:21:31,571:INFO:Initializing finalize_model()
2025-09-08 09:21:31,571:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=DecisionTreeRegressor(random_state=487), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:21:31,571:INFO:Finalizing DecisionTreeRegressor(random_state=487)
2025-09-08 09:21:31,573:INFO:Initializing create_model()
2025-09-08 09:21:31,573:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000154685B3AD0>, estimator=DecisionTreeRegressor(random_state=487), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:31,573:INFO:Checking exceptions
2025-09-08 09:21:31,574:INFO:Importing libraries
2025-09-08 09:21:31,574:INFO:Copying training dataset
2025-09-08 09:21:31,574:INFO:Defining folds
2025-09-08 09:21:31,574:INFO:Declaring metric variables
2025-09-08 09:21:31,574:INFO:Importing untrained model
2025-09-08 09:21:31,574:INFO:Declaring custom model
2025-09-08 09:21:31,574:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:21:31,576:INFO:Cross validation set to False
2025-09-08 09:21:31,576:INFO:Fitting Model
2025-09-08 09:21:31,586:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=487))])
2025-09-08 09:21:31,586:INFO:create_model() successfully completed......................................
2025-09-08 09:21:31,682:INFO:_master_model_container: 4
2025-09-08 09:21:31,682:INFO:_display_container: 2
2025-09-08 09:21:31,686:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=487))])
2025-09-08 09:21:31,686:INFO:finalize_model() successfully completed......................................
2025-09-08 09:21:31,760:INFO:Initializing save_model()
2025-09-08 09:21:31,760:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=487))]), model_name=out/Out of Bounds P2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:21:31,764:INFO:Adding model into prep_pipe
2025-09-08 09:21:31,764:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:21:31,764:INFO:out/Out of Bounds P2/pycaret/model.pkl saved in current working directory
2025-09-08 09:21:31,769:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=487))])
2025-09-08 09:21:31,769:INFO:save_model() successfully completed......................................
2025-09-08 09:21:31,922:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:21:32,247:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:21:36,945:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-08 09:21:44,914:INFO:PyCaret RegressionExperiment
2025-09-08 09:21:44,914:INFO:Logging name: reg-default-name
2025-09-08 09:21:44,915:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:21:44,915:INFO:version 3.3.2
2025-09-08 09:21:44,915:INFO:Initializing setup()
2025-09-08 09:21:44,915:INFO:self.USI: 4909
2025-09-08 09:21:44,915:INFO:self._variable_keys: {'log_plots_param', 'seed', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'exp_id', 'X_train', '_ml_usecase', '_available_plots', 'target_param', 'logging_param', 'idx', 'fold_generator', 'y', 'data', 'y_train', 'y_test', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'memory', 'html_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2025-09-08 09:21:44,915:INFO:Checking environment
2025-09-08 09:21:44,915:INFO:python_version: 3.11.9
2025-09-08 09:21:44,915:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:21:44,915:INFO:machine: AMD64
2025-09-08 09:21:44,915:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:21:44,915:INFO:Memory: svmem(total=16766066688, available=2567131136, percent=84.7, used=14198935552, free=2567131136)
2025-09-08 09:21:44,915:INFO:Physical Core: 16
2025-09-08 09:21:44,915:INFO:Logical Core: 22
2025-09-08 09:21:44,915:INFO:Checking libraries
2025-09-08 09:21:44,916:INFO:System:
2025-09-08 09:21:44,916:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:21:44,916:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:21:44,916:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:21:44,916:INFO:PyCaret required dependencies:
2025-09-08 09:21:44,916:INFO:                 pip: 25.2
2025-09-08 09:21:44,916:INFO:          setuptools: 65.5.0
2025-09-08 09:21:44,916:INFO:             pycaret: 3.3.2
2025-09-08 09:21:44,916:INFO:             IPython: 9.5.0
2025-09-08 09:21:44,916:INFO:          ipywidgets: 8.1.7
2025-09-08 09:21:44,916:INFO:                tqdm: 4.67.1
2025-09-08 09:21:44,916:INFO:               numpy: 1.26.4
2025-09-08 09:21:44,916:INFO:              pandas: 2.1.4
2025-09-08 09:21:44,916:INFO:              jinja2: 3.1.6
2025-09-08 09:21:44,916:INFO:               scipy: 1.11.4
2025-09-08 09:21:44,916:INFO:              joblib: 1.3.2
2025-09-08 09:21:44,916:INFO:             sklearn: 1.4.2
2025-09-08 09:21:44,916:INFO:                pyod: 2.0.5
2025-09-08 09:21:44,916:INFO:            imblearn: 0.14.0
2025-09-08 09:21:44,916:INFO:   category_encoders: 2.7.0
2025-09-08 09:21:44,916:INFO:            lightgbm: 4.6.0
2025-09-08 09:21:44,916:INFO:               numba: 0.61.2
2025-09-08 09:21:44,916:INFO:            requests: 2.32.5
2025-09-08 09:21:44,916:INFO:          matplotlib: 3.7.5
2025-09-08 09:21:44,916:INFO:          scikitplot: 0.3.7
2025-09-08 09:21:44,916:INFO:         yellowbrick: 1.5
2025-09-08 09:21:44,916:INFO:              plotly: 6.3.0
2025-09-08 09:21:44,916:INFO:    plotly-resampler: Not installed
2025-09-08 09:21:44,917:INFO:             kaleido: 1.0.0
2025-09-08 09:21:44,917:INFO:           schemdraw: 0.15
2025-09-08 09:21:44,917:INFO:         statsmodels: 0.14.5
2025-09-08 09:21:44,917:INFO:              sktime: 0.26.0
2025-09-08 09:21:44,917:INFO:               tbats: 1.1.3
2025-09-08 09:21:44,917:INFO:            pmdarima: 2.0.4
2025-09-08 09:21:44,917:INFO:              psutil: 7.0.0
2025-09-08 09:21:44,917:INFO:          markupsafe: 3.0.2
2025-09-08 09:21:44,917:INFO:             pickle5: Not installed
2025-09-08 09:21:44,917:INFO:         cloudpickle: 3.1.1
2025-09-08 09:21:44,918:INFO:         deprecation: 2.1.0
2025-09-08 09:21:44,918:INFO:              xxhash: 3.5.0
2025-09-08 09:21:44,918:INFO:           wurlitzer: Not installed
2025-09-08 09:21:44,918:INFO:PyCaret optional dependencies:
2025-09-08 09:21:44,918:INFO:                shap: 0.48.0
2025-09-08 09:21:44,918:INFO:           interpret: Not installed
2025-09-08 09:21:44,918:INFO:                umap: Not installed
2025-09-08 09:21:44,918:INFO:     ydata_profiling: Not installed
2025-09-08 09:21:44,918:INFO:  explainerdashboard: Not installed
2025-09-08 09:21:44,918:INFO:             autoviz: Not installed
2025-09-08 09:21:44,918:INFO:           fairlearn: Not installed
2025-09-08 09:21:44,918:INFO:          deepchecks: Not installed
2025-09-08 09:21:44,918:INFO:             xgboost: 3.0.5
2025-09-08 09:21:44,918:INFO:            catboost: Not installed
2025-09-08 09:21:44,918:INFO:              kmodes: Not installed
2025-09-08 09:21:44,918:INFO:             mlxtend: Not installed
2025-09-08 09:21:44,918:INFO:       statsforecast: Not installed
2025-09-08 09:21:44,918:INFO:        tune_sklearn: Not installed
2025-09-08 09:21:44,918:INFO:                 ray: Not installed
2025-09-08 09:21:44,919:INFO:            hyperopt: Not installed
2025-09-08 09:21:44,919:INFO:              optuna: Not installed
2025-09-08 09:21:44,919:INFO:               skopt: Not installed
2025-09-08 09:21:44,919:INFO:              mlflow: Not installed
2025-09-08 09:21:44,919:INFO:              gradio: Not installed
2025-09-08 09:21:44,919:INFO:             fastapi: Not installed
2025-09-08 09:21:44,919:INFO:             uvicorn: Not installed
2025-09-08 09:21:44,919:INFO:              m2cgen: Not installed
2025-09-08 09:21:44,919:INFO:           evidently: Not installed
2025-09-08 09:21:44,919:INFO:               fugue: Not installed
2025-09-08 09:21:44,919:INFO:           streamlit: Not installed
2025-09-08 09:21:44,919:INFO:             prophet: Not installed
2025-09-08 09:21:44,919:INFO:None
2025-09-08 09:21:44,919:INFO:Set up data.
2025-09-08 09:21:44,923:INFO:Set up folding strategy.
2025-09-08 09:21:44,923:INFO:Set up train/test split.
2025-09-08 09:21:44,926:INFO:Set up index.
2025-09-08 09:21:44,926:INFO:Assigning column types.
2025-09-08 09:21:44,929:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:21:44,929:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,930:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,930:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,987:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:44,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:44,989:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,989:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:44,989:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,040:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,040:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,050:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:21:45,050:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,050:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,106:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,116:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,116:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,167:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,167:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:21:45,167:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,198:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,219:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,219:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,223:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,271:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,271:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:21:45,302:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,325:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,325:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,363:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,383:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,383:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:21:45,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,439:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,479:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:21:45,499:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,506:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,506:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:21:45,556:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,616:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,616:INFO:Preparing preprocessing pipeline...
2025-09-08 09:21:45,616:INFO:Set up simple imputation.
2025-09-08 09:21:45,616:INFO:Set up feature normalization.
2025-09-08 09:21:45,616:INFO:Set up column name cleaning.
2025-09-08 09:21:45,640:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:21:45,640:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:21:45,640:INFO:Creating final display dataframe.
2025-09-08 09:21:45,706:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target  Out of Bounds P2
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              4909
2025-09-08 09:21:45,766:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,823:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:21:45,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:21:45,823:INFO:setup() successfully completed in 0.91s...............
2025-09-08 09:21:45,823:INFO:Initializing compare_models()
2025-09-08 09:21:45,823:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:21:45,823:INFO:Checking exceptions
2025-09-08 09:21:45,823:INFO:Preparing display monitor
2025-09-08 09:21:45,823:INFO:Initializing Decision Tree Regressor
2025-09-08 09:21:45,823:INFO:Total runtime is 0.0 minutes
2025-09-08 09:21:45,823:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:45,823:INFO:Initializing create_model()
2025-09-08 09:21:45,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468906F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:45,823:INFO:Checking exceptions
2025-09-08 09:21:45,823:INFO:Importing libraries
2025-09-08 09:21:45,823:INFO:Copying training dataset
2025-09-08 09:21:45,833:INFO:Defining folds
2025-09-08 09:21:45,833:INFO:Declaring metric variables
2025-09-08 09:21:45,833:INFO:Importing untrained model
2025-09-08 09:21:45,833:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:21:45,833:INFO:Starting cross validation
2025-09-08 09:21:45,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:45,886:INFO:Calculating mean and std
2025-09-08 09:21:45,886:INFO:Creating metrics dataframe
2025-09-08 09:21:45,886:INFO:Uploading results into container
2025-09-08 09:21:45,886:INFO:Uploading model into container now
2025-09-08 09:21:45,886:INFO:_master_model_container: 1
2025-09-08 09:21:45,886:INFO:_display_container: 2
2025-09-08 09:21:45,886:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:21:45,886:INFO:create_model() successfully completed......................................
2025-09-08 09:21:45,983:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:45,983:INFO:Creating metrics dataframe
2025-09-08 09:21:45,985:INFO:Initializing Random Forest Regressor
2025-09-08 09:21:45,985:INFO:Total runtime is 0.00269702672958374 minutes
2025-09-08 09:21:45,987:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:45,987:INFO:Initializing create_model()
2025-09-08 09:21:45,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468906F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:45,987:INFO:Checking exceptions
2025-09-08 09:21:45,987:INFO:Importing libraries
2025-09-08 09:21:45,987:INFO:Copying training dataset
2025-09-08 09:21:45,987:INFO:Defining folds
2025-09-08 09:21:45,987:INFO:Declaring metric variables
2025-09-08 09:21:45,987:INFO:Importing untrained model
2025-09-08 09:21:45,987:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:21:45,987:INFO:Starting cross validation
2025-09-08 09:21:45,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:46,180:INFO:Calculating mean and std
2025-09-08 09:21:46,180:INFO:Creating metrics dataframe
2025-09-08 09:21:46,180:INFO:Uploading results into container
2025-09-08 09:21:46,180:INFO:Uploading model into container now
2025-09-08 09:21:46,180:INFO:_master_model_container: 2
2025-09-08 09:21:46,180:INFO:_display_container: 2
2025-09-08 09:21:46,180:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-08 09:21:46,180:INFO:create_model() successfully completed......................................
2025-09-08 09:21:46,258:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:46,258:INFO:Creating metrics dataframe
2025-09-08 09:21:46,260:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:21:46,260:INFO:Total runtime is 0.007275315125783284 minutes
2025-09-08 09:21:46,260:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:46,260:INFO:Initializing create_model()
2025-09-08 09:21:46,260:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468906F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:46,260:INFO:Checking exceptions
2025-09-08 09:21:46,260:INFO:Importing libraries
2025-09-08 09:21:46,260:INFO:Copying training dataset
2025-09-08 09:21:46,263:INFO:Defining folds
2025-09-08 09:21:46,263:INFO:Declaring metric variables
2025-09-08 09:21:46,263:INFO:Importing untrained model
2025-09-08 09:21:46,264:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:21:46,264:INFO:Starting cross validation
2025-09-08 09:21:46,264:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:46,388:INFO:Calculating mean and std
2025-09-08 09:21:46,389:INFO:Creating metrics dataframe
2025-09-08 09:21:46,390:INFO:Uploading results into container
2025-09-08 09:21:46,390:INFO:Uploading model into container now
2025-09-08 09:21:46,391:INFO:_master_model_container: 3
2025-09-08 09:21:46,391:INFO:_display_container: 2
2025-09-08 09:21:46,391:INFO:GradientBoostingRegressor(random_state=791)
2025-09-08 09:21:46,391:INFO:create_model() successfully completed......................................
2025-09-08 09:21:46,479:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:46,479:INFO:Creating metrics dataframe
2025-09-08 09:21:46,482:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:21:46,482:INFO:Total runtime is 0.010976322491963704 minutes
2025-09-08 09:21:46,482:INFO:SubProcess create_model() called ==================================
2025-09-08 09:21:46,482:INFO:Initializing create_model()
2025-09-08 09:21:46,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015468906F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:46,482:INFO:Checking exceptions
2025-09-08 09:21:46,482:INFO:Importing libraries
2025-09-08 09:21:46,483:INFO:Copying training dataset
2025-09-08 09:21:46,487:INFO:Defining folds
2025-09-08 09:21:46,487:INFO:Declaring metric variables
2025-09-08 09:21:46,487:INFO:Importing untrained model
2025-09-08 09:21:46,488:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:21:46,488:INFO:Starting cross validation
2025-09-08 09:21:46,488:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:21:46,557:INFO:Calculating mean and std
2025-09-08 09:21:46,557:INFO:Creating metrics dataframe
2025-09-08 09:21:46,558:INFO:Uploading results into container
2025-09-08 09:21:46,558:INFO:Uploading model into container now
2025-09-08 09:21:46,559:INFO:_master_model_container: 4
2025-09-08 09:21:46,559:INFO:_display_container: 2
2025-09-08 09:21:46,559:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:21:46,559:INFO:create_model() successfully completed......................................
2025-09-08 09:21:46,641:INFO:SubProcess create_model() end ==================================
2025-09-08 09:21:46,641:INFO:Creating metrics dataframe
2025-09-08 09:21:46,645:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:21:46,647:INFO:Initializing create_model()
2025-09-08 09:21:46,647:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:46,647:INFO:Checking exceptions
2025-09-08 09:21:46,648:INFO:Importing libraries
2025-09-08 09:21:46,648:INFO:Copying training dataset
2025-09-08 09:21:46,651:INFO:Defining folds
2025-09-08 09:21:46,652:INFO:Declaring metric variables
2025-09-08 09:21:46,652:INFO:Importing untrained model
2025-09-08 09:21:46,652:INFO:Declaring custom model
2025-09-08 09:21:46,652:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:21:46,652:INFO:Cross validation set to False
2025-09-08 09:21:46,652:INFO:Fitting Model
2025-09-08 09:21:46,660:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:21:46,660:INFO:create_model() successfully completed......................................
2025-09-08 09:21:46,756:INFO:_master_model_container: 4
2025-09-08 09:21:46,756:INFO:_display_container: 2
2025-09-08 09:21:46,756:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:21:46,756:INFO:compare_models() successfully completed......................................
2025-09-08 09:21:46,759:INFO:Initializing finalize_model()
2025-09-08 09:21:46,759:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:21:46,759:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-08 09:21:46,764:INFO:Initializing create_model()
2025-09-08 09:21:46,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468C63FD0>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:21:46,764:INFO:Checking exceptions
2025-09-08 09:21:46,764:INFO:Importing libraries
2025-09-08 09:21:46,765:INFO:Copying training dataset
2025-09-08 09:21:46,765:INFO:Defining folds
2025-09-08 09:21:46,765:INFO:Declaring metric variables
2025-09-08 09:21:46,765:INFO:Importing untrained model
2025-09-08 09:21:46,765:INFO:Declaring custom model
2025-09-08 09:21:46,766:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:21:46,766:INFO:Cross validation set to False
2025-09-08 09:21:46,766:INFO:Fitting Model
2025-09-08 09:21:46,775:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:21:46,775:INFO:create_model() successfully completed......................................
2025-09-08 09:21:46,856:INFO:_master_model_container: 4
2025-09-08 09:21:46,856:INFO:_display_container: 2
2025-09-08 09:21:46,856:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:21:46,866:INFO:finalize_model() successfully completed......................................
2025-09-08 09:21:46,948:INFO:Initializing save_model()
2025-09-08 09:21:46,949:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/Out of Bounds P2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:21:46,949:INFO:Adding model into prep_pipe
2025-09-08 09:21:46,949:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:21:46,949:INFO:out/Out of Bounds P2/pycaret/model.pkl saved in current working directory
2025-09-08 09:21:46,955:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:21:46,955:INFO:save_model() successfully completed......................................
2025-09-08 09:21:47,102:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:21:47,415:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-08 09:21:51,471:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:24:29,702:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-08 09:24:37,275:INFO:PyCaret RegressionExperiment
2025-09-08 09:24:37,276:INFO:Logging name: reg-default-name
2025-09-08 09:24:37,276:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-08 09:24:37,276:INFO:version 3.3.2
2025-09-08 09:24:37,276:INFO:Initializing setup()
2025-09-08 09:24:37,276:INFO:self.USI: eaf8
2025-09-08 09:24:37,276:INFO:self._variable_keys: {'log_plots_param', 'seed', 'exp_name_log', 'pipeline', 'USI', 'gpu_param', 'exp_id', 'X_train', '_ml_usecase', '_available_plots', 'target_param', 'logging_param', 'idx', 'fold_generator', 'y', 'data', 'y_train', 'y_test', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'memory', 'html_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2025-09-08 09:24:37,276:INFO:Checking environment
2025-09-08 09:24:37,276:INFO:python_version: 3.11.9
2025-09-08 09:24:37,276:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-08 09:24:37,276:INFO:machine: AMD64
2025-09-08 09:24:37,276:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-08 09:24:37,276:INFO:Memory: svmem(total=16766066688, available=2509144064, percent=85.0, used=14256922624, free=2509144064)
2025-09-08 09:24:37,276:INFO:Physical Core: 16
2025-09-08 09:24:37,276:INFO:Logical Core: 22
2025-09-08 09:24:37,276:INFO:Checking libraries
2025-09-08 09:24:37,276:INFO:System:
2025-09-08 09:24:37,276:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-08 09:24:37,276:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-08 09:24:37,276:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-08 09:24:37,276:INFO:PyCaret required dependencies:
2025-09-08 09:24:37,276:INFO:                 pip: 25.2
2025-09-08 09:24:37,276:INFO:          setuptools: 65.5.0
2025-09-08 09:24:37,277:INFO:             pycaret: 3.3.2
2025-09-08 09:24:37,277:INFO:             IPython: 9.5.0
2025-09-08 09:24:37,277:INFO:          ipywidgets: 8.1.7
2025-09-08 09:24:37,277:INFO:                tqdm: 4.67.1
2025-09-08 09:24:37,277:INFO:               numpy: 1.26.4
2025-09-08 09:24:37,277:INFO:              pandas: 2.1.4
2025-09-08 09:24:37,277:INFO:              jinja2: 3.1.6
2025-09-08 09:24:37,277:INFO:               scipy: 1.11.4
2025-09-08 09:24:37,277:INFO:              joblib: 1.3.2
2025-09-08 09:24:37,277:INFO:             sklearn: 1.4.2
2025-09-08 09:24:37,277:INFO:                pyod: 2.0.5
2025-09-08 09:24:37,277:INFO:            imblearn: 0.14.0
2025-09-08 09:24:37,277:INFO:   category_encoders: 2.7.0
2025-09-08 09:24:37,277:INFO:            lightgbm: 4.6.0
2025-09-08 09:24:37,277:INFO:               numba: 0.61.2
2025-09-08 09:24:37,277:INFO:            requests: 2.32.5
2025-09-08 09:24:37,277:INFO:          matplotlib: 3.7.5
2025-09-08 09:24:37,277:INFO:          scikitplot: 0.3.7
2025-09-08 09:24:37,277:INFO:         yellowbrick: 1.5
2025-09-08 09:24:37,277:INFO:              plotly: 6.3.0
2025-09-08 09:24:37,277:INFO:    plotly-resampler: Not installed
2025-09-08 09:24:37,277:INFO:             kaleido: 1.0.0
2025-09-08 09:24:37,277:INFO:           schemdraw: 0.15
2025-09-08 09:24:37,277:INFO:         statsmodels: 0.14.5
2025-09-08 09:24:37,277:INFO:              sktime: 0.26.0
2025-09-08 09:24:37,277:INFO:               tbats: 1.1.3
2025-09-08 09:24:37,277:INFO:            pmdarima: 2.0.4
2025-09-08 09:24:37,277:INFO:              psutil: 7.0.0
2025-09-08 09:24:37,277:INFO:          markupsafe: 3.0.2
2025-09-08 09:24:37,277:INFO:             pickle5: Not installed
2025-09-08 09:24:37,277:INFO:         cloudpickle: 3.1.1
2025-09-08 09:24:37,277:INFO:         deprecation: 2.1.0
2025-09-08 09:24:37,277:INFO:              xxhash: 3.5.0
2025-09-08 09:24:37,277:INFO:           wurlitzer: Not installed
2025-09-08 09:24:37,277:INFO:PyCaret optional dependencies:
2025-09-08 09:24:37,277:INFO:                shap: 0.48.0
2025-09-08 09:24:37,277:INFO:           interpret: Not installed
2025-09-08 09:24:37,277:INFO:                umap: Not installed
2025-09-08 09:24:37,277:INFO:     ydata_profiling: Not installed
2025-09-08 09:24:37,277:INFO:  explainerdashboard: Not installed
2025-09-08 09:24:37,277:INFO:             autoviz: Not installed
2025-09-08 09:24:37,277:INFO:           fairlearn: Not installed
2025-09-08 09:24:37,277:INFO:          deepchecks: Not installed
2025-09-08 09:24:37,277:INFO:             xgboost: 3.0.5
2025-09-08 09:24:37,277:INFO:            catboost: Not installed
2025-09-08 09:24:37,277:INFO:              kmodes: Not installed
2025-09-08 09:24:37,277:INFO:             mlxtend: Not installed
2025-09-08 09:24:37,277:INFO:       statsforecast: Not installed
2025-09-08 09:24:37,277:INFO:        tune_sklearn: Not installed
2025-09-08 09:24:37,277:INFO:                 ray: Not installed
2025-09-08 09:24:37,277:INFO:            hyperopt: Not installed
2025-09-08 09:24:37,277:INFO:              optuna: Not installed
2025-09-08 09:24:37,277:INFO:               skopt: Not installed
2025-09-08 09:24:37,277:INFO:              mlflow: Not installed
2025-09-08 09:24:37,277:INFO:              gradio: Not installed
2025-09-08 09:24:37,277:INFO:             fastapi: Not installed
2025-09-08 09:24:37,277:INFO:             uvicorn: Not installed
2025-09-08 09:24:37,277:INFO:              m2cgen: Not installed
2025-09-08 09:24:37,278:INFO:           evidently: Not installed
2025-09-08 09:24:37,278:INFO:               fugue: Not installed
2025-09-08 09:24:37,278:INFO:           streamlit: Not installed
2025-09-08 09:24:37,278:INFO:             prophet: Not installed
2025-09-08 09:24:37,278:INFO:None
2025-09-08 09:24:37,278:INFO:Set up data.
2025-09-08 09:24:37,282:INFO:Set up folding strategy.
2025-09-08 09:24:37,282:INFO:Set up train/test split.
2025-09-08 09:24:37,284:INFO:Set up index.
2025-09-08 09:24:37,285:INFO:Assigning column types.
2025-09-08 09:24:37,287:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-08 09:24:37,287:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,289:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,292:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,342:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,342:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,347:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,351:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,353:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,385:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,399:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,399:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,409:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-08 09:24:37,409:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,414:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,466:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,470:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,473:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,523:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,523:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-08 09:24:37,529:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,557:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,577:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,579:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,634:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,634:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-08 09:24:37,669:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,690:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,738:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,738:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,749:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-08 09:24:37,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,807:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,847:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-08 09:24:37,869:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,874:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-08 09:24:37,932:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,992:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:37,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:37,994:INFO:Preparing preprocessing pipeline...
2025-09-08 09:24:37,994:INFO:Set up simple imputation.
2025-09-08 09:24:37,994:INFO:Set up feature normalization.
2025-09-08 09:24:37,994:INFO:Set up column name cleaning.
2025-09-08 09:24:38,015:INFO:Finished creating preprocessing pipeline.
2025-09-08 09:24:38,018:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-09-08 09:24:38,018:INFO:Creating final display dataframe.
2025-09-08 09:24:38,080:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target  Out of Bounds P2
2                   Target type        Regression
3           Original data shape         (500, 31)
4        Transformed data shape         (500, 31)
5   Transformed train set shape         (350, 31)
6    Transformed test set shape         (150, 31)
7              Numeric features                30
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              eaf8
2025-09-08 09:24:38,133:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:38,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:38,198:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-08 09:24:38,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-08 09:24:38,200:INFO:setup() successfully completed in 0.93s...............
2025-09-08 09:24:38,200:INFO:Initializing compare_models()
2025-09-08 09:24:38,201:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-08 09:24:38,201:INFO:Checking exceptions
2025-09-08 09:24:38,204:INFO:Preparing display monitor
2025-09-08 09:24:38,205:INFO:Initializing Decision Tree Regressor
2025-09-08 09:24:38,205:INFO:Total runtime is 0.0 minutes
2025-09-08 09:24:38,205:INFO:SubProcess create_model() called ==================================
2025-09-08 09:24:38,206:INFO:Initializing create_model()
2025-09-08 09:24:38,206:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154687F2B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:24:38,206:INFO:Checking exceptions
2025-09-08 09:24:38,206:INFO:Importing libraries
2025-09-08 09:24:38,206:INFO:Copying training dataset
2025-09-08 09:24:38,208:INFO:Defining folds
2025-09-08 09:24:38,208:INFO:Declaring metric variables
2025-09-08 09:24:38,208:INFO:Importing untrained model
2025-09-08 09:24:38,209:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:24:38,209:INFO:Starting cross validation
2025-09-08 09:24:38,209:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:24:38,256:INFO:Calculating mean and std
2025-09-08 09:24:38,256:INFO:Creating metrics dataframe
2025-09-08 09:24:38,256:INFO:Uploading results into container
2025-09-08 09:24:38,256:INFO:Uploading model into container now
2025-09-08 09:24:38,256:INFO:_master_model_container: 1
2025-09-08 09:24:38,256:INFO:_display_container: 2
2025-09-08 09:24:38,256:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:24:38,256:INFO:create_model() successfully completed......................................
2025-09-08 09:24:38,358:INFO:SubProcess create_model() end ==================================
2025-09-08 09:24:38,358:INFO:Creating metrics dataframe
2025-09-08 09:24:38,358:INFO:Initializing Random Forest Regressor
2025-09-08 09:24:38,358:INFO:Total runtime is 0.0025506774584452313 minutes
2025-09-08 09:24:38,360:INFO:SubProcess create_model() called ==================================
2025-09-08 09:24:38,360:INFO:Initializing create_model()
2025-09-08 09:24:38,360:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154687F2B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:24:38,360:INFO:Checking exceptions
2025-09-08 09:24:38,360:INFO:Importing libraries
2025-09-08 09:24:38,360:INFO:Copying training dataset
2025-09-08 09:24:38,362:INFO:Defining folds
2025-09-08 09:24:38,362:INFO:Declaring metric variables
2025-09-08 09:24:38,362:INFO:Importing untrained model
2025-09-08 09:24:38,362:INFO:Random Forest Regressor Imported successfully
2025-09-08 09:24:38,362:INFO:Starting cross validation
2025-09-08 09:24:38,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:24:38,570:INFO:Calculating mean and std
2025-09-08 09:24:38,570:INFO:Creating metrics dataframe
2025-09-08 09:24:38,571:INFO:Uploading results into container
2025-09-08 09:24:38,571:INFO:Uploading model into container now
2025-09-08 09:24:38,572:INFO:_master_model_container: 2
2025-09-08 09:24:38,572:INFO:_display_container: 2
2025-09-08 09:24:38,572:INFO:RandomForestRegressor(n_jobs=-1, random_state=791)
2025-09-08 09:24:38,572:INFO:create_model() successfully completed......................................
2025-09-08 09:24:38,641:INFO:SubProcess create_model() end ==================================
2025-09-08 09:24:38,641:INFO:Creating metrics dataframe
2025-09-08 09:24:38,641:INFO:Initializing Gradient Boosting Regressor
2025-09-08 09:24:38,641:INFO:Total runtime is 0.007266048590342205 minutes
2025-09-08 09:24:38,641:INFO:SubProcess create_model() called ==================================
2025-09-08 09:24:38,641:INFO:Initializing create_model()
2025-09-08 09:24:38,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154687F2B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:24:38,641:INFO:Checking exceptions
2025-09-08 09:24:38,641:INFO:Importing libraries
2025-09-08 09:24:38,641:INFO:Copying training dataset
2025-09-08 09:24:38,641:INFO:Defining folds
2025-09-08 09:24:38,641:INFO:Declaring metric variables
2025-09-08 09:24:38,641:INFO:Importing untrained model
2025-09-08 09:24:38,641:INFO:Gradient Boosting Regressor Imported successfully
2025-09-08 09:24:38,641:INFO:Starting cross validation
2025-09-08 09:24:38,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:24:38,778:INFO:Calculating mean and std
2025-09-08 09:24:38,778:INFO:Creating metrics dataframe
2025-09-08 09:24:38,779:INFO:Uploading results into container
2025-09-08 09:24:38,780:INFO:Uploading model into container now
2025-09-08 09:24:38,780:INFO:_master_model_container: 3
2025-09-08 09:24:38,780:INFO:_display_container: 2
2025-09-08 09:24:38,780:INFO:GradientBoostingRegressor(random_state=791)
2025-09-08 09:24:38,780:INFO:create_model() successfully completed......................................
2025-09-08 09:24:38,863:INFO:SubProcess create_model() end ==================================
2025-09-08 09:24:38,863:INFO:Creating metrics dataframe
2025-09-08 09:24:38,865:INFO:Initializing Extreme Gradient Boosting
2025-09-08 09:24:38,865:INFO:Total runtime is 0.010989896456400555 minutes
2025-09-08 09:24:38,865:INFO:SubProcess create_model() called ==================================
2025-09-08 09:24:38,865:INFO:Initializing create_model()
2025-09-08 09:24:38,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000154687F2B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:24:38,865:INFO:Checking exceptions
2025-09-08 09:24:38,865:INFO:Importing libraries
2025-09-08 09:24:38,865:INFO:Copying training dataset
2025-09-08 09:24:38,868:INFO:Defining folds
2025-09-08 09:24:38,868:INFO:Declaring metric variables
2025-09-08 09:24:38,868:INFO:Importing untrained model
2025-09-08 09:24:38,869:INFO:Extreme Gradient Boosting Imported successfully
2025-09-08 09:24:38,869:INFO:Starting cross validation
2025-09-08 09:24:38,870:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-08 09:24:38,953:INFO:Calculating mean and std
2025-09-08 09:24:38,953:INFO:Creating metrics dataframe
2025-09-08 09:24:38,954:INFO:Uploading results into container
2025-09-08 09:24:38,955:INFO:Uploading model into container now
2025-09-08 09:24:38,955:INFO:_master_model_container: 4
2025-09-08 09:24:38,955:INFO:_display_container: 2
2025-09-08 09:24:38,955:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             feature_weights=None, gamma=None, grow_policy=None,
             importance_type=None, interaction_constraints=None,
             learning_rate=None, max_bin=None, max_cat_threshold=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, multi_strategy=None, n_estimators=None,
             n_jobs=-1, num_parallel_tree=None, ...)
2025-09-08 09:24:38,955:INFO:create_model() successfully completed......................................
2025-09-08 09:24:39,039:INFO:SubProcess create_model() end ==================================
2025-09-08 09:24:39,039:INFO:Creating metrics dataframe
2025-09-08 09:24:39,042:WARNING:C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-09-08 09:24:39,043:INFO:Initializing create_model()
2025-09-08 09:24:39,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=DecisionTreeRegressor(random_state=791), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:24:39,043:INFO:Checking exceptions
2025-09-08 09:24:39,044:INFO:Importing libraries
2025-09-08 09:24:39,044:INFO:Copying training dataset
2025-09-08 09:24:39,047:INFO:Defining folds
2025-09-08 09:24:39,047:INFO:Declaring metric variables
2025-09-08 09:24:39,047:INFO:Importing untrained model
2025-09-08 09:24:39,047:INFO:Declaring custom model
2025-09-08 09:24:39,047:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:24:39,048:INFO:Cross validation set to False
2025-09-08 09:24:39,048:INFO:Fitting Model
2025-09-08 09:24:39,057:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:24:39,057:INFO:create_model() successfully completed......................................
2025-09-08 09:24:39,149:INFO:_master_model_container: 4
2025-09-08 09:24:39,150:INFO:_display_container: 2
2025-09-08 09:24:39,150:INFO:DecisionTreeRegressor(random_state=791)
2025-09-08 09:24:39,150:INFO:compare_models() successfully completed......................................
2025-09-08 09:24:39,151:INFO:Initializing finalize_model()
2025-09-08 09:24:39,151:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=DecisionTreeRegressor(random_state=791), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-09-08 09:24:39,151:INFO:Finalizing DecisionTreeRegressor(random_state=791)
2025-09-08 09:24:39,154:INFO:Initializing create_model()
2025-09-08 09:24:39,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000015468599450>, estimator=DecisionTreeRegressor(random_state=791), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-09-08 09:24:39,154:INFO:Checking exceptions
2025-09-08 09:24:39,155:INFO:Importing libraries
2025-09-08 09:24:39,155:INFO:Copying training dataset
2025-09-08 09:24:39,155:INFO:Defining folds
2025-09-08 09:24:39,155:INFO:Declaring metric variables
2025-09-08 09:24:39,155:INFO:Importing untrained model
2025-09-08 09:24:39,155:INFO:Declaring custom model
2025-09-08 09:24:39,155:INFO:Decision Tree Regressor Imported successfully
2025-09-08 09:24:39,156:INFO:Cross validation set to False
2025-09-08 09:24:39,156:INFO:Fitting Model
2025-09-08 09:24:39,165:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:24:39,165:INFO:create_model() successfully completed......................................
2025-09-08 09:24:39,257:INFO:_master_model_container: 4
2025-09-08 09:24:39,257:INFO:_display_container: 2
2025-09-08 09:24:39,261:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:24:39,261:INFO:finalize_model() successfully completed......................................
2025-09-08 09:24:39,338:INFO:Initializing save_model()
2025-09-08 09:24:39,338:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))]), model_name=out/Out of Bounds P2/pycaret/model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost...
                                             'Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Adjustment Count P2',
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-09-08 09:24:39,338:INFO:Adding model into prep_pipe
2025-09-08 09:24:39,338:WARNING:Only Model saved as it was a pipeline.
2025-09-08 09:24:39,346:INFO:out/Out of Bounds P2/pycaret/model.pkl saved in current working directory
2025-09-08 09:24:39,348:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Race Number', 'Passes P1',
                                             'Passes P2', 'Collisions',
                                             'Choices', 'Proportion Ahead P1',
                                             'Proportion Ahead P2', 'Win P1',
                                             'Win P2', 'Progress P1',
                                             'Progress P2', 'Out of Bounds P1',
                                             'Progress Cost P1',
                                             'Progress Cost P2',
                                             'Bounds Cost P1', 'Bounds Cost P2',
                                             'Proximity Cost P1',
                                             'Proximity Cost P2',...
                                             'P2 Vector Cost'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', DecisionTreeRegressor(random_state=791))])
2025-09-08 09:24:39,348:INFO:save_model() successfully completed......................................
2025-09-08 09:24:39,512:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:197: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False)

2025-09-08 09:24:39,857:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\dataset.py:195: FutureWarning: The NumPy global RNG was seeded by calling `np.random.seed`. In a future version this function will no longer use the global RNG. Pass `rng` explicitly to opt-in to the new behaviour and silence this warning.
  shap.summary_plot(shap_values, df, show=False, plot_type="bar")

2025-09-11 13:21:43,061:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-11 13:21:43,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-11 13:21:43,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-11 13:21:43,063:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-09-11 13:22:14,536:WARNING:c:\Users\toazb\Documents\GitHub\scenario_visualization\scenario-visualization-toolkit-v1.0.4-dark\gui.py:488: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  val = df.iloc[i][0]

2025-09-11 13:22:45,592:INFO:PyCaret RegressionExperiment
2025-09-11 13:22:45,592:INFO:Logging name: reg-default-name
2025-09-11 13:22:45,592:INFO:ML Usecase: MLUsecase.REGRESSION
2025-09-11 13:22:45,592:INFO:version 3.3.2
2025-09-11 13:22:45,592:INFO:Initializing setup()
2025-09-11 13:22:45,592:INFO:self.USI: 29ec
2025-09-11 13:22:45,592:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'USI', 'memory', 'target_param', 'X_test', 'transform_target_param', 'log_plots_param', 'n_jobs_param', 'X_train', 'exp_name_log', 'y', '_ml_usecase', 'exp_id', 'data', '_available_plots', 'pipeline', 'idx', 'gpu_n_jobs_param', 'fold_generator', 'y_train', 'seed', 'html_param', 'y_test', 'X', 'logging_param', 'fold_shuffle_param'}
2025-09-11 13:22:45,592:INFO:Checking environment
2025-09-11 13:22:45,592:INFO:python_version: 3.11.9
2025-09-11 13:22:45,592:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2025-09-11 13:22:45,592:INFO:machine: AMD64
2025-09-11 13:22:45,599:INFO:platform: Windows-10-10.0.26100-SP0
2025-09-11 13:22:45,599:INFO:Memory: svmem(total=16766066688, available=2697314304, percent=83.9, used=14068752384, free=2697314304)
2025-09-11 13:22:45,599:INFO:Physical Core: 16
2025-09-11 13:22:45,599:INFO:Logical Core: 22
2025-09-11 13:22:45,599:INFO:Checking libraries
2025-09-11 13:22:45,599:INFO:System:
2025-09-11 13:22:45,599:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2025-09-11 13:22:45,599:INFO:executable: C:\Users\toazb\Documents\GitHub\scenario_visualization\.venv\Scripts\python.exe
2025-09-11 13:22:45,599:INFO:   machine: Windows-10-10.0.26100-SP0
2025-09-11 13:22:45,599:INFO:PyCaret required dependencies:
2025-09-11 13:22:45,651:INFO:                 pip: 25.2
2025-09-11 13:22:45,651:INFO:          setuptools: 65.5.0
2025-09-11 13:22:45,651:INFO:             pycaret: 3.3.2
2025-09-11 13:22:45,651:INFO:             IPython: 9.5.0
2025-09-11 13:22:45,652:INFO:          ipywidgets: 8.1.7
2025-09-11 13:22:45,652:INFO:                tqdm: 4.67.1
2025-09-11 13:22:45,652:INFO:               numpy: 1.26.4
2025-09-11 13:22:45,652:INFO:              pandas: 2.1.4
2025-09-11 13:22:45,652:INFO:              jinja2: 3.1.6
2025-09-11 13:22:45,652:INFO:               scipy: 1.11.4
2025-09-11 13:22:45,652:INFO:              joblib: 1.3.2
2025-09-11 13:22:45,652:INFO:             sklearn: 1.4.2
2025-09-11 13:22:45,652:INFO:                pyod: 2.0.5
2025-09-11 13:22:45,652:INFO:            imblearn: 0.14.0
2025-09-11 13:22:45,652:INFO:   category_encoders: 2.7.0
2025-09-11 13:22:45,652:INFO:            lightgbm: 4.6.0
2025-09-11 13:22:45,652:INFO:               numba: 0.61.2
2025-09-11 13:22:45,652:INFO:            requests: 2.32.5
2025-09-11 13:22:45,652:INFO:          matplotlib: 3.7.5
2025-09-11 13:22:45,652:INFO:          scikitplot: 0.3.7
2025-09-11 13:22:45,652:INFO:         yellowbrick: 1.5
2025-09-11 13:22:45,652:INFO:              plotly: 6.3.0
2025-09-11 13:22:45,652:INFO:    plotly-resampler: Not installed
2025-09-11 13:22:45,652:INFO:             kaleido: 1.0.0
2025-09-11 13:22:45,652:INFO:           schemdraw: 0.15
2025-09-11 13:22:45,652:INFO:         statsmodels: 0.14.5
2025-09-11 13:22:45,652:INFO:              sktime: 0.26.0
2025-09-11 13:22:45,652:INFO:               tbats: 1.1.3
2025-09-11 13:22:45,652:INFO:            pmdarima: 2.0.4
2025-09-11 13:22:45,652:INFO:              psutil: 7.0.0
2025-09-11 13:22:45,652:INFO:          markupsafe: 3.0.2
2025-09-11 13:22:45,652:INFO:             pickle5: Not installed
2025-09-11 13:22:45,652:INFO:         cloudpickle: 3.1.1
2025-09-11 13:22:45,652:INFO:         deprecation: 2.1.0
2025-09-11 13:22:45,652:INFO:              xxhash: 3.5.0
2025-09-11 13:22:45,652:INFO:           wurlitzer: Not installed
2025-09-11 13:22:45,652:INFO:PyCaret optional dependencies:
2025-09-11 13:22:45,755:INFO:                shap: 0.48.0
2025-09-11 13:22:45,756:INFO:           interpret: Not installed
2025-09-11 13:22:45,756:INFO:                umap: Not installed
2025-09-11 13:22:45,756:INFO:     ydata_profiling: Not installed
2025-09-11 13:22:45,756:INFO:  explainerdashboard: Not installed
2025-09-11 13:22:45,756:INFO:             autoviz: Not installed
2025-09-11 13:22:45,756:INFO:           fairlearn: Not installed
2025-09-11 13:22:45,756:INFO:          deepchecks: Not installed
2025-09-11 13:22:45,756:INFO:             xgboost: 3.0.5
2025-09-11 13:22:45,756:INFO:            catboost: Not installed
2025-09-11 13:22:45,756:INFO:              kmodes: Not installed
2025-09-11 13:22:45,756:INFO:             mlxtend: Not installed
2025-09-11 13:22:45,756:INFO:       statsforecast: Not installed
2025-09-11 13:22:45,756:INFO:        tune_sklearn: Not installed
2025-09-11 13:22:45,756:INFO:                 ray: Not installed
2025-09-11 13:22:45,756:INFO:            hyperopt: Not installed
2025-09-11 13:22:45,756:INFO:              optuna: Not installed
2025-09-11 13:22:45,756:INFO:               skopt: Not installed
2025-09-11 13:22:45,756:INFO:              mlflow: Not installed
2025-09-11 13:22:45,756:INFO:              gradio: Not installed
2025-09-11 13:22:45,756:INFO:             fastapi: Not installed
2025-09-11 13:22:45,756:INFO:             uvicorn: Not installed
2025-09-11 13:22:45,756:INFO:              m2cgen: Not installed
2025-09-11 13:22:45,756:INFO:           evidently: Not installed
2025-09-11 13:22:45,756:INFO:               fugue: Not installed
2025-09-11 13:22:45,756:INFO:           streamlit: Not installed
2025-09-11 13:22:45,756:INFO:             prophet: Not installed
2025-09-11 13:22:45,756:INFO:None
2025-09-11 13:22:45,756:INFO:Set up data.
2025-09-11 13:22:47,277:INFO:Set up folding strategy.
2025-09-11 13:22:47,277:INFO:Set up train/test split.
2025-09-11 13:22:48,156:INFO:Set up index.
2025-09-11 13:22:48,199:INFO:Assigning column types.
2025-09-11 13:22:49,393:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-09-11 13:22:49,394:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-11 13:22:49,397:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-11 13:22:49,400:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,196:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,218:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:50,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:50,220:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,222:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,224:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,964:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:50,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:50,965:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-09-11 13:22:50,968:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-11 13:22:50,969:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-11 13:22:51,685:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:51,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:51,707:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:51,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:51,710:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-09-11 13:22:51,713:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-11 13:22:52,450:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:52,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:52,472:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:52,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:52,474:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-09-11 13:22:52,479:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-11 13:22:53,206:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:53,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:53,228:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:53,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:53,234:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-09-11 13:22:54,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:54,080:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:54,080:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:54,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:54,082:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-09-11 13:22:54,784:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:54,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:54,806:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:54,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:55,485:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:55,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-09-11 13:22:55,507:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:55,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:55,508:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-09-11 13:22:56,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:56,175:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:56,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:56,881:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-09-11 13:22:56,903:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:56,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:56,905:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-09-11 13:22:57,556:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:57,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:58,258:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:22:58,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:22:58,281:INFO:Preparing preprocessing pipeline...
2025-09-11 13:22:58,281:INFO:Set up simple imputation.
2025-09-11 13:22:58,281:INFO:Set up feature normalization.
2025-09-11 13:23:00,782:INFO:Finished creating preprocessing pipeline.
2025-09-11 13:23:00,786:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\toazb\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Theta_a1', 'Theta_b1', 'Theta_c1',
                                             'Theta_a2', 'Theta_b2', 'Theta_c2',
                                             'Action_space1', 'action2',
                                             'Action_space2', 'A1_1_1',
                                             'A1_1_2', 'A1_1_3', 'A1_1_4',
                                             'A1_1_5', 'A1_1_6', 'A1_1_7',
                                             'A1_1_8', 'A1_1_9', 'A1_2_1',
                                             'A1_2_2', 'A1_2_3', 'A1_2_4',
                                             'A1_2_5', 'A1_2_6', 'A1_2_7',
                                             'A1_2_8', 'A1_2_9', 'A1_3_1',
                                             'A1_3_2', 'A1_3_3', ...],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2025-09-11 13:23:00,786:INFO:Creating final display dataframe.
2025-09-11 13:23:05,335:INFO:Setup _display_container:                     Description             Value
0                    Session id               791
1                        Target           action1
2                   Target type        Regression
3           Original data shape     (143208, 506)
4        Transformed data shape     (143208, 506)
5   Transformed train set shape     (100245, 506)
6    Transformed test set shape      (42963, 506)
7              Numeric features               505
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              29ec
2025-09-11 13:23:05,990:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:23:05,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:23:06,671:INFO:Soft dependency imported: xgboost: 3.0.5
2025-09-11 13:23:06,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-09-11 13:23:06,673:INFO:setup() successfully completed in 21.09s...............
2025-09-11 13:23:06,673:INFO:Initializing compare_models()
2025-09-11 13:23:06,673:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0B4FF6410>, include=['dt', 'rf', 'gbr', 'xgboost'], exclude=None, fold=None, round=4, cross_validation=True, sort=RMSE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E0B4FF6410>, 'include': ['dt', 'rf', 'gbr', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'RMSE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-09-11 13:23:06,673:INFO:Checking exceptions
2025-09-11 13:23:06,987:INFO:Preparing display monitor
2025-09-11 13:23:06,996:INFO:Initializing Decision Tree Regressor
2025-09-11 13:23:06,996:INFO:Total runtime is 0.0 minutes
2025-09-11 13:23:06,996:INFO:SubProcess create_model() called ==================================
2025-09-11 13:23:06,996:INFO:Initializing create_model()
2025-09-11 13:23:06,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0B4FF6410>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1359BD1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-11 13:23:06,997:INFO:Checking exceptions
2025-09-11 13:23:06,997:INFO:Importing libraries
2025-09-11 13:23:06,997:INFO:Copying training dataset
2025-09-11 13:23:07,795:INFO:Defining folds
2025-09-11 13:23:07,795:INFO:Declaring metric variables
2025-09-11 13:23:07,795:INFO:Importing untrained model
2025-09-11 13:23:07,796:INFO:Decision Tree Regressor Imported successfully
2025-09-11 13:23:07,796:INFO:Starting cross validation
2025-09-11 13:23:07,805:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-09-11 13:23:29,422:INFO:Calculating mean and std
2025-09-11 13:23:29,436:INFO:Creating metrics dataframe
2025-09-11 13:23:29,467:INFO:Uploading results into container
2025-09-11 13:23:29,470:INFO:Uploading model into container now
2025-09-11 13:23:29,476:INFO:_master_model_container: 1
2025-09-11 13:23:29,476:INFO:_display_container: 2
2025-09-11 13:23:29,482:INFO:DecisionTreeRegressor(random_state=791)
2025-09-11 13:23:29,482:INFO:create_model() successfully completed......................................
2025-09-11 13:23:29,977:INFO:SubProcess create_model() end ==================================
2025-09-11 13:23:29,977:INFO:Creating metrics dataframe
2025-09-11 13:23:29,980:INFO:Initializing Random Forest Regressor
2025-09-11 13:23:29,980:INFO:Total runtime is 0.38307379484176635 minutes
2025-09-11 13:23:29,981:INFO:SubProcess create_model() called ==================================
2025-09-11 13:23:29,981:INFO:Initializing create_model()
2025-09-11 13:23:29,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E0B4FF6410>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E1359BD1D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-09-11 13:23:29,981:INFO:Checking exceptions
2025-09-11 13:23:29,981:INFO:Importing libraries
2025-09-11 13:23:29,981:INFO:Copying training dataset
2025-09-11 13:23:31,293:INFO:Defining folds
2025-09-11 13:23:31,293:INFO:Declaring metric variables
2025-09-11 13:23:31,293:INFO:Importing untrained model
2025-09-11 13:23:31,294:INFO:Random Forest Regressor Imported successfully
2025-09-11 13:23:31,294:INFO:Starting cross validation
2025-09-11 13:23:31,295:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
